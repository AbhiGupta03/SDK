<?php
/**
 * UpdateClientResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  com\hydrogen\integration
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Hydrogen Integration API
 *
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.14
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace com\hydrogen\integration\Model;

use \ArrayAccess;
use \com\hydrogen\integration\ObjectSerializer;

/**
 * UpdateClientResponse Class Doc Comment
 *
 * @category Class
 * @package  com\hydrogen\integration
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class UpdateClientResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'UpdateClientResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'ack_customer_agreement' => 'bool',
        'ack_disclosure_rule14b' => 'bool',
        'ack_finders_fee' => 'bool',
        'ack_foreign_finders_fee' => 'bool',
        'ack_joint_customer_agreement' => 'bool',
        'ack_joint_disclosure_rule14b' => 'bool',
        'ack_joint_finders_fee' => 'bool',
        'ack_joint_foreign_finders_fee' => 'bool',
        'ack_joint_market_data' => 'bool',
        'ack_market_data' => 'bool',
        'ack_signed_by' => 'string',
        'ack_signed_when' => 'string',
        'address_line1' => 'string',
        'address_line2' => 'string',
        'address_proof_review_by' => 'string',
        'address_proof_review_when' => '\DateTime',
        'annual_income' => 'string',
        'annual_income_number' => 'int',
        'approved_by' => 'string',
        'approved_when' => '\DateTime',
        'avatar_url' => 'string',
        'bad_password_count' => 'int',
        'brand_ambassador' => 'bool',
        'citizenship' => 'string',
        'city' => 'string',
        'country_id' => 'string',
        'created_when' => '\DateTime',
        'director' => 'bool',
        'display_name' => 'string',
        'dob' => '\DateTime',
        'email' => 'string',
        'employer_business' => 'string',
        'employer_company' => 'string',
        'employer_country_id' => 'string',
        'employer_is_broker' => 'bool',
        'employment_status' => '\com\hydrogen\integration\Model\ExpandedProperty',
        'employment_years' => 'int',
        'first_name' => 'string',
        'gender' => '\com\hydrogen\integration\Model\ExpandedProperty',
        'id' => 'string',
        'id_no' => 'string',
        'investment_experience' => '\com\hydrogen\integration\Model\ExpandedProperty',
        'investment_objectives' => '\com\hydrogen\integration\Model\ExpandedProperty',
        'kyc_when' => '\DateTime',
        'language_id' => 'string',
        'last_login_when' => '\DateTime',
        'last_name' => 'string',
        'margin_default' => 'int',
        'marital_status' => '\com\hydrogen\integration\Model\ExpandedProperty',
        'networth_liquid' => 'string',
        'networth_total' => 'string',
        'ownership_type' => 'string',
        'parent_ib' => '\com\hydrogen\integration\Model\ParentIB',
        'phone' => 'string',
        'picture_review_by' => 'string',
        'picture_review_when' => '\DateTime',
        'politcally_exposed' => 'bool',
        'referral_code' => 'string',
        'risk_tolerance' => 'string',
        'state_province' => 'string',
        'status' => '\com\hydrogen\integration\Model\ExpandedProperty',
        'terms_of_use' => 'bool',
        'updated_when' => '\DateTime',
        'us_citizen' => 'bool',
        'user_note_qty' => 'int',
        'user_type' => '\com\hydrogen\integration\Model\ExpandedProperty',
        'username' => 'string',
        'wlp_id' => 'string',
        'zip_postal_code' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'ack_customer_agreement' => null,
        'ack_disclosure_rule14b' => null,
        'ack_finders_fee' => null,
        'ack_foreign_finders_fee' => null,
        'ack_joint_customer_agreement' => null,
        'ack_joint_disclosure_rule14b' => null,
        'ack_joint_finders_fee' => null,
        'ack_joint_foreign_finders_fee' => null,
        'ack_joint_market_data' => null,
        'ack_market_data' => null,
        'ack_signed_by' => null,
        'ack_signed_when' => null,
        'address_line1' => null,
        'address_line2' => null,
        'address_proof_review_by' => 'uuid',
        'address_proof_review_when' => 'date-time',
        'annual_income' => null,
        'annual_income_number' => 'int32',
        'approved_by' => 'uuid',
        'approved_when' => 'date-time',
        'avatar_url' => null,
        'bad_password_count' => 'int32',
        'brand_ambassador' => null,
        'citizenship' => null,
        'city' => null,
        'country_id' => null,
        'created_when' => 'date-time',
        'director' => null,
        'display_name' => null,
        'dob' => 'date-time',
        'email' => null,
        'employer_business' => null,
        'employer_company' => null,
        'employer_country_id' => null,
        'employer_is_broker' => null,
        'employment_status' => null,
        'employment_years' => 'int32',
        'first_name' => null,
        'gender' => null,
        'id' => 'uuid',
        'id_no' => null,
        'investment_experience' => null,
        'investment_objectives' => null,
        'kyc_when' => 'date-time',
        'language_id' => null,
        'last_login_when' => 'date-time',
        'last_name' => null,
        'margin_default' => 'int32',
        'marital_status' => null,
        'networth_liquid' => null,
        'networth_total' => null,
        'ownership_type' => null,
        'parent_ib' => null,
        'phone' => null,
        'picture_review_by' => 'uuid',
        'picture_review_when' => 'date-time',
        'politcally_exposed' => null,
        'referral_code' => null,
        'risk_tolerance' => null,
        'state_province' => null,
        'status' => null,
        'terms_of_use' => null,
        'updated_when' => 'date-time',
        'us_citizen' => null,
        'user_note_qty' => 'int32',
        'user_type' => null,
        'username' => null,
        'wlp_id' => null,
        'zip_postal_code' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'ack_customer_agreement' => 'ack_customer_agreement',
        'ack_disclosure_rule14b' => 'ack_disclosure_rule14b',
        'ack_finders_fee' => 'ack_finders_fee',
        'ack_foreign_finders_fee' => 'ack_foreign_finders_fee',
        'ack_joint_customer_agreement' => 'ack_joint_customer_agreement',
        'ack_joint_disclosure_rule14b' => 'ack_joint_disclosure_rule14b',
        'ack_joint_finders_fee' => 'ack_joint_finders_fee',
        'ack_joint_foreign_finders_fee' => 'ack_joint_foreign_finders_fee',
        'ack_joint_market_data' => 'ack_joint_market_data',
        'ack_market_data' => 'ack_market_data',
        'ack_signed_by' => 'ack_signed_by',
        'ack_signed_when' => 'ack_signed_when',
        'address_line1' => 'address_line1',
        'address_line2' => 'address_line2',
        'address_proof_review_by' => 'address_proof_review_by',
        'address_proof_review_when' => 'address_proof_review_when',
        'annual_income' => 'annual_income',
        'annual_income_number' => 'annual_income_number',
        'approved_by' => 'approved_by',
        'approved_when' => 'approved_when',
        'avatar_url' => 'avatar_url',
        'bad_password_count' => 'bad_password_count',
        'brand_ambassador' => 'brand_ambassador',
        'citizenship' => 'citizenship',
        'city' => 'city',
        'country_id' => 'country_id',
        'created_when' => 'created_when',
        'director' => 'director',
        'display_name' => 'display_name',
        'dob' => 'dob',
        'email' => 'email',
        'employer_business' => 'employer_business',
        'employer_company' => 'employer_company',
        'employer_country_id' => 'employer_country_id',
        'employer_is_broker' => 'employer_is_broker',
        'employment_status' => 'employment_status',
        'employment_years' => 'employment_years',
        'first_name' => 'first_name',
        'gender' => 'gender',
        'id' => 'id',
        'id_no' => 'id_no',
        'investment_experience' => 'investment_experience',
        'investment_objectives' => 'investment_objectives',
        'kyc_when' => 'kyc_when',
        'language_id' => 'language_id',
        'last_login_when' => 'last_login_when',
        'last_name' => 'last_name',
        'margin_default' => 'margin_default',
        'marital_status' => 'marital_status',
        'networth_liquid' => 'networth_liquid',
        'networth_total' => 'networth_total',
        'ownership_type' => 'ownership_type',
        'parent_ib' => 'parent_ib',
        'phone' => 'phone',
        'picture_review_by' => 'picture_review_by',
        'picture_review_when' => 'picture_review_when',
        'politcally_exposed' => 'politcally_exposed',
        'referral_code' => 'referral_code',
        'risk_tolerance' => 'risk_tolerance',
        'state_province' => 'state_province',
        'status' => 'status',
        'terms_of_use' => 'terms_of_use',
        'updated_when' => 'updated_when',
        'us_citizen' => 'us_citizen',
        'user_note_qty' => 'user_note_qty',
        'user_type' => 'user_type',
        'username' => 'username',
        'wlp_id' => 'wlp_id',
        'zip_postal_code' => 'zip_postal_code'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'ack_customer_agreement' => 'setAckCustomerAgreement',
        'ack_disclosure_rule14b' => 'setAckDisclosureRule14b',
        'ack_finders_fee' => 'setAckFindersFee',
        'ack_foreign_finders_fee' => 'setAckForeignFindersFee',
        'ack_joint_customer_agreement' => 'setAckJointCustomerAgreement',
        'ack_joint_disclosure_rule14b' => 'setAckJointDisclosureRule14b',
        'ack_joint_finders_fee' => 'setAckJointFindersFee',
        'ack_joint_foreign_finders_fee' => 'setAckJointForeignFindersFee',
        'ack_joint_market_data' => 'setAckJointMarketData',
        'ack_market_data' => 'setAckMarketData',
        'ack_signed_by' => 'setAckSignedBy',
        'ack_signed_when' => 'setAckSignedWhen',
        'address_line1' => 'setAddressLine1',
        'address_line2' => 'setAddressLine2',
        'address_proof_review_by' => 'setAddressProofReviewBy',
        'address_proof_review_when' => 'setAddressProofReviewWhen',
        'annual_income' => 'setAnnualIncome',
        'annual_income_number' => 'setAnnualIncomeNumber',
        'approved_by' => 'setApprovedBy',
        'approved_when' => 'setApprovedWhen',
        'avatar_url' => 'setAvatarUrl',
        'bad_password_count' => 'setBadPasswordCount',
        'brand_ambassador' => 'setBrandAmbassador',
        'citizenship' => 'setCitizenship',
        'city' => 'setCity',
        'country_id' => 'setCountryId',
        'created_when' => 'setCreatedWhen',
        'director' => 'setDirector',
        'display_name' => 'setDisplayName',
        'dob' => 'setDob',
        'email' => 'setEmail',
        'employer_business' => 'setEmployerBusiness',
        'employer_company' => 'setEmployerCompany',
        'employer_country_id' => 'setEmployerCountryId',
        'employer_is_broker' => 'setEmployerIsBroker',
        'employment_status' => 'setEmploymentStatus',
        'employment_years' => 'setEmploymentYears',
        'first_name' => 'setFirstName',
        'gender' => 'setGender',
        'id' => 'setId',
        'id_no' => 'setIdNo',
        'investment_experience' => 'setInvestmentExperience',
        'investment_objectives' => 'setInvestmentObjectives',
        'kyc_when' => 'setKycWhen',
        'language_id' => 'setLanguageId',
        'last_login_when' => 'setLastLoginWhen',
        'last_name' => 'setLastName',
        'margin_default' => 'setMarginDefault',
        'marital_status' => 'setMaritalStatus',
        'networth_liquid' => 'setNetworthLiquid',
        'networth_total' => 'setNetworthTotal',
        'ownership_type' => 'setOwnershipType',
        'parent_ib' => 'setParentIb',
        'phone' => 'setPhone',
        'picture_review_by' => 'setPictureReviewBy',
        'picture_review_when' => 'setPictureReviewWhen',
        'politcally_exposed' => 'setPolitcallyExposed',
        'referral_code' => 'setReferralCode',
        'risk_tolerance' => 'setRiskTolerance',
        'state_province' => 'setStateProvince',
        'status' => 'setStatus',
        'terms_of_use' => 'setTermsOfUse',
        'updated_when' => 'setUpdatedWhen',
        'us_citizen' => 'setUsCitizen',
        'user_note_qty' => 'setUserNoteQty',
        'user_type' => 'setUserType',
        'username' => 'setUsername',
        'wlp_id' => 'setWlpId',
        'zip_postal_code' => 'setZipPostalCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'ack_customer_agreement' => 'getAckCustomerAgreement',
        'ack_disclosure_rule14b' => 'getAckDisclosureRule14b',
        'ack_finders_fee' => 'getAckFindersFee',
        'ack_foreign_finders_fee' => 'getAckForeignFindersFee',
        'ack_joint_customer_agreement' => 'getAckJointCustomerAgreement',
        'ack_joint_disclosure_rule14b' => 'getAckJointDisclosureRule14b',
        'ack_joint_finders_fee' => 'getAckJointFindersFee',
        'ack_joint_foreign_finders_fee' => 'getAckJointForeignFindersFee',
        'ack_joint_market_data' => 'getAckJointMarketData',
        'ack_market_data' => 'getAckMarketData',
        'ack_signed_by' => 'getAckSignedBy',
        'ack_signed_when' => 'getAckSignedWhen',
        'address_line1' => 'getAddressLine1',
        'address_line2' => 'getAddressLine2',
        'address_proof_review_by' => 'getAddressProofReviewBy',
        'address_proof_review_when' => 'getAddressProofReviewWhen',
        'annual_income' => 'getAnnualIncome',
        'annual_income_number' => 'getAnnualIncomeNumber',
        'approved_by' => 'getApprovedBy',
        'approved_when' => 'getApprovedWhen',
        'avatar_url' => 'getAvatarUrl',
        'bad_password_count' => 'getBadPasswordCount',
        'brand_ambassador' => 'getBrandAmbassador',
        'citizenship' => 'getCitizenship',
        'city' => 'getCity',
        'country_id' => 'getCountryId',
        'created_when' => 'getCreatedWhen',
        'director' => 'getDirector',
        'display_name' => 'getDisplayName',
        'dob' => 'getDob',
        'email' => 'getEmail',
        'employer_business' => 'getEmployerBusiness',
        'employer_company' => 'getEmployerCompany',
        'employer_country_id' => 'getEmployerCountryId',
        'employer_is_broker' => 'getEmployerIsBroker',
        'employment_status' => 'getEmploymentStatus',
        'employment_years' => 'getEmploymentYears',
        'first_name' => 'getFirstName',
        'gender' => 'getGender',
        'id' => 'getId',
        'id_no' => 'getIdNo',
        'investment_experience' => 'getInvestmentExperience',
        'investment_objectives' => 'getInvestmentObjectives',
        'kyc_when' => 'getKycWhen',
        'language_id' => 'getLanguageId',
        'last_login_when' => 'getLastLoginWhen',
        'last_name' => 'getLastName',
        'margin_default' => 'getMarginDefault',
        'marital_status' => 'getMaritalStatus',
        'networth_liquid' => 'getNetworthLiquid',
        'networth_total' => 'getNetworthTotal',
        'ownership_type' => 'getOwnershipType',
        'parent_ib' => 'getParentIb',
        'phone' => 'getPhone',
        'picture_review_by' => 'getPictureReviewBy',
        'picture_review_when' => 'getPictureReviewWhen',
        'politcally_exposed' => 'getPolitcallyExposed',
        'referral_code' => 'getReferralCode',
        'risk_tolerance' => 'getRiskTolerance',
        'state_province' => 'getStateProvince',
        'status' => 'getStatus',
        'terms_of_use' => 'getTermsOfUse',
        'updated_when' => 'getUpdatedWhen',
        'us_citizen' => 'getUsCitizen',
        'user_note_qty' => 'getUserNoteQty',
        'user_type' => 'getUserType',
        'username' => 'getUsername',
        'wlp_id' => 'getWlpId',
        'zip_postal_code' => 'getZipPostalCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const LANGUAGE_ID_EN_US = 'en_US';
    const LANGUAGE_ID_ZH_CN = 'zh_CN';
    const LANGUAGE_ID_ES_ES = 'es_ES';
    const LANGUAGE_ID_PT_BR = 'pt_BR';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getLanguageIdAllowableValues()
    {
        return [
            self::LANGUAGE_ID_EN_US,
            self::LANGUAGE_ID_ZH_CN,
            self::LANGUAGE_ID_ES_ES,
            self::LANGUAGE_ID_PT_BR,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['ack_customer_agreement'] = isset($data['ack_customer_agreement']) ? $data['ack_customer_agreement'] : null;
        $this->container['ack_disclosure_rule14b'] = isset($data['ack_disclosure_rule14b']) ? $data['ack_disclosure_rule14b'] : null;
        $this->container['ack_finders_fee'] = isset($data['ack_finders_fee']) ? $data['ack_finders_fee'] : null;
        $this->container['ack_foreign_finders_fee'] = isset($data['ack_foreign_finders_fee']) ? $data['ack_foreign_finders_fee'] : null;
        $this->container['ack_joint_customer_agreement'] = isset($data['ack_joint_customer_agreement']) ? $data['ack_joint_customer_agreement'] : null;
        $this->container['ack_joint_disclosure_rule14b'] = isset($data['ack_joint_disclosure_rule14b']) ? $data['ack_joint_disclosure_rule14b'] : null;
        $this->container['ack_joint_finders_fee'] = isset($data['ack_joint_finders_fee']) ? $data['ack_joint_finders_fee'] : null;
        $this->container['ack_joint_foreign_finders_fee'] = isset($data['ack_joint_foreign_finders_fee']) ? $data['ack_joint_foreign_finders_fee'] : null;
        $this->container['ack_joint_market_data'] = isset($data['ack_joint_market_data']) ? $data['ack_joint_market_data'] : null;
        $this->container['ack_market_data'] = isset($data['ack_market_data']) ? $data['ack_market_data'] : null;
        $this->container['ack_signed_by'] = isset($data['ack_signed_by']) ? $data['ack_signed_by'] : null;
        $this->container['ack_signed_when'] = isset($data['ack_signed_when']) ? $data['ack_signed_when'] : null;
        $this->container['address_line1'] = isset($data['address_line1']) ? $data['address_line1'] : null;
        $this->container['address_line2'] = isset($data['address_line2']) ? $data['address_line2'] : null;
        $this->container['address_proof_review_by'] = isset($data['address_proof_review_by']) ? $data['address_proof_review_by'] : null;
        $this->container['address_proof_review_when'] = isset($data['address_proof_review_when']) ? $data['address_proof_review_when'] : null;
        $this->container['annual_income'] = isset($data['annual_income']) ? $data['annual_income'] : null;
        $this->container['annual_income_number'] = isset($data['annual_income_number']) ? $data['annual_income_number'] : null;
        $this->container['approved_by'] = isset($data['approved_by']) ? $data['approved_by'] : null;
        $this->container['approved_when'] = isset($data['approved_when']) ? $data['approved_when'] : null;
        $this->container['avatar_url'] = isset($data['avatar_url']) ? $data['avatar_url'] : null;
        $this->container['bad_password_count'] = isset($data['bad_password_count']) ? $data['bad_password_count'] : null;
        $this->container['brand_ambassador'] = isset($data['brand_ambassador']) ? $data['brand_ambassador'] : null;
        $this->container['citizenship'] = isset($data['citizenship']) ? $data['citizenship'] : null;
        $this->container['city'] = isset($data['city']) ? $data['city'] : null;
        $this->container['country_id'] = isset($data['country_id']) ? $data['country_id'] : null;
        $this->container['created_when'] = isset($data['created_when']) ? $data['created_when'] : null;
        $this->container['director'] = isset($data['director']) ? $data['director'] : null;
        $this->container['display_name'] = isset($data['display_name']) ? $data['display_name'] : null;
        $this->container['dob'] = isset($data['dob']) ? $data['dob'] : null;
        $this->container['email'] = isset($data['email']) ? $data['email'] : null;
        $this->container['employer_business'] = isset($data['employer_business']) ? $data['employer_business'] : null;
        $this->container['employer_company'] = isset($data['employer_company']) ? $data['employer_company'] : null;
        $this->container['employer_country_id'] = isset($data['employer_country_id']) ? $data['employer_country_id'] : null;
        $this->container['employer_is_broker'] = isset($data['employer_is_broker']) ? $data['employer_is_broker'] : null;
        $this->container['employment_status'] = isset($data['employment_status']) ? $data['employment_status'] : null;
        $this->container['employment_years'] = isset($data['employment_years']) ? $data['employment_years'] : null;
        $this->container['first_name'] = isset($data['first_name']) ? $data['first_name'] : null;
        $this->container['gender'] = isset($data['gender']) ? $data['gender'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['id_no'] = isset($data['id_no']) ? $data['id_no'] : null;
        $this->container['investment_experience'] = isset($data['investment_experience']) ? $data['investment_experience'] : null;
        $this->container['investment_objectives'] = isset($data['investment_objectives']) ? $data['investment_objectives'] : null;
        $this->container['kyc_when'] = isset($data['kyc_when']) ? $data['kyc_when'] : null;
        $this->container['language_id'] = isset($data['language_id']) ? $data['language_id'] : null;
        $this->container['last_login_when'] = isset($data['last_login_when']) ? $data['last_login_when'] : null;
        $this->container['last_name'] = isset($data['last_name']) ? $data['last_name'] : null;
        $this->container['margin_default'] = isset($data['margin_default']) ? $data['margin_default'] : null;
        $this->container['marital_status'] = isset($data['marital_status']) ? $data['marital_status'] : null;
        $this->container['networth_liquid'] = isset($data['networth_liquid']) ? $data['networth_liquid'] : null;
        $this->container['networth_total'] = isset($data['networth_total']) ? $data['networth_total'] : null;
        $this->container['ownership_type'] = isset($data['ownership_type']) ? $data['ownership_type'] : null;
        $this->container['parent_ib'] = isset($data['parent_ib']) ? $data['parent_ib'] : null;
        $this->container['phone'] = isset($data['phone']) ? $data['phone'] : null;
        $this->container['picture_review_by'] = isset($data['picture_review_by']) ? $data['picture_review_by'] : null;
        $this->container['picture_review_when'] = isset($data['picture_review_when']) ? $data['picture_review_when'] : null;
        $this->container['politcally_exposed'] = isset($data['politcally_exposed']) ? $data['politcally_exposed'] : null;
        $this->container['referral_code'] = isset($data['referral_code']) ? $data['referral_code'] : null;
        $this->container['risk_tolerance'] = isset($data['risk_tolerance']) ? $data['risk_tolerance'] : null;
        $this->container['state_province'] = isset($data['state_province']) ? $data['state_province'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['terms_of_use'] = isset($data['terms_of_use']) ? $data['terms_of_use'] : null;
        $this->container['updated_when'] = isset($data['updated_when']) ? $data['updated_when'] : null;
        $this->container['us_citizen'] = isset($data['us_citizen']) ? $data['us_citizen'] : null;
        $this->container['user_note_qty'] = isset($data['user_note_qty']) ? $data['user_note_qty'] : null;
        $this->container['user_type'] = isset($data['user_type']) ? $data['user_type'] : null;
        $this->container['username'] = isset($data['username']) ? $data['username'] : null;
        $this->container['wlp_id'] = isset($data['wlp_id']) ? $data['wlp_id'] : null;
        $this->container['zip_postal_code'] = isset($data['zip_postal_code']) ? $data['zip_postal_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getLanguageIdAllowableValues();
        if (!is_null($this->container['language_id']) && !in_array($this->container['language_id'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'language_id', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets ack_customer_agreement
     *
     * @return bool
     */
    public function getAckCustomerAgreement()
    {
        return $this->container['ack_customer_agreement'];
    }

    /**
     * Sets ack_customer_agreement
     *
     * @param bool $ack_customer_agreement ack_customer_agreement
     *
     * @return $this
     */
    public function setAckCustomerAgreement($ack_customer_agreement)
    {
        $this->container['ack_customer_agreement'] = $ack_customer_agreement;

        return $this;
    }

    /**
     * Gets ack_disclosure_rule14b
     *
     * @return bool
     */
    public function getAckDisclosureRule14b()
    {
        return $this->container['ack_disclosure_rule14b'];
    }

    /**
     * Sets ack_disclosure_rule14b
     *
     * @param bool $ack_disclosure_rule14b ack_disclosure_rule14b
     *
     * @return $this
     */
    public function setAckDisclosureRule14b($ack_disclosure_rule14b)
    {
        $this->container['ack_disclosure_rule14b'] = $ack_disclosure_rule14b;

        return $this;
    }

    /**
     * Gets ack_finders_fee
     *
     * @return bool
     */
    public function getAckFindersFee()
    {
        return $this->container['ack_finders_fee'];
    }

    /**
     * Sets ack_finders_fee
     *
     * @param bool $ack_finders_fee ack_finders_fee
     *
     * @return $this
     */
    public function setAckFindersFee($ack_finders_fee)
    {
        $this->container['ack_finders_fee'] = $ack_finders_fee;

        return $this;
    }

    /**
     * Gets ack_foreign_finders_fee
     *
     * @return bool
     */
    public function getAckForeignFindersFee()
    {
        return $this->container['ack_foreign_finders_fee'];
    }

    /**
     * Sets ack_foreign_finders_fee
     *
     * @param bool $ack_foreign_finders_fee ack_foreign_finders_fee
     *
     * @return $this
     */
    public function setAckForeignFindersFee($ack_foreign_finders_fee)
    {
        $this->container['ack_foreign_finders_fee'] = $ack_foreign_finders_fee;

        return $this;
    }

    /**
     * Gets ack_joint_customer_agreement
     *
     * @return bool
     */
    public function getAckJointCustomerAgreement()
    {
        return $this->container['ack_joint_customer_agreement'];
    }

    /**
     * Sets ack_joint_customer_agreement
     *
     * @param bool $ack_joint_customer_agreement ack_joint_customer_agreement
     *
     * @return $this
     */
    public function setAckJointCustomerAgreement($ack_joint_customer_agreement)
    {
        $this->container['ack_joint_customer_agreement'] = $ack_joint_customer_agreement;

        return $this;
    }

    /**
     * Gets ack_joint_disclosure_rule14b
     *
     * @return bool
     */
    public function getAckJointDisclosureRule14b()
    {
        return $this->container['ack_joint_disclosure_rule14b'];
    }

    /**
     * Sets ack_joint_disclosure_rule14b
     *
     * @param bool $ack_joint_disclosure_rule14b ack_joint_disclosure_rule14b
     *
     * @return $this
     */
    public function setAckJointDisclosureRule14b($ack_joint_disclosure_rule14b)
    {
        $this->container['ack_joint_disclosure_rule14b'] = $ack_joint_disclosure_rule14b;

        return $this;
    }

    /**
     * Gets ack_joint_finders_fee
     *
     * @return bool
     */
    public function getAckJointFindersFee()
    {
        return $this->container['ack_joint_finders_fee'];
    }

    /**
     * Sets ack_joint_finders_fee
     *
     * @param bool $ack_joint_finders_fee ack_joint_finders_fee
     *
     * @return $this
     */
    public function setAckJointFindersFee($ack_joint_finders_fee)
    {
        $this->container['ack_joint_finders_fee'] = $ack_joint_finders_fee;

        return $this;
    }

    /**
     * Gets ack_joint_foreign_finders_fee
     *
     * @return bool
     */
    public function getAckJointForeignFindersFee()
    {
        return $this->container['ack_joint_foreign_finders_fee'];
    }

    /**
     * Sets ack_joint_foreign_finders_fee
     *
     * @param bool $ack_joint_foreign_finders_fee ack_joint_foreign_finders_fee
     *
     * @return $this
     */
    public function setAckJointForeignFindersFee($ack_joint_foreign_finders_fee)
    {
        $this->container['ack_joint_foreign_finders_fee'] = $ack_joint_foreign_finders_fee;

        return $this;
    }

    /**
     * Gets ack_joint_market_data
     *
     * @return bool
     */
    public function getAckJointMarketData()
    {
        return $this->container['ack_joint_market_data'];
    }

    /**
     * Sets ack_joint_market_data
     *
     * @param bool $ack_joint_market_data ack_joint_market_data
     *
     * @return $this
     */
    public function setAckJointMarketData($ack_joint_market_data)
    {
        $this->container['ack_joint_market_data'] = $ack_joint_market_data;

        return $this;
    }

    /**
     * Gets ack_market_data
     *
     * @return bool
     */
    public function getAckMarketData()
    {
        return $this->container['ack_market_data'];
    }

    /**
     * Sets ack_market_data
     *
     * @param bool $ack_market_data ack_market_data
     *
     * @return $this
     */
    public function setAckMarketData($ack_market_data)
    {
        $this->container['ack_market_data'] = $ack_market_data;

        return $this;
    }

    /**
     * Gets ack_signed_by
     *
     * @return string
     */
    public function getAckSignedBy()
    {
        return $this->container['ack_signed_by'];
    }

    /**
     * Sets ack_signed_by
     *
     * @param string $ack_signed_by ack_signed_by
     *
     * @return $this
     */
    public function setAckSignedBy($ack_signed_by)
    {
        $this->container['ack_signed_by'] = $ack_signed_by;

        return $this;
    }

    /**
     * Gets ack_signed_when
     *
     * @return string
     */
    public function getAckSignedWhen()
    {
        return $this->container['ack_signed_when'];
    }

    /**
     * Sets ack_signed_when
     *
     * @param string $ack_signed_when ack_signed_when
     *
     * @return $this
     */
    public function setAckSignedWhen($ack_signed_when)
    {
        $this->container['ack_signed_when'] = $ack_signed_when;

        return $this;
    }

    /**
     * Gets address_line1
     *
     * @return string
     */
    public function getAddressLine1()
    {
        return $this->container['address_line1'];
    }

    /**
     * Sets address_line1
     *
     * @param string $address_line1 address_line1
     *
     * @return $this
     */
    public function setAddressLine1($address_line1)
    {
        $this->container['address_line1'] = $address_line1;

        return $this;
    }

    /**
     * Gets address_line2
     *
     * @return string
     */
    public function getAddressLine2()
    {
        return $this->container['address_line2'];
    }

    /**
     * Sets address_line2
     *
     * @param string $address_line2 address_line2
     *
     * @return $this
     */
    public function setAddressLine2($address_line2)
    {
        $this->container['address_line2'] = $address_line2;

        return $this;
    }

    /**
     * Gets address_proof_review_by
     *
     * @return string
     */
    public function getAddressProofReviewBy()
    {
        return $this->container['address_proof_review_by'];
    }

    /**
     * Sets address_proof_review_by
     *
     * @param string $address_proof_review_by address_proof_review_by
     *
     * @return $this
     */
    public function setAddressProofReviewBy($address_proof_review_by)
    {
        $this->container['address_proof_review_by'] = $address_proof_review_by;

        return $this;
    }

    /**
     * Gets address_proof_review_when
     *
     * @return \DateTime
     */
    public function getAddressProofReviewWhen()
    {
        return $this->container['address_proof_review_when'];
    }

    /**
     * Sets address_proof_review_when
     *
     * @param \DateTime $address_proof_review_when address_proof_review_when
     *
     * @return $this
     */
    public function setAddressProofReviewWhen($address_proof_review_when)
    {
        $this->container['address_proof_review_when'] = $address_proof_review_when;

        return $this;
    }

    /**
     * Gets annual_income
     *
     * @return string
     */
    public function getAnnualIncome()
    {
        return $this->container['annual_income'];
    }

    /**
     * Sets annual_income
     *
     * @param string $annual_income annual_income
     *
     * @return $this
     */
    public function setAnnualIncome($annual_income)
    {
        $this->container['annual_income'] = $annual_income;

        return $this;
    }

    /**
     * Gets annual_income_number
     *
     * @return int
     */
    public function getAnnualIncomeNumber()
    {
        return $this->container['annual_income_number'];
    }

    /**
     * Sets annual_income_number
     *
     * @param int $annual_income_number annual_income_number
     *
     * @return $this
     */
    public function setAnnualIncomeNumber($annual_income_number)
    {
        $this->container['annual_income_number'] = $annual_income_number;

        return $this;
    }

    /**
     * Gets approved_by
     *
     * @return string
     */
    public function getApprovedBy()
    {
        return $this->container['approved_by'];
    }

    /**
     * Sets approved_by
     *
     * @param string $approved_by approved_by
     *
     * @return $this
     */
    public function setApprovedBy($approved_by)
    {
        $this->container['approved_by'] = $approved_by;

        return $this;
    }

    /**
     * Gets approved_when
     *
     * @return \DateTime
     */
    public function getApprovedWhen()
    {
        return $this->container['approved_when'];
    }

    /**
     * Sets approved_when
     *
     * @param \DateTime $approved_when approved_when
     *
     * @return $this
     */
    public function setApprovedWhen($approved_when)
    {
        $this->container['approved_when'] = $approved_when;

        return $this;
    }

    /**
     * Gets avatar_url
     *
     * @return string
     */
    public function getAvatarUrl()
    {
        return $this->container['avatar_url'];
    }

    /**
     * Sets avatar_url
     *
     * @param string $avatar_url avatar_url
     *
     * @return $this
     */
    public function setAvatarUrl($avatar_url)
    {
        $this->container['avatar_url'] = $avatar_url;

        return $this;
    }

    /**
     * Gets bad_password_count
     *
     * @return int
     */
    public function getBadPasswordCount()
    {
        return $this->container['bad_password_count'];
    }

    /**
     * Sets bad_password_count
     *
     * @param int $bad_password_count bad_password_count
     *
     * @return $this
     */
    public function setBadPasswordCount($bad_password_count)
    {
        $this->container['bad_password_count'] = $bad_password_count;

        return $this;
    }

    /**
     * Gets brand_ambassador
     *
     * @return bool
     */
    public function getBrandAmbassador()
    {
        return $this->container['brand_ambassador'];
    }

    /**
     * Sets brand_ambassador
     *
     * @param bool $brand_ambassador brand_ambassador
     *
     * @return $this
     */
    public function setBrandAmbassador($brand_ambassador)
    {
        $this->container['brand_ambassador'] = $brand_ambassador;

        return $this;
    }

    /**
     * Gets citizenship
     *
     * @return string
     */
    public function getCitizenship()
    {
        return $this->container['citizenship'];
    }

    /**
     * Sets citizenship
     *
     * @param string $citizenship citizenship
     *
     * @return $this
     */
    public function setCitizenship($citizenship)
    {
        $this->container['citizenship'] = $citizenship;

        return $this;
    }

    /**
     * Gets city
     *
     * @return string
     */
    public function getCity()
    {
        return $this->container['city'];
    }

    /**
     * Sets city
     *
     * @param string $city city
     *
     * @return $this
     */
    public function setCity($city)
    {
        $this->container['city'] = $city;

        return $this;
    }

    /**
     * Gets country_id
     *
     * @return string
     */
    public function getCountryId()
    {
        return $this->container['country_id'];
    }

    /**
     * Sets country_id
     *
     * @param string $country_id country_id
     *
     * @return $this
     */
    public function setCountryId($country_id)
    {
        $this->container['country_id'] = $country_id;

        return $this;
    }

    /**
     * Gets created_when
     *
     * @return \DateTime
     */
    public function getCreatedWhen()
    {
        return $this->container['created_when'];
    }

    /**
     * Sets created_when
     *
     * @param \DateTime $created_when created_when
     *
     * @return $this
     */
    public function setCreatedWhen($created_when)
    {
        $this->container['created_when'] = $created_when;

        return $this;
    }

    /**
     * Gets director
     *
     * @return bool
     */
    public function getDirector()
    {
        return $this->container['director'];
    }

    /**
     * Sets director
     *
     * @param bool $director director
     *
     * @return $this
     */
    public function setDirector($director)
    {
        $this->container['director'] = $director;

        return $this;
    }

    /**
     * Gets display_name
     *
     * @return string
     */
    public function getDisplayName()
    {
        return $this->container['display_name'];
    }

    /**
     * Sets display_name
     *
     * @param string $display_name display_name
     *
     * @return $this
     */
    public function setDisplayName($display_name)
    {
        $this->container['display_name'] = $display_name;

        return $this;
    }

    /**
     * Gets dob
     *
     * @return \DateTime
     */
    public function getDob()
    {
        return $this->container['dob'];
    }

    /**
     * Sets dob
     *
     * @param \DateTime $dob dob
     *
     * @return $this
     */
    public function setDob($dob)
    {
        $this->container['dob'] = $dob;

        return $this;
    }

    /**
     * Gets email
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->container['email'];
    }

    /**
     * Sets email
     *
     * @param string $email email
     *
     * @return $this
     */
    public function setEmail($email)
    {
        $this->container['email'] = $email;

        return $this;
    }

    /**
     * Gets employer_business
     *
     * @return string
     */
    public function getEmployerBusiness()
    {
        return $this->container['employer_business'];
    }

    /**
     * Sets employer_business
     *
     * @param string $employer_business employer_business
     *
     * @return $this
     */
    public function setEmployerBusiness($employer_business)
    {
        $this->container['employer_business'] = $employer_business;

        return $this;
    }

    /**
     * Gets employer_company
     *
     * @return string
     */
    public function getEmployerCompany()
    {
        return $this->container['employer_company'];
    }

    /**
     * Sets employer_company
     *
     * @param string $employer_company employer_company
     *
     * @return $this
     */
    public function setEmployerCompany($employer_company)
    {
        $this->container['employer_company'] = $employer_company;

        return $this;
    }

    /**
     * Gets employer_country_id
     *
     * @return string
     */
    public function getEmployerCountryId()
    {
        return $this->container['employer_country_id'];
    }

    /**
     * Sets employer_country_id
     *
     * @param string $employer_country_id employer_country_id
     *
     * @return $this
     */
    public function setEmployerCountryId($employer_country_id)
    {
        $this->container['employer_country_id'] = $employer_country_id;

        return $this;
    }

    /**
     * Gets employer_is_broker
     *
     * @return bool
     */
    public function getEmployerIsBroker()
    {
        return $this->container['employer_is_broker'];
    }

    /**
     * Sets employer_is_broker
     *
     * @param bool $employer_is_broker employer_is_broker
     *
     * @return $this
     */
    public function setEmployerIsBroker($employer_is_broker)
    {
        $this->container['employer_is_broker'] = $employer_is_broker;

        return $this;
    }

    /**
     * Gets employment_status
     *
     * @return \com\hydrogen\integration\Model\ExpandedProperty
     */
    public function getEmploymentStatus()
    {
        return $this->container['employment_status'];
    }

    /**
     * Sets employment_status
     *
     * @param \com\hydrogen\integration\Model\ExpandedProperty $employment_status employment_status
     *
     * @return $this
     */
    public function setEmploymentStatus($employment_status)
    {
        $this->container['employment_status'] = $employment_status;

        return $this;
    }

    /**
     * Gets employment_years
     *
     * @return int
     */
    public function getEmploymentYears()
    {
        return $this->container['employment_years'];
    }

    /**
     * Sets employment_years
     *
     * @param int $employment_years employment_years
     *
     * @return $this
     */
    public function setEmploymentYears($employment_years)
    {
        $this->container['employment_years'] = $employment_years;

        return $this;
    }

    /**
     * Gets first_name
     *
     * @return string
     */
    public function getFirstName()
    {
        return $this->container['first_name'];
    }

    /**
     * Sets first_name
     *
     * @param string $first_name first_name
     *
     * @return $this
     */
    public function setFirstName($first_name)
    {
        $this->container['first_name'] = $first_name;

        return $this;
    }

    /**
     * Gets gender
     *
     * @return \com\hydrogen\integration\Model\ExpandedProperty
     */
    public function getGender()
    {
        return $this->container['gender'];
    }

    /**
     * Sets gender
     *
     * @param \com\hydrogen\integration\Model\ExpandedProperty $gender gender
     *
     * @return $this
     */
    public function setGender($gender)
    {
        $this->container['gender'] = $gender;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets id_no
     *
     * @return string
     */
    public function getIdNo()
    {
        return $this->container['id_no'];
    }

    /**
     * Sets id_no
     *
     * @param string $id_no id_no
     *
     * @return $this
     */
    public function setIdNo($id_no)
    {
        $this->container['id_no'] = $id_no;

        return $this;
    }

    /**
     * Gets investment_experience
     *
     * @return \com\hydrogen\integration\Model\ExpandedProperty
     */
    public function getInvestmentExperience()
    {
        return $this->container['investment_experience'];
    }

    /**
     * Sets investment_experience
     *
     * @param \com\hydrogen\integration\Model\ExpandedProperty $investment_experience investment_experience
     *
     * @return $this
     */
    public function setInvestmentExperience($investment_experience)
    {
        $this->container['investment_experience'] = $investment_experience;

        return $this;
    }

    /**
     * Gets investment_objectives
     *
     * @return \com\hydrogen\integration\Model\ExpandedProperty
     */
    public function getInvestmentObjectives()
    {
        return $this->container['investment_objectives'];
    }

    /**
     * Sets investment_objectives
     *
     * @param \com\hydrogen\integration\Model\ExpandedProperty $investment_objectives investment_objectives
     *
     * @return $this
     */
    public function setInvestmentObjectives($investment_objectives)
    {
        $this->container['investment_objectives'] = $investment_objectives;

        return $this;
    }

    /**
     * Gets kyc_when
     *
     * @return \DateTime
     */
    public function getKycWhen()
    {
        return $this->container['kyc_when'];
    }

    /**
     * Sets kyc_when
     *
     * @param \DateTime $kyc_when kyc_when
     *
     * @return $this
     */
    public function setKycWhen($kyc_when)
    {
        $this->container['kyc_when'] = $kyc_when;

        return $this;
    }

    /**
     * Gets language_id
     *
     * @return string
     */
    public function getLanguageId()
    {
        return $this->container['language_id'];
    }

    /**
     * Sets language_id
     *
     * @param string $language_id language_id
     *
     * @return $this
     */
    public function setLanguageId($language_id)
    {
        $allowedValues = $this->getLanguageIdAllowableValues();
        if (!is_null($language_id) && !in_array($language_id, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'language_id', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['language_id'] = $language_id;

        return $this;
    }

    /**
     * Gets last_login_when
     *
     * @return \DateTime
     */
    public function getLastLoginWhen()
    {
        return $this->container['last_login_when'];
    }

    /**
     * Sets last_login_when
     *
     * @param \DateTime $last_login_when last_login_when
     *
     * @return $this
     */
    public function setLastLoginWhen($last_login_when)
    {
        $this->container['last_login_when'] = $last_login_when;

        return $this;
    }

    /**
     * Gets last_name
     *
     * @return string
     */
    public function getLastName()
    {
        return $this->container['last_name'];
    }

    /**
     * Sets last_name
     *
     * @param string $last_name last_name
     *
     * @return $this
     */
    public function setLastName($last_name)
    {
        $this->container['last_name'] = $last_name;

        return $this;
    }

    /**
     * Gets margin_default
     *
     * @return int
     */
    public function getMarginDefault()
    {
        return $this->container['margin_default'];
    }

    /**
     * Sets margin_default
     *
     * @param int $margin_default margin_default
     *
     * @return $this
     */
    public function setMarginDefault($margin_default)
    {
        $this->container['margin_default'] = $margin_default;

        return $this;
    }

    /**
     * Gets marital_status
     *
     * @return \com\hydrogen\integration\Model\ExpandedProperty
     */
    public function getMaritalStatus()
    {
        return $this->container['marital_status'];
    }

    /**
     * Sets marital_status
     *
     * @param \com\hydrogen\integration\Model\ExpandedProperty $marital_status marital_status
     *
     * @return $this
     */
    public function setMaritalStatus($marital_status)
    {
        $this->container['marital_status'] = $marital_status;

        return $this;
    }

    /**
     * Gets networth_liquid
     *
     * @return string
     */
    public function getNetworthLiquid()
    {
        return $this->container['networth_liquid'];
    }

    /**
     * Sets networth_liquid
     *
     * @param string $networth_liquid networth_liquid
     *
     * @return $this
     */
    public function setNetworthLiquid($networth_liquid)
    {
        $this->container['networth_liquid'] = $networth_liquid;

        return $this;
    }

    /**
     * Gets networth_total
     *
     * @return string
     */
    public function getNetworthTotal()
    {
        return $this->container['networth_total'];
    }

    /**
     * Sets networth_total
     *
     * @param string $networth_total networth_total
     *
     * @return $this
     */
    public function setNetworthTotal($networth_total)
    {
        $this->container['networth_total'] = $networth_total;

        return $this;
    }

    /**
     * Gets ownership_type
     *
     * @return string
     */
    public function getOwnershipType()
    {
        return $this->container['ownership_type'];
    }

    /**
     * Sets ownership_type
     *
     * @param string $ownership_type ownership_type
     *
     * @return $this
     */
    public function setOwnershipType($ownership_type)
    {
        $this->container['ownership_type'] = $ownership_type;

        return $this;
    }

    /**
     * Gets parent_ib
     *
     * @return \com\hydrogen\integration\Model\ParentIB
     */
    public function getParentIb()
    {
        return $this->container['parent_ib'];
    }

    /**
     * Sets parent_ib
     *
     * @param \com\hydrogen\integration\Model\ParentIB $parent_ib parent_ib
     *
     * @return $this
     */
    public function setParentIb($parent_ib)
    {
        $this->container['parent_ib'] = $parent_ib;

        return $this;
    }

    /**
     * Gets phone
     *
     * @return string
     */
    public function getPhone()
    {
        return $this->container['phone'];
    }

    /**
     * Sets phone
     *
     * @param string $phone phone
     *
     * @return $this
     */
    public function setPhone($phone)
    {
        $this->container['phone'] = $phone;

        return $this;
    }

    /**
     * Gets picture_review_by
     *
     * @return string
     */
    public function getPictureReviewBy()
    {
        return $this->container['picture_review_by'];
    }

    /**
     * Sets picture_review_by
     *
     * @param string $picture_review_by picture_review_by
     *
     * @return $this
     */
    public function setPictureReviewBy($picture_review_by)
    {
        $this->container['picture_review_by'] = $picture_review_by;

        return $this;
    }

    /**
     * Gets picture_review_when
     *
     * @return \DateTime
     */
    public function getPictureReviewWhen()
    {
        return $this->container['picture_review_when'];
    }

    /**
     * Sets picture_review_when
     *
     * @param \DateTime $picture_review_when picture_review_when
     *
     * @return $this
     */
    public function setPictureReviewWhen($picture_review_when)
    {
        $this->container['picture_review_when'] = $picture_review_when;

        return $this;
    }

    /**
     * Gets politcally_exposed
     *
     * @return bool
     */
    public function getPolitcallyExposed()
    {
        return $this->container['politcally_exposed'];
    }

    /**
     * Sets politcally_exposed
     *
     * @param bool $politcally_exposed politcally_exposed
     *
     * @return $this
     */
    public function setPolitcallyExposed($politcally_exposed)
    {
        $this->container['politcally_exposed'] = $politcally_exposed;

        return $this;
    }

    /**
     * Gets referral_code
     *
     * @return string
     */
    public function getReferralCode()
    {
        return $this->container['referral_code'];
    }

    /**
     * Sets referral_code
     *
     * @param string $referral_code referral_code
     *
     * @return $this
     */
    public function setReferralCode($referral_code)
    {
        $this->container['referral_code'] = $referral_code;

        return $this;
    }

    /**
     * Gets risk_tolerance
     *
     * @return string
     */
    public function getRiskTolerance()
    {
        return $this->container['risk_tolerance'];
    }

    /**
     * Sets risk_tolerance
     *
     * @param string $risk_tolerance risk_tolerance
     *
     * @return $this
     */
    public function setRiskTolerance($risk_tolerance)
    {
        $this->container['risk_tolerance'] = $risk_tolerance;

        return $this;
    }

    /**
     * Gets state_province
     *
     * @return string
     */
    public function getStateProvince()
    {
        return $this->container['state_province'];
    }

    /**
     * Sets state_province
     *
     * @param string $state_province state_province
     *
     * @return $this
     */
    public function setStateProvince($state_province)
    {
        $this->container['state_province'] = $state_province;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \com\hydrogen\integration\Model\ExpandedProperty
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \com\hydrogen\integration\Model\ExpandedProperty $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets terms_of_use
     *
     * @return bool
     */
    public function getTermsOfUse()
    {
        return $this->container['terms_of_use'];
    }

    /**
     * Sets terms_of_use
     *
     * @param bool $terms_of_use terms_of_use
     *
     * @return $this
     */
    public function setTermsOfUse($terms_of_use)
    {
        $this->container['terms_of_use'] = $terms_of_use;

        return $this;
    }

    /**
     * Gets updated_when
     *
     * @return \DateTime
     */
    public function getUpdatedWhen()
    {
        return $this->container['updated_when'];
    }

    /**
     * Sets updated_when
     *
     * @param \DateTime $updated_when updated_when
     *
     * @return $this
     */
    public function setUpdatedWhen($updated_when)
    {
        $this->container['updated_when'] = $updated_when;

        return $this;
    }

    /**
     * Gets us_citizen
     *
     * @return bool
     */
    public function getUsCitizen()
    {
        return $this->container['us_citizen'];
    }

    /**
     * Sets us_citizen
     *
     * @param bool $us_citizen us_citizen
     *
     * @return $this
     */
    public function setUsCitizen($us_citizen)
    {
        $this->container['us_citizen'] = $us_citizen;

        return $this;
    }

    /**
     * Gets user_note_qty
     *
     * @return int
     */
    public function getUserNoteQty()
    {
        return $this->container['user_note_qty'];
    }

    /**
     * Sets user_note_qty
     *
     * @param int $user_note_qty user_note_qty
     *
     * @return $this
     */
    public function setUserNoteQty($user_note_qty)
    {
        $this->container['user_note_qty'] = $user_note_qty;

        return $this;
    }

    /**
     * Gets user_type
     *
     * @return \com\hydrogen\integration\Model\ExpandedProperty
     */
    public function getUserType()
    {
        return $this->container['user_type'];
    }

    /**
     * Sets user_type
     *
     * @param \com\hydrogen\integration\Model\ExpandedProperty $user_type user_type
     *
     * @return $this
     */
    public function setUserType($user_type)
    {
        $this->container['user_type'] = $user_type;

        return $this;
    }

    /**
     * Gets username
     *
     * @return string
     */
    public function getUsername()
    {
        return $this->container['username'];
    }

    /**
     * Sets username
     *
     * @param string $username username
     *
     * @return $this
     */
    public function setUsername($username)
    {
        $this->container['username'] = $username;

        return $this;
    }

    /**
     * Gets wlp_id
     *
     * @return string
     */
    public function getWlpId()
    {
        return $this->container['wlp_id'];
    }

    /**
     * Sets wlp_id
     *
     * @param string $wlp_id wlp_id
     *
     * @return $this
     */
    public function setWlpId($wlp_id)
    {
        $this->container['wlp_id'] = $wlp_id;

        return $this;
    }

    /**
     * Gets zip_postal_code
     *
     * @return int
     */
    public function getZipPostalCode()
    {
        return $this->container['zip_postal_code'];
    }

    /**
     * Sets zip_postal_code
     *
     * @param int $zip_postal_code zip_postal_code
     *
     * @return $this
     */
    public function setZipPostalCode($zip_postal_code)
    {
        $this->container['zip_postal_code'] = $zip_postal_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


