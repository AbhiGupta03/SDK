/* 
 * Hydrogen Integration API
 *
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Integration.Client.SwaggerDateConverter;

namespace Integration.ModelEntity
{
    /// <summary>
    /// Kms Config details
    /// </summary>
    [DataContract]
    public partial class KmsConfig :  IEquatable<KmsConfig>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KmsConfig" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected KmsConfig() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="KmsConfig" /> class.
        /// </summary>
        /// <param name="awsKeyId">awsKeyId.</param>
        /// <param name="createDate">createDate.</param>
        /// <param name="id">id.</param>
        /// <param name="keyName">keyName (required).</param>
        /// <param name="keyValue">keyValue.</param>
        /// <param name="nucleusClientId">nucleusClientId (required).</param>
        /// <param name="product">product (required).</param>
        /// <param name="secondaryId">secondaryId.</param>
        /// <param name="updateDate">updateDate.</param>
        /// <param name="vendorId">vendorId.</param>
        /// <param name="vendorName">vendorName (required).</param>
        /// <param name="walletId">walletId.</param>
        public KmsConfig(string awsKeyId = default(string), DateTime? createDate = default(DateTime?), Guid? id = default(Guid?), string keyName = default(string), string keyValue = default(string), Guid? nucleusClientId = default(Guid?), string product = default(string), string secondaryId = default(string), DateTime? updateDate = default(DateTime?), Guid? vendorId = default(Guid?), string vendorName = default(string), Guid? walletId = default(Guid?))
        {
            // to ensure "keyName" is required (not null)
            if (keyName == null)
            {
                throw new InvalidDataException("keyName is a required property for KmsConfig and cannot be null");
            }
            else
            {
                this.KeyName = keyName;
            }
            // to ensure "nucleusClientId" is required (not null)
            if (nucleusClientId == null)
            {
                throw new InvalidDataException("nucleusClientId is a required property for KmsConfig and cannot be null");
            }
            else
            {
                this.NucleusClientId = nucleusClientId;
            }
            // to ensure "product" is required (not null)
            if (product == null)
            {
                throw new InvalidDataException("product is a required property for KmsConfig and cannot be null");
            }
            else
            {
                this.Product = product;
            }
            // to ensure "vendorName" is required (not null)
            if (vendorName == null)
            {
                throw new InvalidDataException("vendorName is a required property for KmsConfig and cannot be null");
            }
            else
            {
                this.VendorName = vendorName;
            }
            this.AwsKeyId = awsKeyId;
            this.CreateDate = createDate;
            this.Id = id;
            this.KeyValue = keyValue;
            this.SecondaryId = secondaryId;
            this.UpdateDate = updateDate;
            this.VendorId = vendorId;
            this.WalletId = walletId;
        }
        
        /// <summary>
        /// Gets or Sets AwsKeyId
        /// </summary>
        [DataMember(Name="aws_key_id", EmitDefaultValue=false)]
        public string AwsKeyId { get; set; }

        /// <summary>
        /// Gets or Sets CreateDate
        /// </summary>
        [DataMember(Name="create_date", EmitDefaultValue=false)]
        public DateTime? CreateDate { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name="id", EmitDefaultValue=false)]
        public Guid? Id { get; set; }

        /// <summary>
        /// keyName
        /// </summary>
        /// <value>keyName</value>
        [DataMember(Name="key_name", EmitDefaultValue=false)]
        public string KeyName { get; set; }

        /// <summary>
        /// keyValue
        /// </summary>
        /// <value>keyValue</value>
        [DataMember(Name="key_value", EmitDefaultValue=false)]
        public string KeyValue { get; set; }

        /// <summary>
        /// nucleusClientId
        /// </summary>
        /// <value>nucleusClientId</value>
        [DataMember(Name="nucleus_client_id", EmitDefaultValue=false)]
        public Guid? NucleusClientId { get; set; }

        /// <summary>
        /// product
        /// </summary>
        /// <value>product</value>
        [DataMember(Name="product", EmitDefaultValue=false)]
        public string Product { get; set; }

        /// <summary>
        /// Gets or Sets SecondaryId
        /// </summary>
        [DataMember(Name="secondary_id", EmitDefaultValue=false)]
        public string SecondaryId { get; set; }

        /// <summary>
        /// Gets or Sets UpdateDate
        /// </summary>
        [DataMember(Name="update_date", EmitDefaultValue=false)]
        public DateTime? UpdateDate { get; set; }

        /// <summary>
        /// Gets or Sets VendorId
        /// </summary>
        [DataMember(Name="vendor_id", EmitDefaultValue=false)]
        public Guid? VendorId { get; set; }

        /// <summary>
        /// vendorName
        /// </summary>
        /// <value>vendorName</value>
        [DataMember(Name="vendor_name", EmitDefaultValue=false)]
        public string VendorName { get; set; }

        /// <summary>
        /// walletId
        /// </summary>
        /// <value>walletId</value>
        [DataMember(Name="wallet_id", EmitDefaultValue=false)]
        public Guid? WalletId { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KmsConfig {\n");
            sb.Append("  AwsKeyId: ").Append(AwsKeyId).Append("\n");
            sb.Append("  CreateDate: ").Append(CreateDate).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  KeyName: ").Append(KeyName).Append("\n");
            sb.Append("  KeyValue: ").Append(KeyValue).Append("\n");
            sb.Append("  NucleusClientId: ").Append(NucleusClientId).Append("\n");
            sb.Append("  Product: ").Append(Product).Append("\n");
            sb.Append("  SecondaryId: ").Append(SecondaryId).Append("\n");
            sb.Append("  UpdateDate: ").Append(UpdateDate).Append("\n");
            sb.Append("  VendorId: ").Append(VendorId).Append("\n");
            sb.Append("  VendorName: ").Append(VendorName).Append("\n");
            sb.Append("  WalletId: ").Append(WalletId).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KmsConfig);
        }

        /// <summary>
        /// Returns true if KmsConfig instances are equal
        /// </summary>
        /// <param name="input">Instance of KmsConfig to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KmsConfig input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AwsKeyId == input.AwsKeyId ||
                    (this.AwsKeyId != null &&
                    this.AwsKeyId.Equals(input.AwsKeyId))
                ) && 
                (
                    this.CreateDate == input.CreateDate ||
                    (this.CreateDate != null &&
                    this.CreateDate.Equals(input.CreateDate))
                ) && 
                (
                    this.Id == input.Id ||
                    (this.Id != null &&
                    this.Id.Equals(input.Id))
                ) && 
                (
                    this.KeyName == input.KeyName ||
                    (this.KeyName != null &&
                    this.KeyName.Equals(input.KeyName))
                ) && 
                (
                    this.KeyValue == input.KeyValue ||
                    (this.KeyValue != null &&
                    this.KeyValue.Equals(input.KeyValue))
                ) && 
                (
                    this.NucleusClientId == input.NucleusClientId ||
                    (this.NucleusClientId != null &&
                    this.NucleusClientId.Equals(input.NucleusClientId))
                ) && 
                (
                    this.Product == input.Product ||
                    (this.Product != null &&
                    this.Product.Equals(input.Product))
                ) && 
                (
                    this.SecondaryId == input.SecondaryId ||
                    (this.SecondaryId != null &&
                    this.SecondaryId.Equals(input.SecondaryId))
                ) && 
                (
                    this.UpdateDate == input.UpdateDate ||
                    (this.UpdateDate != null &&
                    this.UpdateDate.Equals(input.UpdateDate))
                ) && 
                (
                    this.VendorId == input.VendorId ||
                    (this.VendorId != null &&
                    this.VendorId.Equals(input.VendorId))
                ) && 
                (
                    this.VendorName == input.VendorName ||
                    (this.VendorName != null &&
                    this.VendorName.Equals(input.VendorName))
                ) && 
                (
                    this.WalletId == input.WalletId ||
                    (this.WalletId != null &&
                    this.WalletId.Equals(input.WalletId))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AwsKeyId != null)
                    hashCode = hashCode * 59 + this.AwsKeyId.GetHashCode();
                if (this.CreateDate != null)
                    hashCode = hashCode * 59 + this.CreateDate.GetHashCode();
                if (this.Id != null)
                    hashCode = hashCode * 59 + this.Id.GetHashCode();
                if (this.KeyName != null)
                    hashCode = hashCode * 59 + this.KeyName.GetHashCode();
                if (this.KeyValue != null)
                    hashCode = hashCode * 59 + this.KeyValue.GetHashCode();
                if (this.NucleusClientId != null)
                    hashCode = hashCode * 59 + this.NucleusClientId.GetHashCode();
                if (this.Product != null)
                    hashCode = hashCode * 59 + this.Product.GetHashCode();
                if (this.SecondaryId != null)
                    hashCode = hashCode * 59 + this.SecondaryId.GetHashCode();
                if (this.UpdateDate != null)
                    hashCode = hashCode * 59 + this.UpdateDate.GetHashCode();
                if (this.VendorId != null)
                    hashCode = hashCode * 59 + this.VendorId.GetHashCode();
                if (this.VendorName != null)
                    hashCode = hashCode * 59 + this.VendorName.GetHashCode();
                if (this.WalletId != null)
                    hashCode = hashCode * 59 + this.WalletId.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
