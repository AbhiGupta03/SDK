/* 
 * Hydrogen Integration API
 *
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Integration.Client.SwaggerDateConverter;

namespace Integration.ModelEntity
{
    /// <summary>
    /// IavResponseVo
    /// </summary>
    [DataContract]
    public partial class IavResponseVo :  IEquatable<IavResponseVo>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="IavResponseVo" /> class.
        /// </summary>
        /// <param name="aggregation">aggregation.</param>
        /// <param name="bankLink">bankLink.</param>
        /// <param name="vendorName">vendorName.</param>
        public IavResponseVo(IavAggregationResponseVo aggregation = default(IavAggregationResponseVo), IavBankLinkResponseVo bankLink = default(IavBankLinkResponseVo), string vendorName = default(string))
        {
            this.Aggregation = aggregation;
            this.BankLink = bankLink;
            this.VendorName = vendorName;
        }
        
        /// <summary>
        /// Gets or Sets Aggregation
        /// </summary>
        [DataMember(Name="aggregation", EmitDefaultValue=false)]
        public IavAggregationResponseVo Aggregation { get; set; }

        /// <summary>
        /// Gets or Sets BankLink
        /// </summary>
        [DataMember(Name="bank_link", EmitDefaultValue=false)]
        public IavBankLinkResponseVo BankLink { get; set; }

        /// <summary>
        /// Gets or Sets VendorName
        /// </summary>
        [DataMember(Name="vendor_name", EmitDefaultValue=false)]
        public string VendorName { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class IavResponseVo {\n");
            sb.Append("  Aggregation: ").Append(Aggregation).Append("\n");
            sb.Append("  BankLink: ").Append(BankLink).Append("\n");
            sb.Append("  VendorName: ").Append(VendorName).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as IavResponseVo);
        }

        /// <summary>
        /// Returns true if IavResponseVo instances are equal
        /// </summary>
        /// <param name="input">Instance of IavResponseVo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(IavResponseVo input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Aggregation == input.Aggregation ||
                    (this.Aggregation != null &&
                    this.Aggregation.Equals(input.Aggregation))
                ) && 
                (
                    this.BankLink == input.BankLink ||
                    (this.BankLink != null &&
                    this.BankLink.Equals(input.BankLink))
                ) && 
                (
                    this.VendorName == input.VendorName ||
                    (this.VendorName != null &&
                    this.VendorName.Equals(input.VendorName))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Aggregation != null)
                    hashCode = hashCode * 59 + this.Aggregation.GetHashCode();
                if (this.BankLink != null)
                    hashCode = hashCode * 59 + this.BankLink.GetHashCode();
                if (this.VendorName != null)
                    hashCode = hashCode * 59 + this.VendorName.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
