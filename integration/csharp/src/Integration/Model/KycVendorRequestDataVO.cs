/* 
 * Hydrogen Integration API
 *
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = Integration.Client.SwaggerDateConverter;

namespace Integration.ModelEntity
{
    /// <summary>
    /// KycVendorRequestDataVO
    /// </summary>
    [DataContract]
    public partial class KycVendorRequestDataVO :  IEquatable<KycVendorRequestDataVO>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="KycVendorRequestDataVO" /> class.
        /// </summary>
        /// <param name="address">address.</param>
        /// <param name="businessAddresses">businessAddresses.</param>
        /// <param name="countryOfResidence">countryOfResidence.</param>
        /// <param name="dateOfBirth">dateOfBirth.</param>
        /// <param name="dbaName">dbaName.</param>
        /// <param name="email">email.</param>
        /// <param name="firstName">firstName.</param>
        /// <param name="gender">gender.</param>
        /// <param name="identificationNumber">identificationNumber.</param>
        /// <param name="identificationNumberType">identificationNumberType.</param>
        /// <param name="incorporationDate">incorporationDate.</param>
        /// <param name="incorporationState">incorporationState.</param>
        /// <param name="isPublic">isPublic.</param>
        /// <param name="lastName">lastName.</param>
        /// <param name="legalName">legalName.</param>
        /// <param name="legalStructure">legalStructure.</param>
        /// <param name="metadata">metadata.</param>
        /// <param name="middleName">middleName.</param>
        /// <param name="nucleusDocumentId">nucleusDocumentId.</param>
        /// <param name="owners">owners.</param>
        /// <param name="phoneNumber">phoneNumber.</param>
        /// <param name="ticker">ticker.</param>
        /// <param name="website">website.</param>
        public KycVendorRequestDataVO(List<ClientAddress> address = default(List<ClientAddress>), List<BusinessAddress> businessAddresses = default(List<BusinessAddress>), string countryOfResidence = default(string), DateTime? dateOfBirth = default(DateTime?), string dbaName = default(string), string email = default(string), string firstName = default(string), string gender = default(string), string identificationNumber = default(string), string identificationNumberType = default(string), DateTime? incorporationDate = default(DateTime?), string incorporationState = default(string), bool? isPublic = default(bool?), string lastName = default(string), string legalName = default(string), string legalStructure = default(string), Object metadata = default(Object), string middleName = default(string), Guid? nucleusDocumentId = default(Guid?), List<Ownership> owners = default(List<Ownership>), string phoneNumber = default(string), string ticker = default(string), string website = default(string))
        {
            this.Address = address;
            this.BusinessAddresses = businessAddresses;
            this.CountryOfResidence = countryOfResidence;
            this.DateOfBirth = dateOfBirth;
            this.DbaName = dbaName;
            this.Email = email;
            this.FirstName = firstName;
            this.Gender = gender;
            this.IdentificationNumber = identificationNumber;
            this.IdentificationNumberType = identificationNumberType;
            this.IncorporationDate = incorporationDate;
            this.IncorporationState = incorporationState;
            this.IsPublic = isPublic;
            this.LastName = lastName;
            this.LegalName = legalName;
            this.LegalStructure = legalStructure;
            this.Metadata = metadata;
            this.MiddleName = middleName;
            this.NucleusDocumentId = nucleusDocumentId;
            this.Owners = owners;
            this.PhoneNumber = phoneNumber;
            this.Ticker = ticker;
            this.Website = website;
        }
        
        /// <summary>
        /// Gets or Sets Address
        /// </summary>
        [DataMember(Name="address", EmitDefaultValue=false)]
        public List<ClientAddress> Address { get; set; }

        /// <summary>
        /// Gets or Sets BusinessAddresses
        /// </summary>
        [DataMember(Name="business_addresses", EmitDefaultValue=false)]
        public List<BusinessAddress> BusinessAddresses { get; set; }

        /// <summary>
        /// Gets or Sets CountryOfResidence
        /// </summary>
        [DataMember(Name="country_of_residence", EmitDefaultValue=false)]
        public string CountryOfResidence { get; set; }

        /// <summary>
        /// Gets or Sets DateOfBirth
        /// </summary>
        [DataMember(Name="date_of_birth", EmitDefaultValue=false)]
        [JsonConverter(typeof(SwaggerDateConverter))]
        public DateTime? DateOfBirth { get; set; }

        /// <summary>
        /// Gets or Sets DbaName
        /// </summary>
        [DataMember(Name="dba_name", EmitDefaultValue=false)]
        public string DbaName { get; set; }

        /// <summary>
        /// Gets or Sets Email
        /// </summary>
        [DataMember(Name="email", EmitDefaultValue=false)]
        public string Email { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="first_name", EmitDefaultValue=false)]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name="gender", EmitDefaultValue=false)]
        public string Gender { get; set; }

        /// <summary>
        /// Gets or Sets IdentificationNumber
        /// </summary>
        [DataMember(Name="identification_number", EmitDefaultValue=false)]
        public string IdentificationNumber { get; set; }

        /// <summary>
        /// Gets or Sets IdentificationNumberType
        /// </summary>
        [DataMember(Name="identification_number_type", EmitDefaultValue=false)]
        public string IdentificationNumberType { get; set; }

        /// <summary>
        /// Gets or Sets IncorporationDate
        /// </summary>
        [DataMember(Name="incorporation_date", EmitDefaultValue=false)]
        [JsonConverter(typeof(SwaggerDateConverter))]
        public DateTime? IncorporationDate { get; set; }

        /// <summary>
        /// Gets or Sets IncorporationState
        /// </summary>
        [DataMember(Name="incorporation_state", EmitDefaultValue=false)]
        public string IncorporationState { get; set; }

        /// <summary>
        /// Gets or Sets IsPublic
        /// </summary>
        [DataMember(Name="is_public", EmitDefaultValue=false)]
        public bool? IsPublic { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="last_name", EmitDefaultValue=false)]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets LegalName
        /// </summary>
        [DataMember(Name="legal_name", EmitDefaultValue=false)]
        public string LegalName { get; set; }

        /// <summary>
        /// Gets or Sets LegalStructure
        /// </summary>
        [DataMember(Name="legal_structure", EmitDefaultValue=false)]
        public string LegalStructure { get; set; }

        /// <summary>
        /// Gets or Sets Metadata
        /// </summary>
        [DataMember(Name="metadata", EmitDefaultValue=false)]
        public Object Metadata { get; set; }

        /// <summary>
        /// Gets or Sets MiddleName
        /// </summary>
        [DataMember(Name="middle_name", EmitDefaultValue=false)]
        public string MiddleName { get; set; }

        /// <summary>
        /// Gets or Sets NucleusDocumentId
        /// </summary>
        [DataMember(Name="nucleus_document_id", EmitDefaultValue=false)]
        public Guid? NucleusDocumentId { get; set; }

        /// <summary>
        /// Gets or Sets Owners
        /// </summary>
        [DataMember(Name="owners", EmitDefaultValue=false)]
        public List<Ownership> Owners { get; set; }

        /// <summary>
        /// Gets or Sets PhoneNumber
        /// </summary>
        [DataMember(Name="phone_number", EmitDefaultValue=false)]
        public string PhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets Ticker
        /// </summary>
        [DataMember(Name="ticker", EmitDefaultValue=false)]
        public string Ticker { get; set; }

        /// <summary>
        /// Gets or Sets Website
        /// </summary>
        [DataMember(Name="website", EmitDefaultValue=false)]
        public string Website { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class KycVendorRequestDataVO {\n");
            sb.Append("  Address: ").Append(Address).Append("\n");
            sb.Append("  BusinessAddresses: ").Append(BusinessAddresses).Append("\n");
            sb.Append("  CountryOfResidence: ").Append(CountryOfResidence).Append("\n");
            sb.Append("  DateOfBirth: ").Append(DateOfBirth).Append("\n");
            sb.Append("  DbaName: ").Append(DbaName).Append("\n");
            sb.Append("  Email: ").Append(Email).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  IdentificationNumber: ").Append(IdentificationNumber).Append("\n");
            sb.Append("  IdentificationNumberType: ").Append(IdentificationNumberType).Append("\n");
            sb.Append("  IncorporationDate: ").Append(IncorporationDate).Append("\n");
            sb.Append("  IncorporationState: ").Append(IncorporationState).Append("\n");
            sb.Append("  IsPublic: ").Append(IsPublic).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  LegalName: ").Append(LegalName).Append("\n");
            sb.Append("  LegalStructure: ").Append(LegalStructure).Append("\n");
            sb.Append("  Metadata: ").Append(Metadata).Append("\n");
            sb.Append("  MiddleName: ").Append(MiddleName).Append("\n");
            sb.Append("  NucleusDocumentId: ").Append(NucleusDocumentId).Append("\n");
            sb.Append("  Owners: ").Append(Owners).Append("\n");
            sb.Append("  PhoneNumber: ").Append(PhoneNumber).Append("\n");
            sb.Append("  Ticker: ").Append(Ticker).Append("\n");
            sb.Append("  Website: ").Append(Website).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as KycVendorRequestDataVO);
        }

        /// <summary>
        /// Returns true if KycVendorRequestDataVO instances are equal
        /// </summary>
        /// <param name="input">Instance of KycVendorRequestDataVO to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(KycVendorRequestDataVO input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Address == input.Address ||
                    this.Address != null &&
                    this.Address.SequenceEqual(input.Address)
                ) && 
                (
                    this.BusinessAddresses == input.BusinessAddresses ||
                    this.BusinessAddresses != null &&
                    this.BusinessAddresses.SequenceEqual(input.BusinessAddresses)
                ) && 
                (
                    this.CountryOfResidence == input.CountryOfResidence ||
                    (this.CountryOfResidence != null &&
                    this.CountryOfResidence.Equals(input.CountryOfResidence))
                ) && 
                (
                    this.DateOfBirth == input.DateOfBirth ||
                    (this.DateOfBirth != null &&
                    this.DateOfBirth.Equals(input.DateOfBirth))
                ) && 
                (
                    this.DbaName == input.DbaName ||
                    (this.DbaName != null &&
                    this.DbaName.Equals(input.DbaName))
                ) && 
                (
                    this.Email == input.Email ||
                    (this.Email != null &&
                    this.Email.Equals(input.Email))
                ) && 
                (
                    this.FirstName == input.FirstName ||
                    (this.FirstName != null &&
                    this.FirstName.Equals(input.FirstName))
                ) && 
                (
                    this.Gender == input.Gender ||
                    (this.Gender != null &&
                    this.Gender.Equals(input.Gender))
                ) && 
                (
                    this.IdentificationNumber == input.IdentificationNumber ||
                    (this.IdentificationNumber != null &&
                    this.IdentificationNumber.Equals(input.IdentificationNumber))
                ) && 
                (
                    this.IdentificationNumberType == input.IdentificationNumberType ||
                    (this.IdentificationNumberType != null &&
                    this.IdentificationNumberType.Equals(input.IdentificationNumberType))
                ) && 
                (
                    this.IncorporationDate == input.IncorporationDate ||
                    (this.IncorporationDate != null &&
                    this.IncorporationDate.Equals(input.IncorporationDate))
                ) && 
                (
                    this.IncorporationState == input.IncorporationState ||
                    (this.IncorporationState != null &&
                    this.IncorporationState.Equals(input.IncorporationState))
                ) && 
                (
                    this.IsPublic == input.IsPublic ||
                    (this.IsPublic != null &&
                    this.IsPublic.Equals(input.IsPublic))
                ) && 
                (
                    this.LastName == input.LastName ||
                    (this.LastName != null &&
                    this.LastName.Equals(input.LastName))
                ) && 
                (
                    this.LegalName == input.LegalName ||
                    (this.LegalName != null &&
                    this.LegalName.Equals(input.LegalName))
                ) && 
                (
                    this.LegalStructure == input.LegalStructure ||
                    (this.LegalStructure != null &&
                    this.LegalStructure.Equals(input.LegalStructure))
                ) && 
                (
                    this.Metadata == input.Metadata ||
                    (this.Metadata != null &&
                    this.Metadata.Equals(input.Metadata))
                ) && 
                (
                    this.MiddleName == input.MiddleName ||
                    (this.MiddleName != null &&
                    this.MiddleName.Equals(input.MiddleName))
                ) && 
                (
                    this.NucleusDocumentId == input.NucleusDocumentId ||
                    (this.NucleusDocumentId != null &&
                    this.NucleusDocumentId.Equals(input.NucleusDocumentId))
                ) && 
                (
                    this.Owners == input.Owners ||
                    this.Owners != null &&
                    this.Owners.SequenceEqual(input.Owners)
                ) && 
                (
                    this.PhoneNumber == input.PhoneNumber ||
                    (this.PhoneNumber != null &&
                    this.PhoneNumber.Equals(input.PhoneNumber))
                ) && 
                (
                    this.Ticker == input.Ticker ||
                    (this.Ticker != null &&
                    this.Ticker.Equals(input.Ticker))
                ) && 
                (
                    this.Website == input.Website ||
                    (this.Website != null &&
                    this.Website.Equals(input.Website))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Address != null)
                    hashCode = hashCode * 59 + this.Address.GetHashCode();
                if (this.BusinessAddresses != null)
                    hashCode = hashCode * 59 + this.BusinessAddresses.GetHashCode();
                if (this.CountryOfResidence != null)
                    hashCode = hashCode * 59 + this.CountryOfResidence.GetHashCode();
                if (this.DateOfBirth != null)
                    hashCode = hashCode * 59 + this.DateOfBirth.GetHashCode();
                if (this.DbaName != null)
                    hashCode = hashCode * 59 + this.DbaName.GetHashCode();
                if (this.Email != null)
                    hashCode = hashCode * 59 + this.Email.GetHashCode();
                if (this.FirstName != null)
                    hashCode = hashCode * 59 + this.FirstName.GetHashCode();
                if (this.Gender != null)
                    hashCode = hashCode * 59 + this.Gender.GetHashCode();
                if (this.IdentificationNumber != null)
                    hashCode = hashCode * 59 + this.IdentificationNumber.GetHashCode();
                if (this.IdentificationNumberType != null)
                    hashCode = hashCode * 59 + this.IdentificationNumberType.GetHashCode();
                if (this.IncorporationDate != null)
                    hashCode = hashCode * 59 + this.IncorporationDate.GetHashCode();
                if (this.IncorporationState != null)
                    hashCode = hashCode * 59 + this.IncorporationState.GetHashCode();
                if (this.IsPublic != null)
                    hashCode = hashCode * 59 + this.IsPublic.GetHashCode();
                if (this.LastName != null)
                    hashCode = hashCode * 59 + this.LastName.GetHashCode();
                if (this.LegalName != null)
                    hashCode = hashCode * 59 + this.LegalName.GetHashCode();
                if (this.LegalStructure != null)
                    hashCode = hashCode * 59 + this.LegalStructure.GetHashCode();
                if (this.Metadata != null)
                    hashCode = hashCode * 59 + this.Metadata.GetHashCode();
                if (this.MiddleName != null)
                    hashCode = hashCode * 59 + this.MiddleName.GetHashCode();
                if (this.NucleusDocumentId != null)
                    hashCode = hashCode * 59 + this.NucleusDocumentId.GetHashCode();
                if (this.Owners != null)
                    hashCode = hashCode * 59 + this.Owners.GetHashCode();
                if (this.PhoneNumber != null)
                    hashCode = hashCode * 59 + this.PhoneNumber.GetHashCode();
                if (this.Ticker != null)
                    hashCode = hashCode * 59 + this.Ticker.GetHashCode();
                if (this.Website != null)
                    hashCode = hashCode * 59 + this.Website.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
