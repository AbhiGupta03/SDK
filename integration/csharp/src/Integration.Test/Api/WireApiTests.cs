/* 
 * Hydrogen Integration API
 *
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Integration.Client;
using Integration.Api;
using Integration.ModelEntity;

namespace Integration.Test
{
    /// <summary>
    ///  Class for testing WireApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class WireApiTests
    {
        private WireApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new WireApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of WireApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' WireApi
            //Assert.IsInstanceOfType(typeof(WireApi), instance, "instance is a WireApi");
        }

        
        /// <summary>
        /// Test CancelWireTransferUsingDelete
        /// </summary>
        [Test]
        public void CancelWireTransferUsingDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusFundingId = null;
            //var response = instance.CancelWireTransferUsingDelete(nucleusFundingId);
            //Assert.IsInstanceOf<WireTransferResponseVO> (response, "response is WireTransferResponseVO");
        }
        
        /// <summary>
        /// Test CreateWireBankLinkUsingPost
        /// </summary>
        [Test]
        public void CreateWireBankLinkUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WireBankLinkRequestCO request = null;
            //var response = instance.CreateWireBankLinkUsingPost(request);
            //Assert.IsInstanceOf<WireBankLinkResponseVO> (response, "response is WireBankLinkResponseVO");
        }
        
        /// <summary>
        /// Test DeleteWireBankLinkUsingDelete
        /// </summary>
        [Test]
        public void DeleteWireBankLinkUsingDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusBankLinkId = null;
            //var response = instance.DeleteWireBankLinkUsingDelete(nucleusBankLinkId);
            //Assert.IsInstanceOf<WireBankLinkResponseVO> (response, "response is WireBankLinkResponseVO");
        }
        
        /// <summary>
        /// Test GetListOfWireTransfersUsingGet
        /// </summary>
        [Test]
        public void GetListOfWireTransfersUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusClientId = null;
            //var response = instance.GetListOfWireTransfersUsingGet(nucleusClientId);
            //Assert.IsInstanceOf<List<WireTransferResponseVO>> (response, "response is List<WireTransferResponseVO>");
        }
        
        /// <summary>
        /// Test GetWireBankLinkUsingGet
        /// </summary>
        [Test]
        public void GetWireBankLinkUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusBankLinkId = null;
            //var response = instance.GetWireBankLinkUsingGet(nucleusBankLinkId);
            //Assert.IsInstanceOf<WireBankLinkResponseVO> (response, "response is WireBankLinkResponseVO");
        }
        
        /// <summary>
        /// Test GetWireClientBankLinksUsingGet
        /// </summary>
        [Test]
        public void GetWireClientBankLinksUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusClientId = null;
            //var response = instance.GetWireClientBankLinksUsingGet(nucleusClientId);
            //Assert.IsInstanceOf<List<WireBankLinkResponseVO>> (response, "response is List<WireBankLinkResponseVO>");
        }
        
        /// <summary>
        /// Test GetWireTransferUsingGet
        /// </summary>
        [Test]
        public void GetWireTransferUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusFundingId = null;
            //var response = instance.GetWireTransferUsingGet(nucleusFundingId);
            //Assert.IsInstanceOf<WireTransferResponseVO> (response, "response is WireTransferResponseVO");
        }
        
        /// <summary>
        /// Test SubmitWireTransferUsingPost
        /// </summary>
        [Test]
        public void SubmitWireTransferUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //WireTransferRequestCO transferRequest = null;
            //var response = instance.SubmitWireTransferUsingPost(transferRequest);
            //Assert.IsInstanceOf<WireTransferResponseVO> (response, "response is WireTransferResponseVO");
        }
        
        /// <summary>
        /// Test UpdateWireBankLinkUsingPut
        /// </summary>
        [Test]
        public void UpdateWireBankLinkUsingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusBankLinkId = null;
            //var response = instance.UpdateWireBankLinkUsingPut(nucleusBankLinkId);
            //Assert.IsInstanceOf<WireBankLinkResponseVO> (response, "response is WireBankLinkResponseVO");
        }
        
    }

}
