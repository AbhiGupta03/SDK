/* 
 * Hydrogen Integration API
 *
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Integration.Client;
using Integration.Api;
using Integration.ModelEntity;

namespace Integration.Test
{
    /// <summary>
    ///  Class for testing BaasApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class BaasApiTests
    {
        private BaasApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new BaasApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of BaasApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' BaasApi
            //Assert.IsInstanceOfType(typeof(BaasApi), instance, "instance is a BaasApi");
        }

        
        /// <summary>
        /// Test CreateBaasAccountUsingPost
        /// </summary>
        [Test]
        public void CreateBaasAccountUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BaasAccountCO baasAccountCO = null;
            //var response = instance.CreateBaasAccountUsingPost(baasAccountCO);
            //Assert.IsInstanceOf<BaasAccountVO> (response, "response is BaasAccountVO");
        }
        
        /// <summary>
        /// Test CreateBaasBusinessUsingPost
        /// </summary>
        [Test]
        public void CreateBaasBusinessUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateBaasBusinessCO baasBusinessCO = null;
            //var response = instance.CreateBaasBusinessUsingPost(baasBusinessCO);
            //Assert.IsInstanceOf<BaasBusinessVO> (response, "response is BaasBusinessVO");
        }
        
        /// <summary>
        /// Test CreateBaasClientUsingPost
        /// </summary>
        [Test]
        public void CreateBaasClientUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateBaasClientCO baasClientCO = null;
            //var response = instance.CreateBaasClientUsingPost(baasClientCO);
            //Assert.IsInstanceOf<BaasClientVO> (response, "response is BaasClientVO");
        }
        
        /// <summary>
        /// Test CreateBaasSubAccountUsingPost
        /// </summary>
        [Test]
        public void CreateBaasSubAccountUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //BaasSubAccountCO baasSubAccountCO = null;
            //var response = instance.CreateBaasSubAccountUsingPost(baasSubAccountCO);
            //Assert.IsInstanceOf<BaasSubAccountVO> (response, "response is BaasSubAccountVO");
        }
        
        /// <summary>
        /// Test GetBaasAccountStatementUsingGet
        /// </summary>
        [Test]
        public void GetBaasAccountStatementUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DateTime? endDate = null;
            //Guid? nucleusAccountId = null;
            //DateTime? startDate = null;
            //string statementType = null;
            //var response = instance.GetBaasAccountStatementUsingGet(endDate, nucleusAccountId, startDate, statementType);
            //Assert.IsInstanceOf<BaasStatementsVO> (response, "response is BaasStatementsVO");
        }
        
        /// <summary>
        /// Test GetBaasPortfolioBalanceUsingGet
        /// </summary>
        [Test]
        public void GetBaasPortfolioBalanceUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusPortfolioId = null;
            //DateTime? endDate = null;
            //DateTime? startDate = null;
            //var response = instance.GetBaasPortfolioBalanceUsingGet(nucleusPortfolioId, endDate, startDate);
            //Assert.IsInstanceOf<BaasBalanceVO> (response, "response is BaasBalanceVO");
        }
        
        /// <summary>
        /// Test GetBaasPortfolioTransactionUsingGet
        /// </summary>
        [Test]
        public void GetBaasPortfolioTransactionUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusPortfolioId = null;
            //DateTime? endDate = null;
            //DateTime? startDate = null;
            //var response = instance.GetBaasPortfolioTransactionUsingGet(nucleusPortfolioId, endDate, startDate);
            //Assert.IsInstanceOf<BaasTransactionsVO> (response, "response is BaasTransactionsVO");
        }
        
        /// <summary>
        /// Test UpdateBaasBusinessUsingPut
        /// </summary>
        [Test]
        public void UpdateBaasBusinessUsingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusBusinessId = null;
            //UpdateBaasBusinessCO baasBusinessCO = null;
            //var response = instance.UpdateBaasBusinessUsingPut(nucleusBusinessId, baasBusinessCO);
            //Assert.IsInstanceOf<BaasBusinessVO> (response, "response is BaasBusinessVO");
        }
        
        /// <summary>
        /// Test UpdateBaasClientUsingPut
        /// </summary>
        [Test]
        public void UpdateBaasClientUsingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusClientId = null;
            //UpdateBaasClientCO baasClientCO = null;
            //var response = instance.UpdateBaasClientUsingPut(nucleusClientId, baasClientCO);
            //Assert.IsInstanceOf<BaasClientVO> (response, "response is BaasClientVO");
        }
        
    }

}
