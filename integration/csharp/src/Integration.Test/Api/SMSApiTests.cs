/* 
 * Hydrogen Integration API
 *
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Integration.Client;
using Integration.Api;
using Integration.ModelEntity;

namespace Integration.Test
{
    /// <summary>
    ///  Class for testing SMSApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class SMSApiTests
    {
        private SMSApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new SMSApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of SMSApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' SMSApi
            //Assert.IsInstanceOfType(typeof(SMSApi), instance, "instance is a SMSApi");
        }

        
        /// <summary>
        /// Test GetSmsStatus
        /// </summary>
        [Test]
        public void GetSmsStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? smsId = null;
            //var response = instance.GetSmsStatus(smsId);
            //Assert.IsInstanceOf<SMS> (response, "response is SMS");
        }
        
        /// <summary>
        /// Test SendSMS
        /// </summary>
        [Test]
        public void SendSMSTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SMSVO smsVO = null;
            //var response = instance.SendSMS(smsVO);
            //Assert.IsInstanceOf<SMSResponseVO> (response, "response is SMSResponseVO");
        }
        
    }

}
