/* 
 * Hydrogen Integration API
 *
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Integration.Client;
using Integration.Api;
using Integration.ModelEntity;

namespace Integration.Test
{
    /// <summary>
    ///  Class for testing CardApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class CardApiTests
    {
        private CardApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new CardApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of CardApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' CardApi
            //Assert.IsInstanceOfType(typeof(CardApi), instance, "instance is a CardApi");
        }

        
        /// <summary>
        /// Test CreateAutoReloadUsingPost
        /// </summary>
        [Test]
        public void CreateAutoReloadUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardAutoReloadRequestCO request = null;
            //var response = instance.CreateAutoReloadUsingPost(request);
            //Assert.IsInstanceOf<CardAutoReloadResponseVO> (response, "response is CardAutoReloadResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardActivateUsingPost
        /// </summary>
        [Test]
        public void CreateCardActivateUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardBaseRequestCO activateRequest = null;
            //var response = instance.CreateCardActivateUsingPost(activateRequest);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardBusinessUsingPost
        /// </summary>
        [Test]
        public void CreateCardBusinessUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardBusinessRequestCO cardBusinessRequestCO = null;
            //var response = instance.CreateCardBusinessUsingPost(cardBusinessRequestCO);
            //Assert.IsInstanceOf<CreateBusinessResponseVO> (response, "response is CreateBusinessResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardCloseUsingPost
        /// </summary>
        [Test]
        public void CreateCardCloseUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardBaseRequestCO closeRequest = null;
            //var response = instance.CreateCardCloseUsingPost(closeRequest);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardIssueUsingPost
        /// </summary>
        [Test]
        public void CreateCardIssueUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardBaseRequestCO issueRequest = null;
            //var response = instance.CreateCardIssueUsingPost(issueRequest);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardLoadUsingPost
        /// </summary>
        [Test]
        public void CreateCardLoadUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardLoadRequestCO loadRequest = null;
            //var response = instance.CreateCardLoadUsingPost(loadRequest);
            //Assert.IsInstanceOf<CardLoadUnloadResponseVO> (response, "response is CardLoadUnloadResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardPinUsingPost
        /// </summary>
        [Test]
        public void CreateCardPinUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardPinRequestCO cardPinRequestCO = null;
            //var response = instance.CreateCardPinUsingPost(cardPinRequestCO);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardReactivateUsingPost
        /// </summary>
        [Test]
        public void CreateCardReactivateUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardBaseRequestCO reactivateRequest = null;
            //var response = instance.CreateCardReactivateUsingPost(reactivateRequest);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardReissueUsingPost
        /// </summary>
        [Test]
        public void CreateCardReissueUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardBaseRequestCO request = null;
            //var response = instance.CreateCardReissueUsingPost(request);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardReplaceUsingPost
        /// </summary>
        [Test]
        public void CreateCardReplaceUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardBaseRequestCO request = null;
            //var response = instance.CreateCardReplaceUsingPost(request);
            //Assert.IsInstanceOf<CardReplaceResponseVO> (response, "response is CardReplaceResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardReserveTransferUsingPost
        /// </summary>
        [Test]
        public void CreateCardReserveTransferUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardReserveTransferRequestCO request = null;
            //var response = instance.CreateCardReserveTransferUsingPost(request);
            //Assert.IsInstanceOf<CardReserveTransferResponseVO> (response, "response is CardReserveTransferResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardSpendingControlUsingPost
        /// </summary>
        [Test]
        public void CreateCardSpendingControlUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardSpendingControlRequestCO request = null;
            //var response = instance.CreateCardSpendingControlUsingPost(request);
            //Assert.IsInstanceOf<CardSpendingControlResponseVO> (response, "response is CardSpendingControlResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardSuspendUsingPost
        /// </summary>
        [Test]
        public void CreateCardSuspendUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardBaseRequestCO suspendRequest = null;
            //var response = instance.CreateCardSuspendUsingPost(suspendRequest);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardTokenUsingPost
        /// </summary>
        [Test]
        public void CreateCardTokenUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardTokenRequestCO tokenizeRequest = null;
            //var response = instance.CreateCardTokenUsingPost(tokenizeRequest);
            //Assert.IsInstanceOf<CardTokenResponseVO> (response, "response is CardTokenResponseVO");
        }
        
        /// <summary>
        /// Test CreateCardUnloadUsingPost
        /// </summary>
        [Test]
        public void CreateCardUnloadUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardUnloadRequestCO reloadRequest = null;
            //var response = instance.CreateCardUnloadUsingPost(reloadRequest);
            //Assert.IsInstanceOf<CardLoadUnloadResponseVO> (response, "response is CardLoadUnloadResponseVO");
        }
        
        /// <summary>
        /// Test CreateClientCardUsingPost
        /// </summary>
        [Test]
        public void CreateClientCardUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardClientRequestCO cardClientRequestCO = null;
            //var response = instance.CreateClientCardUsingPost(cardClientRequestCO);
            //Assert.IsInstanceOf<CreateCardClientResponseVO> (response, "response is CreateCardClientResponseVO");
        }
        
        /// <summary>
        /// Test GetBusinessStatusUsingGet
        /// </summary>
        [Test]
        public void GetBusinessStatusUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusBusinessId = null;
            //var response = instance.GetBusinessStatusUsingGet(nucleusBusinessId);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
        /// <summary>
        /// Test GetCardBalanceUsingGet
        /// </summary>
        [Test]
        public void GetCardBalanceUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //DateTime? endDate = null;
            //DateTime? startDate = null;
            //var response = instance.GetCardBalanceUsingGet(id, endDate, startDate);
            //Assert.IsInstanceOf<CardBalanceResponseVO> (response, "response is CardBalanceResponseVO");
        }
        
        /// <summary>
        /// Test GetCardImage
        /// </summary>
        [Test]
        public void GetCardImageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? cardId = null;
            //var response = instance.GetCardImage(cardId);
            //Assert.IsInstanceOf<GetCardImageResponseVO> (response, "response is GetCardImageResponseVO");
        }
        
        /// <summary>
        /// Test GetCardPciDetails
        /// </summary>
        [Test]
        public void GetCardPciDetailsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? cardId = null;
            //var response = instance.GetCardPciDetails(cardId);
            //Assert.IsInstanceOf<GetCardPciDetailsResponseVO> (response, "response is GetCardPciDetailsResponseVO");
        }
        
        /// <summary>
        /// Test GetCardReserveAccountDetailsUsingGet
        /// </summary>
        [Test]
        public void GetCardReserveAccountDetailsUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCardReserveAccountDetailsUsingGet();
            //Assert.IsInstanceOf<CardReserveAccountResponseVO> (response, "response is CardReserveAccountResponseVO");
        }
        
        /// <summary>
        /// Test GetCardStatementUsingGet
        /// </summary>
        [Test]
        public void GetCardStatementUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? cardId = null;
            //DateTime? endDate = null;
            //DateTime? startDate = null;
            //var response = instance.GetCardStatementUsingGet(cardId, endDate, startDate);
            //Assert.IsInstanceOf<GetCardStatementResponseVO> (response, "response is GetCardStatementResponseVO");
        }
        
        /// <summary>
        /// Test GetCardTokenUsingToken
        /// </summary>
        [Test]
        public void GetCardTokenUsingTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //string deviceId = null;
            //string deviceType = null;
            //string wallet = null;
            //var response = instance.GetCardTokenUsingToken(id, deviceId, deviceType, wallet);
            //Assert.IsInstanceOf<List<GetCardTokenResponseVO>> (response, "response is List<GetCardTokenResponseVO>");
        }
        
        /// <summary>
        /// Test GetCardTransactionUsingGet
        /// </summary>
        [Test]
        public void GetCardTransactionUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //DateTime? endDate = null;
            //DateTime? startDate = null;
            //var response = instance.GetCardTransactionUsingGet(id, endDate, startDate);
            //Assert.IsInstanceOf<CardTransactionResponseVO> (response, "response is CardTransactionResponseVO");
        }
        
        /// <summary>
        /// Test GetCardUsingGet
        /// </summary>
        [Test]
        public void GetCardUsingGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //var response = instance.GetCardUsingGet(id);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
        /// <summary>
        /// Test UpdateCardBusinessUsingPut
        /// </summary>
        [Test]
        public void UpdateCardBusinessUsingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusBusinessId = null;
            //var response = instance.UpdateCardBusinessUsingPut(nucleusBusinessId);
            //Assert.IsInstanceOf<UpdateBusinessResponseVO> (response, "response is UpdateBusinessResponseVO");
        }
        
        /// <summary>
        /// Test UpdateCardPinUsingPut
        /// </summary>
        [Test]
        public void UpdateCardPinUsingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardUpdatePinRequestCO cardPinRequestCO = null;
            //Guid? id = null;
            //var response = instance.UpdateCardPinUsingPut(cardPinRequestCO, id);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
        /// <summary>
        /// Test UpdateCardSpendingControlUsingPut
        /// </summary>
        [Test]
        public void UpdateCardSpendingControlUsingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? nucleusSpendingControlId = null;
            //var response = instance.UpdateCardSpendingControlUsingPut(nucleusSpendingControlId);
            //Assert.IsInstanceOf<CardSpendingControlResponseVO> (response, "response is CardSpendingControlResponseVO");
        }
        
        /// <summary>
        /// Test UpdateCardUsingPut
        /// </summary>
        [Test]
        public void UpdateCardUsingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //var response = instance.UpdateCardUsingPut(id);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
        /// <summary>
        /// Test UpdateClientCardUsingPut
        /// </summary>
        [Test]
        public void UpdateClientCardUsingPutTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Guid? id = null;
            //var response = instance.UpdateClientCardUsingPut(id);
            //Assert.IsInstanceOf<UpdateCardClientResponseVO> (response, "response is UpdateCardClientResponseVO");
        }
        
        /// <summary>
        /// Test VerifyCardPinUsingPost
        /// </summary>
        [Test]
        public void VerifyCardPinUsingPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CardPinRequestCO cardPinRequestCO = null;
            //var response = instance.VerifyCardPinUsingPost(cardPinRequestCO);
            //Assert.IsInstanceOf<BaseResponseVO> (response, "response is BaseResponseVO");
        }
        
    }

}
