=begin
#Hydrogen Integration API

#The Hydrogen Integration API

OpenAPI spec version: 1.3.1
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.21

=end

require 'spec_helper'
require 'json'

# Unit tests for IntegrationApi::ACHApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ACHApi' do
  before do
    # run before each test
    @instance = IntegrationApi::ACHApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ACHApi' do
    it 'should create an instance of ACHApi' do
      expect(@instance).to be_instance_of(IntegrationApi::ACHApi)
    end
  end

  # unit tests for cancel_ach_transfer_using_delete
  # Cancel the ACH transfer
  # @param nucleus_funding_id nucleus_funding_id
  # @param [Hash] opts the optional parameters
  # @return [AchTransferResponseVO]
  describe 'cancel_ach_transfer_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_ach_bank_link_using_post
  # Create bank link
  # @param ach_bank_link_request_co achBankLinkRequestCO
  # @param [Hash] opts the optional parameters
  # @return [AchBankLinkResponseVO]
  describe 'create_ach_bank_link_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_ach_beneficial_owner_using_post
  # Create a beneficial owner
  # @param beneficial_owner_request beneficialOwnerRequest
  # @param [Hash] opts the optional parameters
  # @return [AchBeneficialOwnerResponseVO]
  describe 'create_ach_beneficial_owner_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_ach_business_using_post
  # Create a business
  # @param business_request businessRequest
  # @param [Hash] opts the optional parameters
  # @return [AchBusinessResponseVO]
  describe 'create_ach_business_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_ach_card_link_using_post
  # Create an ACH card link
  # @param card_link_request_co cardLinkRequestCO
  # @param [Hash] opts the optional parameters
  # @return [AchCardLinkResponseVO]
  describe 'create_ach_card_link_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_ach_card_reserve_using_post
  # Create an ACH card reserve
  # @param card_reserve_request_co cardReserveRequestCO
  # @param [Hash] opts the optional parameters
  # @return [AchCardReserveResponseVO]
  describe 'create_ach_card_reserve_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_ach_client_using_post
  # Create a client
  # @param client_request clientRequest
  # @param [Hash] opts the optional parameters
  # @return [AchClientResponseVO]
  describe 'create_ach_client_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_ach_reserve_link_using_post
  # Create an ACH reserve link
  # @param reserve_link_request_co reserveLinkRequestCO
  # @param [Hash] opts the optional parameters
  # @return [AchReserveLinkResponseVO]
  describe 'create_ach_reserve_link_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_ach_bank_link_using_delete
  # Delete bank link
  # @param nucleus_bank_link_id nucleus_bank_link_id
  # @param [Hash] opts the optional parameters
  # @return [AchBankLinkResponseVO]
  describe 'delete_ach_bank_link_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for fund_card_using_post
  # Fund card
  # @param ach_card_request_co achCardRequestCO
  # @param [Hash] opts the optional parameters
  # @return [AchCardResponseVO]
  describe 'fund_card_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ach_balance_using_get
  # Get balance
  # @param portfolio_id portfolio_id
  # @param [Hash] opts the optional parameters
  # @option opts [Date] :end_date end_date
  # @option opts [Date] :start_date start_date
  # @return [AchBalanceResponseVO]
  describe 'get_ach_balance_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ach_bank_link_using_get
  # Get bank link
  # @param nucleus_bank_link_id nucleus_bank_link_id
  # @param [Hash] opts the optional parameters
  # @return [AchBankLinkResponseVO]
  describe 'get_ach_bank_link_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ach_bank_links_for_reserve_account_using_get
  # Get bank links for a reserve account
  # @param [Hash] opts the optional parameters
  # @return [Array<AchBankLinkResponseVO>]
  describe 'get_ach_bank_links_for_reserve_account_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ach_business_balance_using_get
  # Get business balance
  # @param business_id business_id
  # @param [Hash] opts the optional parameters
  # @return [AchBalanceResponseVO]
  describe 'get_ach_business_balance_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ach_client_bank_links_using_get
  # Get client bank links
  # @param nucleus_client_id nucleus_client_id
  # @param [Hash] opts the optional parameters
  # @return [Array<AchBankLinkResponseVO>]
  describe 'get_ach_client_bank_links_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ach_status_using_get
  # Get the ACH status
  # @param nucleus_business_id nucleus_business_id
  # @param [Hash] opts the optional parameters
  # @return [AchTransferResponseVO]
  describe 'get_ach_status_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_ach_transfer_using_get
  # Get the ACH transfer
  # @param nucleus_funding_id nucleus_funding_id
  # @param [Hash] opts the optional parameters
  # @return [AchTransferResponseVO]
  describe 'get_ach_transfer_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_list_of_client_ach_transfers_using_get
  # Get a list of client&#39;s ACH transfers
  # @param nucleus_client_id nucleus_client_id
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageAchTransferResponseVO]
  describe 'get_list_of_client_ach_transfers_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end


  # unit tests for submit_ach_transfer_using_post
  # Submit an ACH transfer
  # @param transfer_request transferRequest
  # @param [Hash] opts the optional parameters
  # @return [AchTransferResponseVO]
  describe 'submit_ach_transfer_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_ach_bank_link_using_put
  # Update bank link
  # @param nucleus_bank_link_id nucleus_bank_link_id
  # @param [Hash] opts the optional parameters
  # @return [AchBankLinkResponseVO]
  describe 'update_ach_bank_link_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
