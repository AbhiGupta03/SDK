=begin
#Hydrogen Integration API

#The Hydrogen Integration API

OpenAPI spec version: 1.2.1
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.18

=end

require 'spec_helper'
require 'json'

# Unit tests for IntegrationApi::BaasApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'BaasApi' do
  before do
    # run before each test
    @instance = IntegrationApi::BaasApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BaasApi' do
    it 'should create an instance of BaasApi' do
      expect(@instance).to be_instance_of(IntegrationApi::BaasApi)
    end
  end

  # unit tests for create_baas_account_using_post
  # create a Baas account
  # @param baas_account_co baasAccountCO
  # @param [Hash] opts the optional parameters
  # @return [BaasAccountVO]
  describe 'create_baas_account_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_baas_business_using_post
  # Create a Baas Business
  # @param baas_business_co baasBusinessCO
  # @param [Hash] opts the optional parameters
  # @return [BaasBusinessVO]
  describe 'create_baas_business_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_baas_client_using_post
  # Create a Baas Client
  # @param baas_client_co baasClientCO
  # @param [Hash] opts the optional parameters
  # @return [BaasClientVO]
  describe 'create_baas_client_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_baas_sub_account_using_post
  # create a Baas subaccount
  # @param baas_sub_account_co baasSubAccountCO
  # @param [Hash] opts the optional parameters
  # @return [BaasSubAccountVO]
  describe 'create_baas_sub_account_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_baas_account_statement_using_get
  # Get a Baas account statement
  # @param end_date end_date
  # @param nucleus_account_id nucleus_account_id
  # @param start_date start_date
  # @param [Hash] opts the optional parameters
  # @option opts [String] :statement_type statement_type
  # @return [BaasStatementsVO]
  describe 'get_baas_account_statement_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_baas_portfolio_balance_using_get
  # Get a Baas portfolio balance
  # @param nucleus_portfolio_id nucleus_portfolio_id
  # @param [Hash] opts the optional parameters
  # @option opts [Date] :end_date end_date
  # @option opts [Date] :start_date start_date
  # @return [BaasBalanceVO]
  describe 'get_baas_portfolio_balance_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_baas_portfolio_transaction_using_get
  # Get a Baas portfolio transaction
  # @param nucleus_portfolio_id nucleus_portfolio_id
  # @param [Hash] opts the optional parameters
  # @option opts [Date] :end_date end_date
  # @option opts [Date] :start_date start_date
  # @return [BaasTransactionsVO]
  describe 'get_baas_portfolio_transaction_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_baas_business_using_put
  # Update a Baas business
  # @param nucleus_business_id nucleus_business_id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateBaasBusinessCO] :baas_business_co baasBusinessCO
  # @return [BaasBusinessVO]
  describe 'update_baas_business_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_baas_client_using_put
  # Update a Baas client
  # @param nucleus_client_id nucleus_client_id
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateBaasClientCO] :baas_client_co baasClientCO
  # @return [BaasClientVO]
  describe 'update_baas_client_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
