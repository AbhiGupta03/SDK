=begin
#Hydrogen Integration API

#The Hydrogen Integration API

OpenAPI spec version: 1.2.1
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.18

=end

require 'uri'

module IntegrationApi
  class ACHApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Cancel the ACH transfer
    # @param nucleus_funding_id nucleus_funding_id
    # @param [Hash] opts the optional parameters
    # @return [AchTransferResponseVO]
    def cancel_ach_transfer_using_delete(nucleus_funding_id, opts = {})
      data, _status_code, _headers = cancel_ach_transfer_using_delete_with_http_info(nucleus_funding_id, opts)
      data
    end

    # Cancel the ACH transfer
    # @param nucleus_funding_id nucleus_funding_id
    # @param [Hash] opts the optional parameters
    # @return [Array<(AchTransferResponseVO, Fixnum, Hash)>] AchTransferResponseVO data, response status code and response headers
    def cancel_ach_transfer_using_delete_with_http_info(nucleus_funding_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.cancel_ach_transfer_using_delete ...'
      end
      # verify the required parameter 'nucleus_funding_id' is set
      if @api_client.config.client_side_validation && nucleus_funding_id.nil?
        fail ArgumentError, "Missing the required parameter 'nucleus_funding_id' when calling ACHApi.cancel_ach_transfer_using_delete"
      end
      # resource path
      local_var_path = '/ach/{nucleus_funding_id}'.sub('{' + 'nucleus_funding_id' + '}', nucleus_funding_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AchTransferResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#cancel_ach_transfer_using_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create an ACH card link
    # @param card_link_request_co cardLinkRequestCO
    # @param [Hash] opts the optional parameters
    # @return [AchCardLinkResponseVO]
    def create_ach_card_link_using_post(card_link_request_co, opts = {})
      data, _status_code, _headers = create_ach_card_link_using_post_with_http_info(card_link_request_co, opts)
      data
    end

    # Create an ACH card link
    # @param card_link_request_co cardLinkRequestCO
    # @param [Hash] opts the optional parameters
    # @return [Array<(AchCardLinkResponseVO, Fixnum, Hash)>] AchCardLinkResponseVO data, response status code and response headers
    def create_ach_card_link_using_post_with_http_info(card_link_request_co, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.create_ach_card_link_using_post ...'
      end
      # verify the required parameter 'card_link_request_co' is set
      if @api_client.config.client_side_validation && card_link_request_co.nil?
        fail ArgumentError, "Missing the required parameter 'card_link_request_co' when calling ACHApi.create_ach_card_link_using_post"
      end
      # resource path
      local_var_path = '/ach/card_link'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(card_link_request_co)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AchCardLinkResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#create_ach_card_link_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create bank link
    # @param ach_bank_link_request_co achBankLinkRequestCO
    # @param [Hash] opts the optional parameters
    # @return [AchBankLinkResponseVO]
    def create_bank_link_using_post(ach_bank_link_request_co, opts = {})
      data, _status_code, _headers = create_bank_link_using_post_with_http_info(ach_bank_link_request_co, opts)
      data
    end

    # Create bank link
    # @param ach_bank_link_request_co achBankLinkRequestCO
    # @param [Hash] opts the optional parameters
    # @return [Array<(AchBankLinkResponseVO, Fixnum, Hash)>] AchBankLinkResponseVO data, response status code and response headers
    def create_bank_link_using_post_with_http_info(ach_bank_link_request_co, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.create_bank_link_using_post ...'
      end
      # verify the required parameter 'ach_bank_link_request_co' is set
      if @api_client.config.client_side_validation && ach_bank_link_request_co.nil?
        fail ArgumentError, "Missing the required parameter 'ach_bank_link_request_co' when calling ACHApi.create_bank_link_using_post"
      end
      # resource path
      local_var_path = '/ach/bank_link'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(ach_bank_link_request_co)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AchBankLinkResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#create_bank_link_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create a business
    # @param business_request businessRequest
    # @param [Hash] opts the optional parameters
    # @return [BaseResponseVO]
    def create_business_using_post(business_request, opts = {})
      data, _status_code, _headers = create_business_using_post_with_http_info(business_request, opts)
      data
    end

    # Create a business
    # @param business_request businessRequest
    # @param [Hash] opts the optional parameters
    # @return [Array<(BaseResponseVO, Fixnum, Hash)>] BaseResponseVO data, response status code and response headers
    def create_business_using_post_with_http_info(business_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.create_business_using_post ...'
      end
      # verify the required parameter 'business_request' is set
      if @api_client.config.client_side_validation && business_request.nil?
        fail ArgumentError, "Missing the required parameter 'business_request' when calling ACHApi.create_business_using_post"
      end
      # resource path
      local_var_path = '/ach/business'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(business_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'BaseResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#create_business_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create a client
    # @param client_request clientRequest
    # @param [Hash] opts the optional parameters
    # @return [AchClientResponseVO]
    def create_client_using_post(client_request, opts = {})
      data, _status_code, _headers = create_client_using_post_with_http_info(client_request, opts)
      data
    end

    # Create a client
    # @param client_request clientRequest
    # @param [Hash] opts the optional parameters
    # @return [Array<(AchClientResponseVO, Fixnum, Hash)>] AchClientResponseVO data, response status code and response headers
    def create_client_using_post_with_http_info(client_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.create_client_using_post ...'
      end
      # verify the required parameter 'client_request' is set
      if @api_client.config.client_side_validation && client_request.nil?
        fail ArgumentError, "Missing the required parameter 'client_request' when calling ACHApi.create_client_using_post"
      end
      # resource path
      local_var_path = '/ach/client'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(client_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AchClientResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#create_client_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete bank link
    # @param nucleus_bank_link_id nucleus_bank_link_id
    # @param [Hash] opts the optional parameters
    # @return [AchBankLinkResponseVO]
    def delete_bank_link_using_delete(nucleus_bank_link_id, opts = {})
      data, _status_code, _headers = delete_bank_link_using_delete_with_http_info(nucleus_bank_link_id, opts)
      data
    end

    # Delete bank link
    # @param nucleus_bank_link_id nucleus_bank_link_id
    # @param [Hash] opts the optional parameters
    # @return [Array<(AchBankLinkResponseVO, Fixnum, Hash)>] AchBankLinkResponseVO data, response status code and response headers
    def delete_bank_link_using_delete_with_http_info(nucleus_bank_link_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.delete_bank_link_using_delete ...'
      end
      # verify the required parameter 'nucleus_bank_link_id' is set
      if @api_client.config.client_side_validation && nucleus_bank_link_id.nil?
        fail ArgumentError, "Missing the required parameter 'nucleus_bank_link_id' when calling ACHApi.delete_bank_link_using_delete"
      end
      # resource path
      local_var_path = '/ach/bank_link/{nucleus_bank_link_id}'.sub('{' + 'nucleus_bank_link_id' + '}', nucleus_bank_link_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AchBankLinkResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#delete_bank_link_using_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get the ACH transfer
    # @param nucleus_funding_id nucleus_funding_id
    # @param [Hash] opts the optional parameters
    # @return [AchTransferResponseVO]
    def get_ach_transfer_using_get(nucleus_funding_id, opts = {})
      data, _status_code, _headers = get_ach_transfer_using_get_with_http_info(nucleus_funding_id, opts)
      data
    end

    # Get the ACH transfer
    # @param nucleus_funding_id nucleus_funding_id
    # @param [Hash] opts the optional parameters
    # @return [Array<(AchTransferResponseVO, Fixnum, Hash)>] AchTransferResponseVO data, response status code and response headers
    def get_ach_transfer_using_get_with_http_info(nucleus_funding_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.get_ach_transfer_using_get ...'
      end
      # verify the required parameter 'nucleus_funding_id' is set
      if @api_client.config.client_side_validation && nucleus_funding_id.nil?
        fail ArgumentError, "Missing the required parameter 'nucleus_funding_id' when calling ACHApi.get_ach_transfer_using_get"
      end
      # resource path
      local_var_path = '/ach/{nucleus_funding_id}'.sub('{' + 'nucleus_funding_id' + '}', nucleus_funding_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AchTransferResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#get_ach_transfer_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get balance
    # @param portfolio_id portfolio_id
    # @param [Hash] opts the optional parameters
    # @option opts [Date] :end_date end_date
    # @option opts [Date] :start_date start_date
    # @return [AchBalanceResponseVO]
    def get_balance_using_get(portfolio_id, opts = {})
      data, _status_code, _headers = get_balance_using_get_with_http_info(portfolio_id, opts)
      data
    end

    # Get balance
    # @param portfolio_id portfolio_id
    # @param [Hash] opts the optional parameters
    # @option opts [Date] :end_date end_date
    # @option opts [Date] :start_date start_date
    # @return [Array<(AchBalanceResponseVO, Fixnum, Hash)>] AchBalanceResponseVO data, response status code and response headers
    def get_balance_using_get_with_http_info(portfolio_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.get_balance_using_get ...'
      end
      # verify the required parameter 'portfolio_id' is set
      if @api_client.config.client_side_validation && portfolio_id.nil?
        fail ArgumentError, "Missing the required parameter 'portfolio_id' when calling ACHApi.get_balance_using_get"
      end
      # resource path
      local_var_path = '/ach/balance/{portfolio_id}'.sub('{' + 'portfolio_id' + '}', portfolio_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'end_date'] = opts[:'end_date'] if !opts[:'end_date'].nil?
      query_params[:'start_date'] = opts[:'start_date'] if !opts[:'start_date'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AchBalanceResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#get_balance_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get bank link
    # @param nucleus_bank_link_id nucleus_bank_link_id
    # @param [Hash] opts the optional parameters
    # @return [AchBankLinkResponseVO]
    def get_bank_link_using_get(nucleus_bank_link_id, opts = {})
      data, _status_code, _headers = get_bank_link_using_get_with_http_info(nucleus_bank_link_id, opts)
      data
    end

    # Get bank link
    # @param nucleus_bank_link_id nucleus_bank_link_id
    # @param [Hash] opts the optional parameters
    # @return [Array<(AchBankLinkResponseVO, Fixnum, Hash)>] AchBankLinkResponseVO data, response status code and response headers
    def get_bank_link_using_get_with_http_info(nucleus_bank_link_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.get_bank_link_using_get ...'
      end
      # verify the required parameter 'nucleus_bank_link_id' is set
      if @api_client.config.client_side_validation && nucleus_bank_link_id.nil?
        fail ArgumentError, "Missing the required parameter 'nucleus_bank_link_id' when calling ACHApi.get_bank_link_using_get"
      end
      # resource path
      local_var_path = '/ach/bank_link/{nucleus_bank_link_id}'.sub('{' + 'nucleus_bank_link_id' + '}', nucleus_bank_link_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AchBankLinkResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#get_bank_link_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get bank links for a reserve account
    # @param [Hash] opts the optional parameters
    # @return [Array<AchBankLinkResponseVO>]
    def get_bank_links_for_reserve_account_using_get(opts = {})
      data, _status_code, _headers = get_bank_links_for_reserve_account_using_get_with_http_info(opts)
      data
    end

    # Get bank links for a reserve account
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<AchBankLinkResponseVO>, Fixnum, Hash)>] Array<AchBankLinkResponseVO> data, response status code and response headers
    def get_bank_links_for_reserve_account_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.get_bank_links_for_reserve_account_using_get ...'
      end
      # resource path
      local_var_path = '/ach/bank_link/reserve'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<AchBankLinkResponseVO>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#get_bank_links_for_reserve_account_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get client bank links
    # @param nucleus_client_id nucleus_client_id
    # @param [Hash] opts the optional parameters
    # @return [Array<AchBankLinkResponseVO>]
    def get_client_bank_links_using_get(nucleus_client_id, opts = {})
      data, _status_code, _headers = get_client_bank_links_using_get_with_http_info(nucleus_client_id, opts)
      data
    end

    # Get client bank links
    # @param nucleus_client_id nucleus_client_id
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<AchBankLinkResponseVO>, Fixnum, Hash)>] Array<AchBankLinkResponseVO> data, response status code and response headers
    def get_client_bank_links_using_get_with_http_info(nucleus_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.get_client_bank_links_using_get ...'
      end
      # verify the required parameter 'nucleus_client_id' is set
      if @api_client.config.client_side_validation && nucleus_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'nucleus_client_id' when calling ACHApi.get_client_bank_links_using_get"
      end
      # resource path
      local_var_path = '/ach/bank_link/client/{nucleus_client_id}'.sub('{' + 'nucleus_client_id' + '}', nucleus_client_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<AchBankLinkResponseVO>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#get_client_bank_links_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get a list of client's ACH transfers
    # @param nucleus_client_id nucleus_client_id
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page page (default to 0)
    # @option opts [Integer] :size size (default to 25)
    # @return [PageAchTransferResponseVO]
    def get_list_of_client_ach_transfers_using_get(nucleus_client_id, opts = {})
      data, _status_code, _headers = get_list_of_client_ach_transfers_using_get_with_http_info(nucleus_client_id, opts)
      data
    end

    # Get a list of client&#39;s ACH transfers
    # @param nucleus_client_id nucleus_client_id
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :page page
    # @option opts [Integer] :size size
    # @return [Array<(PageAchTransferResponseVO, Fixnum, Hash)>] PageAchTransferResponseVO data, response status code and response headers
    def get_list_of_client_ach_transfers_using_get_with_http_info(nucleus_client_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.get_list_of_client_ach_transfers_using_get ...'
      end
      # verify the required parameter 'nucleus_client_id' is set
      if @api_client.config.client_side_validation && nucleus_client_id.nil?
        fail ArgumentError, "Missing the required parameter 'nucleus_client_id' when calling ACHApi.get_list_of_client_ach_transfers_using_get"
      end
      # resource path
      local_var_path = '/ach/client/{nucleus_client_id}'.sub('{' + 'nucleus_client_id' + '}', nucleus_client_id.to_s)

      # query parameters
      query_params = {}
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'size'] = opts[:'size'] if !opts[:'size'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageAchTransferResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#get_list_of_client_ach_transfers_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get a list of tenant's ACH transfers
    # @param [Hash] opts the optional parameters
    # @option opts [Date] :end_date end_date
    # @option opts [Integer] :page page (default to 0)
    # @option opts [Integer] :size size (default to 25)
    # @option opts [Date] :start_date start_date
    # @option opts [String] :status status
    # @return [PageAchTransferResponseVO]
    def get_list_of_tenant_ach_transfers_using_get(opts = {})
      data, _status_code, _headers = get_list_of_tenant_ach_transfers_using_get_with_http_info(opts)
      data
    end

    # Get a list of tenant&#39;s ACH transfers
    # @param [Hash] opts the optional parameters
    # @option opts [Date] :end_date end_date
    # @option opts [Integer] :page page
    # @option opts [Integer] :size size
    # @option opts [Date] :start_date start_date
    # @option opts [String] :status status
    # @return [Array<(PageAchTransferResponseVO, Fixnum, Hash)>] PageAchTransferResponseVO data, response status code and response headers
    def get_list_of_tenant_ach_transfers_using_get_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.get_list_of_tenant_ach_transfers_using_get ...'
      end
      # resource path
      local_var_path = '/ach'

      # query parameters
      query_params = {}
      query_params[:'end_date'] = opts[:'end_date'] if !opts[:'end_date'].nil?
      query_params[:'page'] = opts[:'page'] if !opts[:'page'].nil?
      query_params[:'size'] = opts[:'size'] if !opts[:'size'].nil?
      query_params[:'start_date'] = opts[:'start_date'] if !opts[:'start_date'].nil?
      query_params[:'status'] = opts[:'status'] if !opts[:'status'].nil?

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'PageAchTransferResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#get_list_of_tenant_ach_transfers_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Submit an ACH transfer
    # @param transfer_request transferRequest
    # @param [Hash] opts the optional parameters
    # @return [AchTransferResponseVO]
    def submit_ach_transfer_using_post(transfer_request, opts = {})
      data, _status_code, _headers = submit_ach_transfer_using_post_with_http_info(transfer_request, opts)
      data
    end

    # Submit an ACH transfer
    # @param transfer_request transferRequest
    # @param [Hash] opts the optional parameters
    # @return [Array<(AchTransferResponseVO, Fixnum, Hash)>] AchTransferResponseVO data, response status code and response headers
    def submit_ach_transfer_using_post_with_http_info(transfer_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.submit_ach_transfer_using_post ...'
      end
      # verify the required parameter 'transfer_request' is set
      if @api_client.config.client_side_validation && transfer_request.nil?
        fail ArgumentError, "Missing the required parameter 'transfer_request' when calling ACHApi.submit_ach_transfer_using_post"
      end
      # resource path
      local_var_path = '/ach'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(transfer_request)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AchTransferResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#submit_ach_transfer_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Update bank link
    # @param nucleus_bank_link_id nucleus_bank_link_id
    # @param [Hash] opts the optional parameters
    # @return [AchBankLinkResponseVO]
    def update_bank_link_using_put(nucleus_bank_link_id, opts = {})
      data, _status_code, _headers = update_bank_link_using_put_with_http_info(nucleus_bank_link_id, opts)
      data
    end

    # Update bank link
    # @param nucleus_bank_link_id nucleus_bank_link_id
    # @param [Hash] opts the optional parameters
    # @return [Array<(AchBankLinkResponseVO, Fixnum, Hash)>] AchBankLinkResponseVO data, response status code and response headers
    def update_bank_link_using_put_with_http_info(nucleus_bank_link_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ACHApi.update_bank_link_using_put ...'
      end
      # verify the required parameter 'nucleus_bank_link_id' is set
      if @api_client.config.client_side_validation && nucleus_bank_link_id.nil?
        fail ArgumentError, "Missing the required parameter 'nucleus_bank_link_id' when calling ACHApi.update_bank_link_using_put"
      end
      # resource path
      local_var_path = '/ach/bank_link/{nucleus_bank_link_id}'.sub('{' + 'nucleus_bank_link_id' + '}', nucleus_bank_link_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'AchBankLinkResponseVO')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ACHApi#update_bank_link_using_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
