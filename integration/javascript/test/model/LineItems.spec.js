/*
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenIntegrationApi);
  }
}(this, function(expect, HydrogenIntegrationApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('LineItems', function() {
      beforeEach(function() {
        instance = new HydrogenIntegrationApi.LineItems();
      });

      it('should create an instance of LineItems', function() {
        // TODO: update the code to test LineItems
        expect(instance).to.be.a(HydrogenIntegrationApi.LineItems);
      });

      it('should have the property amount (base name: "amount")', function() {
        // TODO: update the code to test the property amount
        expect(instance).to.have.property('amount');
        // expect(instance.amount).to.be(expectedValueLiteral);
      });

      it('should have the property currencyCode (base name: "currency_code")', function() {
        // TODO: update the code to test the property currencyCode
        expect(instance).to.have.property('currencyCode');
        // expect(instance.currencyCode).to.be(expectedValueLiteral);
      });

      it('should have the property description (base name: "description")', function() {
        // TODO: update the code to test the property description
        expect(instance).to.have.property('description');
        // expect(instance.description).to.be(expectedValueLiteral);
      });

      it('should have the property lineItemId (base name: "line_item_id")', function() {
        // TODO: update the code to test the property lineItemId
        expect(instance).to.have.property('lineItemId');
        // expect(instance.lineItemId).to.be(expectedValueLiteral);
      });

      it('should have the property quantity (base name: "quantity")', function() {
        // TODO: update the code to test the property quantity
        expect(instance).to.have.property('quantity');
        // expect(instance.quantity).to.be(expectedValueLiteral);
      });

      it('should have the property rate (base name: "rate")', function() {
        // TODO: update the code to test the property rate
        expect(instance).to.have.property('rate');
        // expect(instance.rate).to.be(expectedValueLiteral);
      });

      it('should have the property subtotal (base name: "subtotal")', function() {
        // TODO: update the code to test the property subtotal
        expect(instance).to.have.property('subtotal');
        // expect(instance.subtotal).to.be(expectedValueLiteral);
      });

      it('should have the property tax (base name: "tax")', function() {
        // TODO: update the code to test the property tax
        expect(instance).to.have.property('tax');
        // expect(instance.tax).to.be(expectedValueLiteral);
      });

    });
  });

}));
