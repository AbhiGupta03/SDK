/**
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenIntegrationApi);
  }
}(this, function(expect, HydrogenIntegrationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BusinessVendorRequestDataVO', function() {
    it('should create an instance of BusinessVendorRequestDataVO', function() {
      // uncomment below and update the code to test BusinessVendorRequestDataVO
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be.a(HydrogenIntegrationApi.BusinessVendorRequestDataVO);
    });

    it('should have the property businessAddresses (base name: "business_addresses")', function() {
      // uncomment below and update the code to test the property businessAddresses
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property dbaName (base name: "dba_name")', function() {
      // uncomment below and update the code to test the property dbaName
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property identificationNumber (base name: "identification_number")', function() {
      // uncomment below and update the code to test the property identificationNumber
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property identificationNumberType (base name: "identification_number_type")', function() {
      // uncomment below and update the code to test the property identificationNumberType
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property incorporationDate (base name: "incorporation_date")', function() {
      // uncomment below and update the code to test the property incorporationDate
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property incorporationState (base name: "incorporation_state")', function() {
      // uncomment below and update the code to test the property incorporationState
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property isPublic (base name: "is_public")', function() {
      // uncomment below and update the code to test the property isPublic
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property legalName (base name: "legal_name")', function() {
      // uncomment below and update the code to test the property legalName
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property legalStructure (base name: "legal_structure")', function() {
      // uncomment below and update the code to test the property legalStructure
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property owners (base name: "owners")', function() {
      // uncomment below and update the code to test the property owners
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phone_number")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property ticker (base name: "ticker")', function() {
      // uncomment below and update the code to test the property ticker
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instane = new HydrogenIntegrationApi.BusinessVendorRequestDataVO();
      //expect(instance).to.be();
    });

  });

}));
