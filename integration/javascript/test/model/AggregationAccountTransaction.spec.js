/*
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenIntegrationApi);
  }
}(this, function(expect, HydrogenIntegrationApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('AggregationAccountTransaction', function() {
      beforeEach(function() {
        instance = new HydrogenIntegrationApi.AggregationAccountTransaction();
      });

      it('should create an instance of AggregationAccountTransaction', function() {
        // TODO: update the code to test AggregationAccountTransaction
        expect(instance).to.be.a(HydrogenIntegrationApi.AggregationAccountTransaction);
      });

      it('should have the property aggregationAccountId (base name: "aggregation_account_id")', function() {
        // TODO: update the code to test the property aggregationAccountId
        expect(instance).to.have.property('aggregationAccountId');
        // expect(instance.aggregationAccountId).to.be(expectedValueLiteral);
      });

      it('should have the property bankCredit (base name: "bank_credit")', function() {
        // TODO: update the code to test the property bankCredit
        expect(instance).to.have.property('bankCredit');
        // expect(instance.bankCredit).to.be(expectedValueLiteral);
      });

      it('should have the property cash (base name: "cash")', function() {
        // TODO: update the code to test the property cash
        expect(instance).to.have.property('cash');
        // expect(instance.cash).to.be(expectedValueLiteral);
      });

      it('should have the property createDate (base name: "create_date")', function() {
        // TODO: update the code to test the property createDate
        expect(instance).to.have.property('createDate');
        // expect(instance.createDate).to.be(expectedValueLiteral);
      });

      it('should have the property currencyCode (base name: "currency_code")', function() {
        // TODO: update the code to test the property currencyCode
        expect(instance).to.have.property('currencyCode');
        // expect(instance.currencyCode).to.be(expectedValueLiteral);
      });

      it('should have the property id (base name: "id")', function() {
        // TODO: update the code to test the property id
        expect(instance).to.have.property('id');
        // expect(instance.id).to.be(expectedValueLiteral);
      });

      it('should have the property investment (base name: "investment")', function() {
        // TODO: update the code to test the property investment
        expect(instance).to.have.property('investment');
        // expect(instance.investment).to.be(expectedValueLiteral);
      });

      it('should have the property isActive (base name: "is_active")', function() {
        // TODO: update the code to test the property isActive
        expect(instance).to.have.property('isActive');
        // expect(instance.isActive).to.be(expectedValueLiteral);
      });

      it('should have the property isExcludedAnalysis (base name: "is_excluded_analysis")', function() {
        // TODO: update the code to test the property isExcludedAnalysis
        expect(instance).to.have.property('isExcludedAnalysis');
        // expect(instance.isExcludedAnalysis).to.be(expectedValueLiteral);
      });

      it('should have the property isFee (base name: "is_fee")', function() {
        // TODO: update the code to test the property isFee
        expect(instance).to.have.property('isFee');
        // expect(instance.isFee).to.be(expectedValueLiteral);
      });

      it('should have the property isRecurring (base name: "is_recurring")', function() {
        // TODO: update the code to test the property isRecurring
        expect(instance).to.have.property('isRecurring');
        // expect(instance.isRecurring).to.be(expectedValueLiteral);
      });

      it('should have the property isTransfer (base name: "is_transfer")', function() {
        // TODO: update the code to test the property isTransfer
        expect(instance).to.have.property('isTransfer');
        // expect(instance.isTransfer).to.be(expectedValueLiteral);
      });

      it('should have the property metadata (base name: "metadata")', function() {
        // TODO: update the code to test the property metadata
        expect(instance).to.have.property('metadata');
        // expect(instance.metadata).to.be(expectedValueLiteral);
      });

      it('should have the property secondaryId (base name: "secondary_id")', function() {
        // TODO: update the code to test the property secondaryId
        expect(instance).to.have.property('secondaryId');
        // expect(instance.secondaryId).to.be(expectedValueLiteral);
      });

      it('should have the property status (base name: "status")', function() {
        // TODO: update the code to test the property status
        expect(instance).to.have.property('status');
        // expect(instance.status).to.be(expectedValueLiteral);
      });

      it('should have the property transactionDate (base name: "transaction_date")', function() {
        // TODO: update the code to test the property transactionDate
        expect(instance).to.have.property('transactionDate');
        // expect(instance.transactionDate).to.be(expectedValueLiteral);
      });

      it('should have the property updateDate (base name: "update_date")', function() {
        // TODO: update the code to test the property updateDate
        expect(instance).to.have.property('updateDate');
        // expect(instance.updateDate).to.be(expectedValueLiteral);
      });

    });
  });

}));
