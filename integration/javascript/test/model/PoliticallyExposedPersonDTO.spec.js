/*
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenIntegrationApi);
  }
}(this, function(expect, HydrogenIntegrationApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('PoliticallyExposedPersonDTO', function() {
      beforeEach(function() {
        instance = new HydrogenIntegrationApi.PoliticallyExposedPersonDTO();
      });

      it('should create an instance of PoliticallyExposedPersonDTO', function() {
        // TODO: update the code to test PoliticallyExposedPersonDTO
        expect(instance).to.be.a(HydrogenIntegrationApi.PoliticallyExposedPersonDTO);
      });

      it('should have the property association (base name: "association")', function() {
        // TODO: update the code to test the property association
        expect(instance).to.have.property('association');
        // expect(instance.association).to.be(expectedValueLiteral);
      });

      it('should have the property exposed (base name: "exposed")', function() {
        // TODO: update the code to test the property exposed
        expect(instance).to.have.property('exposed');
        // expect(instance.exposed).to.be(expectedValueLiteral);
      });

      it('should have the property name (base name: "name")', function() {
        // TODO: update the code to test the property name
        expect(instance).to.have.property('name');
        // expect(instance.name).to.be(expectedValueLiteral);
      });

      it('should have the property position (base name: "position")', function() {
        // TODO: update the code to test the property position
        expect(instance).to.have.property('position');
        // expect(instance.position).to.be(expectedValueLiteral);
      });

    });
  });

}));
