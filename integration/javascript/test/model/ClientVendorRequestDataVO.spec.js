/**
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenIntegrationApi);
  }
}(this, function(expect, HydrogenIntegrationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClientVendorRequestDataVO', function() {
    it('should create an instance of ClientVendorRequestDataVO', function() {
      // uncomment below and update the code to test ClientVendorRequestDataVO
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be.a(HydrogenIntegrationApi.ClientVendorRequestDataVO);
    });

    it('should have the property addresses (base name: "addresses")', function() {
      // uncomment below and update the code to test the property addresses
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property businessName (base name: "business_name")', function() {
      // uncomment below and update the code to test the property businessName
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property countryOfCitizenship (base name: "country_of_citizenship")', function() {
      // uncomment below and update the code to test the property countryOfCitizenship
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property dateOfBirth (base name: "date_of_birth")', function() {
      // uncomment below and update the code to test the property dateOfBirth
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property identificationNumber (base name: "identification_number")', function() {
      // uncomment below and update the code to test the property identificationNumber
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property identificationNumberType (base name: "identification_number_type")', function() {
      // uncomment below and update the code to test the property identificationNumberType
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property identifications (base name: "identifications")', function() {
      // uncomment below and update the code to test the property identifications
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property middleName (base name: "middle_name")', function() {
      // uncomment below and update the code to test the property middleName
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property phoneNumber (base name: "phone_number")', function() {
      // uncomment below and update the code to test the property phoneNumber
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property politicallyExposedPerson (base name: "politically_exposed_person")', function() {
      // uncomment below and update the code to test the property politicallyExposedPerson
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property prefix (base name: "prefix")', function() {
      // uncomment below and update the code to test the property prefix
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property suffix (base name: "suffix")', function() {
      // uncomment below and update the code to test the property suffix
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instane = new HydrogenIntegrationApi.ClientVendorRequestDataVO();
      //expect(instance).to.be();
    });

  });

}));
