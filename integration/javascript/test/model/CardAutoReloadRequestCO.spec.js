/*
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenIntegrationApi);
  }
}(this, function(expect, HydrogenIntegrationApi) {
  'use strict';

  var instance;

  describe('(package)', function() {
    describe('CardAutoReloadRequestCO', function() {
      beforeEach(function() {
        instance = new HydrogenIntegrationApi.CardAutoReloadRequestCO();
      });

      it('should create an instance of CardAutoReloadRequestCO', function() {
        // TODO: update the code to test CardAutoReloadRequestCO
        expect(instance).to.be.a(HydrogenIntegrationApi.CardAutoReloadRequestCO);
      });

      it('should have the property nucleusBankLinkId (base name: "nucleus_bank_link_id")', function() {
        // TODO: update the code to test the property nucleusBankLinkId
        expect(instance).to.have.property('nucleusBankLinkId');
        // expect(instance.nucleusBankLinkId).to.be(expectedValueLiteral);
      });

      it('should have the property nucleusClientId (base name: "nucleus_client_id")', function() {
        // TODO: update the code to test the property nucleusClientId
        expect(instance).to.have.property('nucleusClientId');
        // expect(instance.nucleusClientId).to.be(expectedValueLiteral);
      });

      it('should have the property reloadAmount (base name: "reload_amount")', function() {
        // TODO: update the code to test the property reloadAmount
        expect(instance).to.have.property('reloadAmount');
        // expect(instance.reloadAmount).to.be(expectedValueLiteral);
      });

      it('should have the property thresholdAmount (base name: "threshold_amount")', function() {
        // TODO: update the code to test the property thresholdAmount
        expect(instance).to.have.property('thresholdAmount');
        // expect(instance.thresholdAmount).to.be(expectedValueLiteral);
      });

    });
  });

}));
