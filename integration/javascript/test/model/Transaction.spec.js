/**
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenIntegrationApi);
  }
}(this, function(expect, HydrogenIntegrationApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HydrogenIntegrationApi.Transaction();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Transaction', function() {
    it('should create an instance of Transaction', function() {
      // uncomment below and update the code to test Transaction
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be.a(HydrogenIntegrationApi.Transaction);
    });

    it('should have the property accountAmount (base name: "account_amount")', function() {
      // uncomment below and update the code to test the property accountAmount
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property accountBalance (base name: "account_balance")', function() {
      // uncomment below and update the code to test the property accountBalance
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property accountType (base name: "account_type")', function() {
      // uncomment below and update the code to test the property accountType
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property comment (base name: "comment")', function() {
      // uncomment below and update the code to test the property comment
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property dividend (base name: "dividend")', function() {
      // uncomment below and update the code to test the property dividend
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property dividendTax (base name: "dividend_tax")', function() {
      // uncomment below and update the code to test the property dividendTax
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property dnb (base name: "dnb")', function() {
      // uncomment below and update the code to test the property dnb
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property feeBase (base name: "fee_base")', function() {
      // uncomment below and update the code to test the property feeBase
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property feeExchange (base name: "fee_exchange")', function() {
      // uncomment below and update the code to test the property feeExchange
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property feeSec (base name: "fee_sec")', function() {
      // uncomment below and update the code to test the property feeSec
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property feeTaf (base name: "fee_taf")', function() {
      // uncomment below and update the code to test the property feeTaf
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property feeXtraShares (base name: "fee_xtra_shares")', function() {
      // uncomment below and update the code to test the property feeXtraShares
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property fillPx (base name: "fill_px")', function() {
      // uncomment below and update the code to test the property fillPx
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property fillQty (base name: "fill_qty")', function() {
      // uncomment below and update the code to test the property fillQty
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property finTranId (base name: "fin_tran_id")', function() {
      // uncomment below and update the code to test the property finTranId
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property finTranTypeId (base name: "fin_tran_type_id")', function() {
      // uncomment below and update the code to test the property finTranTypeId
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property instrument (base name: "instrument")', function() {
      // uncomment below and update the code to test the property instrument
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property mergerAcquisition (base name: "merger_acquisition")', function() {
      // uncomment below and update the code to test the property mergerAcquisition
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "order_id")', function() {
      // uncomment below and update the code to test the property orderId
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property positionDelta (base name: "position_delta")', function() {
      // uncomment below and update the code to test the property positionDelta
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property systemAmount (base name: "system_amount")', function() {
      // uncomment below and update the code to test the property systemAmount
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

    it('should have the property tranWhen (base name: "tran_when")', function() {
      // uncomment below and update the code to test the property tranWhen
      //var instane = new HydrogenIntegrationApi.Transaction();
      //expect(instance).to.be();
    });

  });

}));
