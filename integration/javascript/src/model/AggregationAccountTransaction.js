/*
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/BankCredit', 'model/Cash', 'model/Investment'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./BankCredit'), require('./Cash'), require('./Investment'));
  } else {
    // Browser globals (root is window)
    if (!root.HydrogenIntegrationApi) {
      root.HydrogenIntegrationApi = {};
    }
    root.HydrogenIntegrationApi.AggregationAccountTransaction = factory(root.HydrogenIntegrationApi.ApiClient, root.HydrogenIntegrationApi.BankCredit, root.HydrogenIntegrationApi.Cash, root.HydrogenIntegrationApi.Investment);
  }
}(this, function(ApiClient, BankCredit, Cash, Investment) {
  'use strict';

  /**
   * The AggregationAccountTransaction model module.
   * @module model/AggregationAccountTransaction
   * @version 1.2.1
   */

  /**
   * Constructs a new <code>AggregationAccountTransaction</code>.
   * Aggregation Account Transaction Object
   * @alias module:model/AggregationAccountTransaction
   * @class
   * @param currencyCode {String} currencyCode
   * @param transactionDate {Date} transactionDate
   */
  var exports = function(currencyCode, transactionDate) {
    this.currencyCode = currencyCode;
    this.transactionDate = transactionDate;
  };

  /**
   * Constructs a <code>AggregationAccountTransaction</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AggregationAccountTransaction} obj Optional instance to populate.
   * @return {module:model/AggregationAccountTransaction} The populated <code>AggregationAccountTransaction</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('aggregation_account_id'))
        obj.aggregationAccountId = ApiClient.convertToType(data['aggregation_account_id'], 'String');
      if (data.hasOwnProperty('bank_credit'))
        obj.bankCredit = BankCredit.constructFromObject(data['bank_credit']);
      if (data.hasOwnProperty('cash'))
        obj.cash = Cash.constructFromObject(data['cash']);
      if (data.hasOwnProperty('create_date'))
        obj.createDate = ApiClient.convertToType(data['create_date'], 'Date');
      if (data.hasOwnProperty('currency_code'))
        obj.currencyCode = ApiClient.convertToType(data['currency_code'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('investment'))
        obj.investment = Investment.constructFromObject(data['investment']);
      if (data.hasOwnProperty('is_active'))
        obj.isActive = ApiClient.convertToType(data['is_active'], 'Boolean');
      if (data.hasOwnProperty('is_excluded_analysis'))
        obj.isExcludedAnalysis = ApiClient.convertToType(data['is_excluded_analysis'], 'Boolean');
      if (data.hasOwnProperty('is_recurring'))
        obj.isRecurring = ApiClient.convertToType(data['is_recurring'], 'Boolean');
      if (data.hasOwnProperty('metadata'))
        obj.metadata = ApiClient.convertToType(data['metadata'], {'String': 'String'});
      if (data.hasOwnProperty('secondary_id'))
        obj.secondaryId = ApiClient.convertToType(data['secondary_id'], 'String');
      if (data.hasOwnProperty('transaction_date'))
        obj.transactionDate = ApiClient.convertToType(data['transaction_date'], 'Date');
      if (data.hasOwnProperty('update_date'))
        obj.updateDate = ApiClient.convertToType(data['update_date'], 'Date');
    }
    return obj;
  }

  /**
   * aggregationAccountId
   * @member {String} aggregationAccountId
   */
  exports.prototype.aggregationAccountId = undefined;

  /**
   * @member {module:model/BankCredit} bankCredit
   */
  exports.prototype.bankCredit = undefined;

  /**
   * @member {module:model/Cash} cash
   */
  exports.prototype.cash = undefined;

  /**
   * createDate
   * @member {Date} createDate
   */
  exports.prototype.createDate = undefined;

  /**
   * currencyCode
   * @member {String} currencyCode
   */
  exports.prototype.currencyCode = undefined;

  /**
   * id
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * @member {module:model/Investment} investment
   */
  exports.prototype.investment = undefined;

  /**
   * isActive
   * @member {Boolean} isActive
   */
  exports.prototype.isActive = undefined;

  /**
   * is_excluded_analysis
   * @member {Boolean} isExcludedAnalysis
   */
  exports.prototype.isExcludedAnalysis = undefined;

  /**
   * @member {Boolean} isRecurring
   */
  exports.prototype.isRecurring = undefined;

  /**
   * @member {Object.<String, String>} metadata
   */
  exports.prototype.metadata = undefined;

  /**
   * @member {String} secondaryId
   */
  exports.prototype.secondaryId = undefined;

  /**
   * transactionDate
   * @member {Date} transactionDate
   */
  exports.prototype.transactionDate = undefined;

  /**
   * updateDate
   * @member {Date} updateDate
   */
  exports.prototype.updateDate = undefined;

  return exports;

}));
