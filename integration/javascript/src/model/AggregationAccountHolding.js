/*
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.HydrogenIntegrationApi) {
      root.HydrogenIntegrationApi = {};
    }
    root.HydrogenIntegrationApi.AggregationAccountHolding = factory(root.HydrogenIntegrationApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The AggregationAccountHolding model module.
   * @module model/AggregationAccountHolding
   * @version 1.2.1
   */

  /**
   * Constructs a new <code>AggregationAccountHolding</code>.
   * Aggregation Account Holding Object
   * @alias module:model/AggregationAccountHolding
   * @class
   * @param shares {Number} shares
   * @param ticker {String} ticker
   * @param tickerName {String} tickerName
   */
  var exports = function(shares, ticker, tickerName) {
    this.shares = shares;
    this.ticker = ticker;
    this.tickerName = tickerName;
  };

  /**
   * Constructs a <code>AggregationAccountHolding</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AggregationAccountHolding} obj Optional instance to populate.
   * @return {module:model/AggregationAccountHolding} The populated <code>AggregationAccountHolding</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('aggregation_account_id'))
        obj.aggregationAccountId = ApiClient.convertToType(data['aggregation_account_id'], 'String');
      if (data.hasOwnProperty('amount'))
        obj.amount = ApiClient.convertToType(data['amount'], 'Number');
      if (data.hasOwnProperty('asset_class'))
        obj.assetClass = ApiClient.convertToType(data['asset_class'], 'String');
      if (data.hasOwnProperty('cost_basis'))
        obj.costBasis = ApiClient.convertToType(data['cost_basis'], 'Number');
      if (data.hasOwnProperty('create_date'))
        obj.createDate = ApiClient.convertToType(data['create_date'], 'Date');
      if (data.hasOwnProperty('currency_code'))
        obj.currencyCode = ApiClient.convertToType(data['currency_code'], 'String');
      if (data.hasOwnProperty('cusip'))
        obj.cusip = ApiClient.convertToType(data['cusip'], 'String');
      if (data.hasOwnProperty('exchange'))
        obj.exchange = ApiClient.convertToType(data['exchange'], 'String');
      if (data.hasOwnProperty('holding_date'))
        obj.holdingDate = ApiClient.convertToType(data['holding_date'], 'Date');
      if (data.hasOwnProperty('holding_type'))
        obj.holdingType = ApiClient.convertToType(data['holding_type'], 'String');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('is_active'))
        obj.isActive = ApiClient.convertToType(data['is_active'], 'Boolean');
      if (data.hasOwnProperty('isin'))
        obj.isin = ApiClient.convertToType(data['isin'], 'String');
      if (data.hasOwnProperty('metadata'))
        obj.metadata = ApiClient.convertToType(data['metadata'], {'String': 'String'});
      if (data.hasOwnProperty('price'))
        obj.price = ApiClient.convertToType(data['price'], 'Number');
      if (data.hasOwnProperty('secondary_id'))
        obj.secondaryId = ApiClient.convertToType(data['secondary_id'], 'String');
      if (data.hasOwnProperty('shares'))
        obj.shares = ApiClient.convertToType(data['shares'], 'Number');
      if (data.hasOwnProperty('ticker'))
        obj.ticker = ApiClient.convertToType(data['ticker'], 'String');
      if (data.hasOwnProperty('ticker_name'))
        obj.tickerName = ApiClient.convertToType(data['ticker_name'], 'String');
      if (data.hasOwnProperty('update_date'))
        obj.updateDate = ApiClient.convertToType(data['update_date'], 'Date');
    }
    return obj;
  }

  /**
   * aggregationAccountId
   * @member {String} aggregationAccountId
   */
  exports.prototype.aggregationAccountId = undefined;

  /**
   * @member {Number} amount
   */
  exports.prototype.amount = undefined;

  /**
   * @member {String} assetClass
   */
  exports.prototype.assetClass = undefined;

  /**
   * @member {Number} costBasis
   */
  exports.prototype.costBasis = undefined;

  /**
   * createDate
   * @member {Date} createDate
   */
  exports.prototype.createDate = undefined;

  /**
   * @member {String} currencyCode
   */
  exports.prototype.currencyCode = undefined;

  /**
   * @member {String} cusip
   */
  exports.prototype.cusip = undefined;

  /**
   * @member {String} exchange
   */
  exports.prototype.exchange = undefined;

  /**
   * holding_date
   * @member {Date} holdingDate
   */
  exports.prototype.holdingDate = undefined;

  /**
   * @member {String} holdingType
   */
  exports.prototype.holdingType = undefined;

  /**
   * id
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * isActive
   * @member {Boolean} isActive
   */
  exports.prototype.isActive = undefined;

  /**
   * isin
   * @member {String} isin
   */
  exports.prototype.isin = undefined;

  /**
   * @member {Object.<String, String>} metadata
   */
  exports.prototype.metadata = undefined;

  /**
   * @member {Number} price
   */
  exports.prototype.price = undefined;

  /**
   * @member {String} secondaryId
   */
  exports.prototype.secondaryId = undefined;

  /**
   * shares
   * @member {Number} shares
   */
  exports.prototype.shares = undefined;

  /**
   * ticker
   * @member {String} ticker
   */
  exports.prototype.ticker = undefined;

  /**
   * tickerName
   * @member {String} tickerName
   */
  exports.prototype.tickerName = undefined;

  /**
   * updateDate
   * @member {Date} updateDate
   */
  exports.prototype.updateDate = undefined;


  return exports;

}));
