/*
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.18
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/LineItems'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./LineItems'));
  } else {
    // Browser globals (root is window)
    if (!root.HydrogenIntegrationApi) {
      root.HydrogenIntegrationApi = {};
    }
    root.HydrogenIntegrationApi.Invoice = factory(root.HydrogenIntegrationApi.ApiClient, root.HydrogenIntegrationApi.LineItems);
  }
}(this, function(ApiClient, LineItems) {
  'use strict';

  /**
   * The Invoice model module.
   * @module model/Invoice
   * @version 1.2.1
   */

  /**
   * Constructs a new <code>Invoice</code>.
   * Invoice Object
   * @alias module:model/Invoice
   * @class
   * @param currencyCode {String} currency_code
   * @param customerId {String} customer_id
   * @param dueDate {Date} due_date
   * @param invoiceDate {Date} invoice_date
   * @param invoiceNumber {String} invoice_number
   * @param totalAmount {Number} totalAmount
   */
  var exports = function(currencyCode, customerId, dueDate, invoiceDate, invoiceNumber, totalAmount) {
    this.currencyCode = currencyCode;
    this.customerId = customerId;
    this.dueDate = dueDate;
    this.invoiceDate = invoiceDate;
    this.invoiceNumber = invoiceNumber;
    this.totalAmount = totalAmount;
  };

  /**
   * Constructs a <code>Invoice</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Invoice} obj Optional instance to populate.
   * @return {module:model/Invoice} The populated <code>Invoice</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('client_id'))
        obj.clientId = ApiClient.convertToType(data['client_id'], 'String');
      if (data.hasOwnProperty('create_date'))
        obj.createDate = ApiClient.convertToType(data['create_date'], 'Date');
      if (data.hasOwnProperty('currency_code'))
        obj.currencyCode = ApiClient.convertToType(data['currency_code'], 'String');
      if (data.hasOwnProperty('customer_id'))
        obj.customerId = ApiClient.convertToType(data['customer_id'], 'String');
      if (data.hasOwnProperty('department'))
        obj.department = ApiClient.convertToType(data['department'], 'String');
      if (data.hasOwnProperty('description'))
        obj.description = ApiClient.convertToType(data['description'], 'String');
      if (data.hasOwnProperty('document_id'))
        obj.documentId = ApiClient.convertToType(data['document_id'], 'String');
      if (data.hasOwnProperty('due_date'))
        obj.dueDate = ApiClient.convertToType(data['due_date'], 'Date');
      if (data.hasOwnProperty('id'))
        obj.id = ApiClient.convertToType(data['id'], 'String');
      if (data.hasOwnProperty('invoice_date'))
        obj.invoiceDate = ApiClient.convertToType(data['invoice_date'], 'Date');
      if (data.hasOwnProperty('invoice_name'))
        obj.invoiceName = ApiClient.convertToType(data['invoice_name'], 'String');
      if (data.hasOwnProperty('invoice_number'))
        obj.invoiceNumber = ApiClient.convertToType(data['invoice_number'], 'String');
      if (data.hasOwnProperty('is_active'))
        obj.isActive = ApiClient.convertToType(data['is_active'], 'Boolean');
      if (data.hasOwnProperty('line_items'))
        obj.lineItems = ApiClient.convertToType(data['line_items'], [LineItems]);
      if (data.hasOwnProperty('metadata'))
        obj.metadata = ApiClient.convertToType(data['metadata'], {'String': 'String'});
      if (data.hasOwnProperty('payment_instructions'))
        obj.paymentInstructions = ApiClient.convertToType(data['payment_instructions'], 'String');
      if (data.hasOwnProperty('payment_terms'))
        obj.paymentTerms = ApiClient.convertToType(data['payment_terms'], 'String');
      if (data.hasOwnProperty('secondary_id'))
        obj.secondaryId = ApiClient.convertToType(data['secondary_id'], 'String');
      if (data.hasOwnProperty('status'))
        obj.status = ApiClient.convertToType(data['status'], 'String');
      if (data.hasOwnProperty('total_amount'))
        obj.totalAmount = ApiClient.convertToType(data['total_amount'], 'Number');
      if (data.hasOwnProperty('total_discount'))
        obj.totalDiscount = ApiClient.convertToType(data['total_discount'], 'Number');
      if (data.hasOwnProperty('total_due'))
        obj.totalDue = ApiClient.convertToType(data['total_due'], 'Number');
      if (data.hasOwnProperty('total_subtotal'))
        obj.totalSubtotal = ApiClient.convertToType(data['total_subtotal'], 'Number');
      if (data.hasOwnProperty('total_tax'))
        obj.totalTax = ApiClient.convertToType(data['total_tax'], 'Number');
      if (data.hasOwnProperty('update_date'))
        obj.updateDate = ApiClient.convertToType(data['update_date'], 'Date');
    }
    return obj;
  }

  /**
   * client_id
   * @member {String} clientId
   */
  exports.prototype.clientId = undefined;

  /**
   * @member {Date} createDate
   */
  exports.prototype.createDate = undefined;

  /**
   * currency_code
   * @member {String} currencyCode
   */
  exports.prototype.currencyCode = undefined;

  /**
   * customer_id
   * @member {String} customerId
   */
  exports.prototype.customerId = undefined;

  /**
   * department
   * @member {String} department
   */
  exports.prototype.department = undefined;

  /**
   * description
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * document_id
   * @member {String} documentId
   */
  exports.prototype.documentId = undefined;

  /**
   * due_date
   * @member {Date} dueDate
   */
  exports.prototype.dueDate = undefined;

  /**
   * @member {String} id
   */
  exports.prototype.id = undefined;

  /**
   * invoice_date
   * @member {Date} invoiceDate
   */
  exports.prototype.invoiceDate = undefined;

  /**
   * invoice_name
   * @member {String} invoiceName
   */
  exports.prototype.invoiceName = undefined;

  /**
   * invoice_number
   * @member {String} invoiceNumber
   */
  exports.prototype.invoiceNumber = undefined;

  /**
   * is_active
   * @member {Boolean} isActive
   */
  exports.prototype.isActive = undefined;

  /**
   * lineItems
   * @member {Array.<module:model/LineItems>} lineItems
   */
  exports.prototype.lineItems = undefined;

  /**
   * @member {Object.<String, String>} metadata
   */
  exports.prototype.metadata = undefined;

  /**
   * paymentInstructions
   * @member {String} paymentInstructions
   */
  exports.prototype.paymentInstructions = undefined;

  /**
   * paymentTerms
   * @member {String} paymentTerms
   */
  exports.prototype.paymentTerms = undefined;

  /**
   * @member {String} secondaryId
   */
  exports.prototype.secondaryId = undefined;

  /**
   * status
   * @member {String} status
   */
  exports.prototype.status = undefined;

  /**
   * totalAmount
   * @member {Number} totalAmount
   */
  exports.prototype.totalAmount = undefined;

  /**
   * totalDiscount
   * @member {Number} totalDiscount
   */
  exports.prototype.totalDiscount = undefined;

  /**
   * totalDue
   * @member {Number} totalDue
   */
  exports.prototype.totalDue = undefined;

  /**
   * totalSubtotal
   * @member {Number} totalSubtotal
   */
  exports.prototype.totalSubtotal = undefined;

  /**
   * totalTax
   * @member {Number} totalTax
   */
  exports.prototype.totalTax = undefined;

  /**
   * @member {Date} updateDate
   */
  exports.prototype.updateDate = undefined;


  return exports;

}));
