/**
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/KmsConfig', 'model/PageKmsConfig'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/KmsConfig'), require('../model/PageKmsConfig'));
  } else {
    // Browser globals (root is window)
    if (!root.HydrogenIntegrationApi) {
      root.HydrogenIntegrationApi = {};
    }
    root.HydrogenIntegrationApi.KMSApi = factory(root.HydrogenIntegrationApi.ApiClient, root.HydrogenIntegrationApi.KmsConfig, root.HydrogenIntegrationApi.PageKmsConfig);
  }
}(this, function(ApiClient, KmsConfig, PageKmsConfig) {
  'use strict';

  /**
   * KMS service.
   * @module api/KMSApi
   * @version 1.3.0
   */

  /**
   * Constructs a new KMSApi. 
   * @alias module:api/KMSApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the createKMSUsingPost operation.
     * @callback module:api/KMSApi~createKMSUsingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/KmsConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an secret key
     * Create an secret key.
     * @param {module:model/KmsConfig} kmsConfig kmsConfig
     * @param {module:api/KMSApi~createKMSUsingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/KmsConfig}
     */
    this.createKMSUsingPost = function(kmsConfig, callback) {
      var postBody = kmsConfig;

      // verify the required parameter 'kmsConfig' is set
      if (kmsConfig === undefined || kmsConfig === null) {
        throw new Error("Missing the required parameter 'kmsConfig' when calling createKMSUsingPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = KmsConfig;

      return this.apiClient.callApi(
        '/kms', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteKMSUsingDelete operation.
     * @callback module:api/KMSApi~deleteKMSUsingDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete an secret key value
     * Permanently delete an secret key value under a tenant.
     * @param {String} kmsId KMS Id
     * @param {module:api/KMSApi~deleteKMSUsingDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    this.deleteKMSUsingDelete = function(kmsId, callback) {
      var postBody = null;

      // verify the required parameter 'kmsId' is set
      if (kmsId === undefined || kmsId === null) {
        throw new Error("Missing the required parameter 'kmsId' when calling deleteKMSUsingDelete");
      }


      var pathParams = {
        'kms_id': kmsId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['*/*'];
      var returnType = null;

      return this.apiClient.callApi(
        '/kms/{kms_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getKMSAllUsingGet operation.
     * @callback module:api/KMSApi~getKMSAllUsingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageKmsConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List all KMS Clients
     * Get details for all clients registered with your business.
     * @param {Object} opts Optional parameters
     * @param {Boolean} opts.ascending ascending (default to false)
     * @param {String} opts.filter filter
     * @param {String} opts.orderBy order_by (default to update_date)
     * @param {Number} opts.page page (default to 0)
     * @param {Number} opts.size size (default to 25)
     * @param {module:api/KMSApi~getKMSAllUsingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageKmsConfig}
     */
    this.getKMSAllUsingGet = function(opts, callback) {
      opts = opts || {};
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
        'ascending': opts['ascending'],
        'filter': opts['filter'],
        'order_by': opts['orderBy'],
        'page': opts['page'],
        'size': opts['size']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PageKmsConfig;

      return this.apiClient.callApi(
        '/kms', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getKMSUsingGet operation.
     * @callback module:api/KMSApi~getKMSUsingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/KmsConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieve an secret key value
     * Retrieve the information for a specific value associated with a Secret key.
     * @param {String} kmsId KMS Id
     * @param {module:api/KMSApi~getKMSUsingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/KmsConfig}
     */
    this.getKMSUsingGet = function(kmsId, callback) {
      var postBody = null;

      // verify the required parameter 'kmsId' is set
      if (kmsId === undefined || kmsId === null) {
        throw new Error("Missing the required parameter 'kmsId' when calling getKMSUsingGet");
      }


      var pathParams = {
        'kms_id': kmsId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = KmsConfig;

      return this.apiClient.callApi(
        '/kms/{kms_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateKMSUsingPut operation.
     * @callback module:api/KMSApi~updateKMSUsingPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/KmsConfig} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an Key Value
     * Update the information for an key value.
     * @param {module:model/KmsConfig} kmsConfig kmsConfig
     * @param {String} kmsId kms_id
     * @param {module:api/KMSApi~updateKMSUsingPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/KmsConfig}
     */
    this.updateKMSUsingPut = function(kmsConfig, kmsId, callback) {
      var postBody = kmsConfig;

      // verify the required parameter 'kmsConfig' is set
      if (kmsConfig === undefined || kmsConfig === null) {
        throw new Error("Missing the required parameter 'kmsConfig' when calling updateKMSUsingPut");
      }

      // verify the required parameter 'kmsId' is set
      if (kmsId === undefined || kmsId === null) {
        throw new Error("Missing the required parameter 'kmsId' when calling updateKMSUsingPut");
      }


      var pathParams = {
        'kms_id': kmsId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = KmsConfig;

      return this.apiClient.callApi(
        '/kms/{kms_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
