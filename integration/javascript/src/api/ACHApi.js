/**
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.2.3
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AchBalanceResponseVO', 'model/AchBankLinkRequestCO', 'model/AchBankLinkResponseVO', 'model/AchBeneficialOwnerRequestCO', 'model/AchBeneficialOwnerResponseVO', 'model/AchBusinessRequestCO', 'model/AchBusinessResponseVO', 'model/AchCardLinkRequestCO', 'model/AchCardLinkResponseVO', 'model/AchCardRequestCO', 'model/AchCardReserveRequestCO', 'model/AchCardReserveResponseVO', 'model/AchCardResponseVO', 'model/AchClientRequestCO', 'model/AchClientResponseVO', 'model/AchReserveLinkRequestCO', 'model/AchReserveLinkResponseVO', 'model/AchTransferRequestCO', 'model/AchTransferResponseVO', 'model/PageAchTransferResponseVO'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/AchBalanceResponseVO'), require('../model/AchBankLinkRequestCO'), require('../model/AchBankLinkResponseVO'), require('../model/AchBeneficialOwnerRequestCO'), require('../model/AchBeneficialOwnerResponseVO'), require('../model/AchBusinessRequestCO'), require('../model/AchBusinessResponseVO'), require('../model/AchCardLinkRequestCO'), require('../model/AchCardLinkResponseVO'), require('../model/AchCardRequestCO'), require('../model/AchCardReserveRequestCO'), require('../model/AchCardReserveResponseVO'), require('../model/AchCardResponseVO'), require('../model/AchClientRequestCO'), require('../model/AchClientResponseVO'), require('../model/AchReserveLinkRequestCO'), require('../model/AchReserveLinkResponseVO'), require('../model/AchTransferRequestCO'), require('../model/AchTransferResponseVO'), require('../model/PageAchTransferResponseVO'));
  } else {
    // Browser globals (root is window)
    if (!root.HydrogenIntegrationApi) {
      root.HydrogenIntegrationApi = {};
    }
    root.HydrogenIntegrationApi.ACHApi = factory(root.HydrogenIntegrationApi.ApiClient, root.HydrogenIntegrationApi.AchBalanceResponseVO, root.HydrogenIntegrationApi.AchBankLinkRequestCO, root.HydrogenIntegrationApi.AchBankLinkResponseVO, root.HydrogenIntegrationApi.AchBeneficialOwnerRequestCO, root.HydrogenIntegrationApi.AchBeneficialOwnerResponseVO, root.HydrogenIntegrationApi.AchBusinessRequestCO, root.HydrogenIntegrationApi.AchBusinessResponseVO, root.HydrogenIntegrationApi.AchCardLinkRequestCO, root.HydrogenIntegrationApi.AchCardLinkResponseVO, root.HydrogenIntegrationApi.AchCardRequestCO, root.HydrogenIntegrationApi.AchCardReserveRequestCO, root.HydrogenIntegrationApi.AchCardReserveResponseVO, root.HydrogenIntegrationApi.AchCardResponseVO, root.HydrogenIntegrationApi.AchClientRequestCO, root.HydrogenIntegrationApi.AchClientResponseVO, root.HydrogenIntegrationApi.AchReserveLinkRequestCO, root.HydrogenIntegrationApi.AchReserveLinkResponseVO, root.HydrogenIntegrationApi.AchTransferRequestCO, root.HydrogenIntegrationApi.AchTransferResponseVO, root.HydrogenIntegrationApi.PageAchTransferResponseVO);
  }
}(this, function(ApiClient, AchBalanceResponseVO, AchBankLinkRequestCO, AchBankLinkResponseVO, AchBeneficialOwnerRequestCO, AchBeneficialOwnerResponseVO, AchBusinessRequestCO, AchBusinessResponseVO, AchCardLinkRequestCO, AchCardLinkResponseVO, AchCardRequestCO, AchCardReserveRequestCO, AchCardReserveResponseVO, AchCardResponseVO, AchClientRequestCO, AchClientResponseVO, AchReserveLinkRequestCO, AchReserveLinkResponseVO, AchTransferRequestCO, AchTransferResponseVO, PageAchTransferResponseVO) {
  'use strict';

  /**
   * ACH service.
   * @module api/ACHApi
   * @version 1.3.1
   */

  /**
   * Constructs a new ACHApi. 
   * @alias module:api/ACHApi
   * @class
   * @param {module:ApiClient} apiClient Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the cancelAchTransferUsingDelete operation.
     * @callback module:api/ACHApi~cancelAchTransferUsingDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchTransferResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel the ACH transfer
     * @param {String} nucleusFundingId nucleus_funding_id
     * @param {module:api/ACHApi~cancelAchTransferUsingDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchTransferResponseVO}
     */
    this.cancelAchTransferUsingDelete = function(nucleusFundingId, callback) {
      var postBody = null;

      // verify the required parameter 'nucleusFundingId' is set
      if (nucleusFundingId === undefined || nucleusFundingId === null) {
        throw new Error("Missing the required parameter 'nucleusFundingId' when calling cancelAchTransferUsingDelete");
      }


      var pathParams = {
        'nucleus_funding_id': nucleusFundingId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AchTransferResponseVO;

      return this.apiClient.callApi(
        '/ach/{nucleus_funding_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAchBankLinkUsingPost operation.
     * @callback module:api/ACHApi~createAchBankLinkUsingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchBankLinkResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create bank link
     * @param {module:model/AchBankLinkRequestCO} achBankLinkRequestCO achBankLinkRequestCO
     * @param {module:api/ACHApi~createAchBankLinkUsingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchBankLinkResponseVO}
     */
    this.createAchBankLinkUsingPost = function(achBankLinkRequestCO, callback) {
      var postBody = achBankLinkRequestCO;

      // verify the required parameter 'achBankLinkRequestCO' is set
      if (achBankLinkRequestCO === undefined || achBankLinkRequestCO === null) {
        throw new Error("Missing the required parameter 'achBankLinkRequestCO' when calling createAchBankLinkUsingPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AchBankLinkResponseVO;

      return this.apiClient.callApi(
        '/ach/bank_link', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAchBeneficialOwnerUsingPost operation.
     * @callback module:api/ACHApi~createAchBeneficialOwnerUsingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchBeneficialOwnerResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a beneficial owner
     * @param {module:model/AchBeneficialOwnerRequestCO} beneficialOwnerRequest beneficialOwnerRequest
     * @param {module:api/ACHApi~createAchBeneficialOwnerUsingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchBeneficialOwnerResponseVO}
     */
    this.createAchBeneficialOwnerUsingPost = function(beneficialOwnerRequest, callback) {
      var postBody = beneficialOwnerRequest;

      // verify the required parameter 'beneficialOwnerRequest' is set
      if (beneficialOwnerRequest === undefined || beneficialOwnerRequest === null) {
        throw new Error("Missing the required parameter 'beneficialOwnerRequest' when calling createAchBeneficialOwnerUsingPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AchBeneficialOwnerResponseVO;

      return this.apiClient.callApi(
        '/ach/business/beneficial_owner', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAchBusinessUsingPost operation.
     * @callback module:api/ACHApi~createAchBusinessUsingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchBusinessResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a business
     * @param {module:model/AchBusinessRequestCO} businessRequest businessRequest
     * @param {module:api/ACHApi~createAchBusinessUsingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchBusinessResponseVO}
     */
    this.createAchBusinessUsingPost = function(businessRequest, callback) {
      var postBody = businessRequest;

      // verify the required parameter 'businessRequest' is set
      if (businessRequest === undefined || businessRequest === null) {
        throw new Error("Missing the required parameter 'businessRequest' when calling createAchBusinessUsingPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AchBusinessResponseVO;

      return this.apiClient.callApi(
        '/ach/business', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAchCardLinkUsingPost operation.
     * @callback module:api/ACHApi~createAchCardLinkUsingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchCardLinkResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an ACH card link
     * @param {module:model/AchCardLinkRequestCO} cardLinkRequestCO cardLinkRequestCO
     * @param {module:api/ACHApi~createAchCardLinkUsingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchCardLinkResponseVO}
     */
    this.createAchCardLinkUsingPost = function(cardLinkRequestCO, callback) {
      var postBody = cardLinkRequestCO;

      // verify the required parameter 'cardLinkRequestCO' is set
      if (cardLinkRequestCO === undefined || cardLinkRequestCO === null) {
        throw new Error("Missing the required parameter 'cardLinkRequestCO' when calling createAchCardLinkUsingPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AchCardLinkResponseVO;

      return this.apiClient.callApi(
        '/ach/card_link', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAchCardReserveUsingPost operation.
     * @callback module:api/ACHApi~createAchCardReserveUsingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchCardReserveResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an ACH card reserve
     * @param {module:model/AchCardReserveRequestCO} cardReserveRequestCO cardReserveRequestCO
     * @param {module:api/ACHApi~createAchCardReserveUsingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchCardReserveResponseVO}
     */
    this.createAchCardReserveUsingPost = function(cardReserveRequestCO, callback) {
      var postBody = cardReserveRequestCO;

      // verify the required parameter 'cardReserveRequestCO' is set
      if (cardReserveRequestCO === undefined || cardReserveRequestCO === null) {
        throw new Error("Missing the required parameter 'cardReserveRequestCO' when calling createAchCardReserveUsingPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AchCardReserveResponseVO;

      return this.apiClient.callApi(
        '/ach/card_reserve', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAchClientUsingPost operation.
     * @callback module:api/ACHApi~createAchClientUsingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchClientResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a client
     * @param {module:model/AchClientRequestCO} clientRequest clientRequest
     * @param {module:api/ACHApi~createAchClientUsingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchClientResponseVO}
     */
    this.createAchClientUsingPost = function(clientRequest, callback) {
      var postBody = clientRequest;

      // verify the required parameter 'clientRequest' is set
      if (clientRequest === undefined || clientRequest === null) {
        throw new Error("Missing the required parameter 'clientRequest' when calling createAchClientUsingPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AchClientResponseVO;

      return this.apiClient.callApi(
        '/ach/client', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the createAchReserveLinkUsingPost operation.
     * @callback module:api/ACHApi~createAchReserveLinkUsingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchReserveLinkResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create an ACH reserve link
     * @param {module:model/AchReserveLinkRequestCO} reserveLinkRequestCO reserveLinkRequestCO
     * @param {module:api/ACHApi~createAchReserveLinkUsingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchReserveLinkResponseVO}
     */
    this.createAchReserveLinkUsingPost = function(reserveLinkRequestCO, callback) {
      var postBody = reserveLinkRequestCO;

      // verify the required parameter 'reserveLinkRequestCO' is set
      if (reserveLinkRequestCO === undefined || reserveLinkRequestCO === null) {
        throw new Error("Missing the required parameter 'reserveLinkRequestCO' when calling createAchReserveLinkUsingPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AchReserveLinkResponseVO;

      return this.apiClient.callApi(
        '/ach/reserve_link', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteAchBankLinkUsingDelete operation.
     * @callback module:api/ACHApi~deleteAchBankLinkUsingDeleteCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchBankLinkResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete bank link
     * @param {String} nucleusBankLinkId nucleus_bank_link_id
     * @param {module:api/ACHApi~deleteAchBankLinkUsingDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchBankLinkResponseVO}
     */
    this.deleteAchBankLinkUsingDelete = function(nucleusBankLinkId, callback) {
      var postBody = null;

      // verify the required parameter 'nucleusBankLinkId' is set
      if (nucleusBankLinkId === undefined || nucleusBankLinkId === null) {
        throw new Error("Missing the required parameter 'nucleusBankLinkId' when calling deleteAchBankLinkUsingDelete");
      }


      var pathParams = {
        'nucleus_bank_link_id': nucleusBankLinkId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AchBankLinkResponseVO;

      return this.apiClient.callApi(
        '/ach/bank_link/{nucleus_bank_link_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the fundCardUsingPost operation.
     * @callback module:api/ACHApi~fundCardUsingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchCardResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Fund card
     * @param {module:model/AchCardRequestCO} achCardRequestCO achCardRequestCO
     * @param {module:api/ACHApi~fundCardUsingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchCardResponseVO}
     */
    this.fundCardUsingPost = function(achCardRequestCO, callback) {
      var postBody = achCardRequestCO;

      // verify the required parameter 'achCardRequestCO' is set
      if (achCardRequestCO === undefined || achCardRequestCO === null) {
        throw new Error("Missing the required parameter 'achCardRequestCO' when calling fundCardUsingPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AchCardResponseVO;

      return this.apiClient.callApi(
        '/ach/card', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAchBalanceUsingGet operation.
     * @callback module:api/ACHApi~getAchBalanceUsingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchBalanceResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get balance
     * @param {String} portfolioId portfolio_id
     * @param {Object} opts Optional parameters
     * @param {Date} opts.endDate end_date
     * @param {Date} opts.startDate start_date
     * @param {module:api/ACHApi~getAchBalanceUsingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchBalanceResponseVO}
     */
    this.getAchBalanceUsingGet = function(portfolioId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'portfolioId' is set
      if (portfolioId === undefined || portfolioId === null) {
        throw new Error("Missing the required parameter 'portfolioId' when calling getAchBalanceUsingGet");
      }


      var pathParams = {
        'portfolio_id': portfolioId
      };
      var queryParams = {
        'end_date': opts['endDate'],
        'start_date': opts['startDate']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AchBalanceResponseVO;

      return this.apiClient.callApi(
        '/ach/balance/{portfolio_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAchBankLinkUsingGet operation.
     * @callback module:api/ACHApi~getAchBankLinkUsingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchBankLinkResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get bank link
     * @param {String} nucleusBankLinkId nucleus_bank_link_id
     * @param {module:api/ACHApi~getAchBankLinkUsingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchBankLinkResponseVO}
     */
    this.getAchBankLinkUsingGet = function(nucleusBankLinkId, callback) {
      var postBody = null;

      // verify the required parameter 'nucleusBankLinkId' is set
      if (nucleusBankLinkId === undefined || nucleusBankLinkId === null) {
        throw new Error("Missing the required parameter 'nucleusBankLinkId' when calling getAchBankLinkUsingGet");
      }


      var pathParams = {
        'nucleus_bank_link_id': nucleusBankLinkId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AchBankLinkResponseVO;

      return this.apiClient.callApi(
        '/ach/bank_link/{nucleus_bank_link_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAchBankLinksForReserveAccountUsingGet operation.
     * @callback module:api/ACHApi~getAchBankLinksForReserveAccountUsingGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AchBankLinkResponseVO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get bank links for a reserve account
     * @param {module:api/ACHApi~getAchBankLinksForReserveAccountUsingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/AchBankLinkResponseVO>}
     */
    this.getAchBankLinksForReserveAccountUsingGet = function(callback) {
      var postBody = null;


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [AchBankLinkResponseVO];

      return this.apiClient.callApi(
        '/ach/bank_link/reserve', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAchBusinessBalanceUsingGet operation.
     * @callback module:api/ACHApi~getAchBusinessBalanceUsingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchBalanceResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get business balance
     * @param {String} businessId business_id
     * @param {module:api/ACHApi~getAchBusinessBalanceUsingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchBalanceResponseVO}
     */
    this.getAchBusinessBalanceUsingGet = function(businessId, callback) {
      var postBody = null;

      // verify the required parameter 'businessId' is set
      if (businessId === undefined || businessId === null) {
        throw new Error("Missing the required parameter 'businessId' when calling getAchBusinessBalanceUsingGet");
      }


      var pathParams = {
        'business_id': businessId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AchBalanceResponseVO;

      return this.apiClient.callApi(
        '/ach/business/balance/{business_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAchClientBankLinksUsingGet operation.
     * @callback module:api/ACHApi~getAchClientBankLinksUsingGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AchBankLinkResponseVO>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get client bank links
     * @param {String} nucleusClientId nucleus_client_id
     * @param {module:api/ACHApi~getAchClientBankLinksUsingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/AchBankLinkResponseVO>}
     */
    this.getAchClientBankLinksUsingGet = function(nucleusClientId, callback) {
      var postBody = null;

      // verify the required parameter 'nucleusClientId' is set
      if (nucleusClientId === undefined || nucleusClientId === null) {
        throw new Error("Missing the required parameter 'nucleusClientId' when calling getAchClientBankLinksUsingGet");
      }


      var pathParams = {
        'nucleus_client_id': nucleusClientId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = [AchBankLinkResponseVO];

      return this.apiClient.callApi(
        '/ach/bank_link/client/{nucleus_client_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAchStatusUsingGet operation.
     * @callback module:api/ACHApi~getAchStatusUsingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchTransferResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the ACH status
     * @param {String} nucleusBusinessId nucleus_business_id
     * @param {module:api/ACHApi~getAchStatusUsingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchTransferResponseVO}
     */
    this.getAchStatusUsingGet = function(nucleusBusinessId, callback) {
      var postBody = null;

      // verify the required parameter 'nucleusBusinessId' is set
      if (nucleusBusinessId === undefined || nucleusBusinessId === null) {
        throw new Error("Missing the required parameter 'nucleusBusinessId' when calling getAchStatusUsingGet");
      }


      var pathParams = {
      };
      var queryParams = {
        'nucleus_business_id': nucleusBusinessId
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AchTransferResponseVO;

      return this.apiClient.callApi(
        '/ach/status', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getAchTransferUsingGet operation.
     * @callback module:api/ACHApi~getAchTransferUsingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchTransferResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the ACH transfer
     * @param {String} nucleusFundingId nucleus_funding_id
     * @param {module:api/ACHApi~getAchTransferUsingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchTransferResponseVO}
     */
    this.getAchTransferUsingGet = function(nucleusFundingId, callback) {
      var postBody = null;

      // verify the required parameter 'nucleusFundingId' is set
      if (nucleusFundingId === undefined || nucleusFundingId === null) {
        throw new Error("Missing the required parameter 'nucleusFundingId' when calling getAchTransferUsingGet");
      }


      var pathParams = {
        'nucleus_funding_id': nucleusFundingId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = AchTransferResponseVO;

      return this.apiClient.callApi(
        '/ach/{nucleus_funding_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the getListOfClientAchTransfersUsingGet operation.
     * @callback module:api/ACHApi~getListOfClientAchTransfersUsingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PageAchTransferResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of client&#39;s ACH transfers
     * @param {String} nucleusClientId nucleus_client_id
     * @param {Object} opts Optional parameters
     * @param {Number} opts.page page (default to 0)
     * @param {Number} opts.size size (default to 25)
     * @param {module:api/ACHApi~getListOfClientAchTransfersUsingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PageAchTransferResponseVO}
     */
    this.getListOfClientAchTransfersUsingGet = function(nucleusClientId, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'nucleusClientId' is set
      if (nucleusClientId === undefined || nucleusClientId === null) {
        throw new Error("Missing the required parameter 'nucleusClientId' when calling getListOfClientAchTransfersUsingGet");
      }


      var pathParams = {
        'nucleus_client_id': nucleusClientId
      };
      var queryParams = {
        'page': opts['page'],
        'size': opts['size']
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = PageAchTransferResponseVO;

      return this.apiClient.callApi(
        '/ach/client/{nucleus_client_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the submitAchTransferUsingPost operation.
     * @callback module:api/ACHApi~submitAchTransferUsingPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchTransferResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Submit an ACH transfer
     * @param {module:model/AchTransferRequestCO} transferRequest transferRequest
     * @param {module:api/ACHApi~submitAchTransferUsingPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchTransferResponseVO}
     */
    this.submitAchTransferUsingPost = function(transferRequest, callback) {
      var postBody = transferRequest;

      // verify the required parameter 'transferRequest' is set
      if (transferRequest === undefined || transferRequest === null) {
        throw new Error("Missing the required parameter 'transferRequest' when calling submitAchTransferUsingPost");
      }


      var pathParams = {
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AchTransferResponseVO;

      return this.apiClient.callApi(
        '/ach', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAchBankLinkUsingPut operation.
     * @callback module:api/ACHApi~updateAchBankLinkUsingPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AchBankLinkResponseVO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update bank link
     * @param {String} nucleusBankLinkId nucleus_bank_link_id
     * @param {module:api/ACHApi~updateAchBankLinkUsingPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AchBankLinkResponseVO}
     */
    this.updateAchBankLinkUsingPut = function(nucleusBankLinkId, callback) {
      var postBody = null;

      // verify the required parameter 'nucleusBankLinkId' is set
      if (nucleusBankLinkId === undefined || nucleusBankLinkId === null) {
        throw new Error("Missing the required parameter 'nucleusBankLinkId' when calling updateAchBankLinkUsingPut");
      }


      var pathParams = {
        'nucleus_bank_link_id': nucleusBankLinkId
      };
      var queryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = AchBankLinkResponseVO;

      return this.apiClient.callApi(
        '/ach/bank_link/{nucleus_bank_link_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
