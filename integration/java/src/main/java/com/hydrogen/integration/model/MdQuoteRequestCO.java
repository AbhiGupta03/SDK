/*
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.integration.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * MdQuoteRequestCO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-11T07:03:53.789Z")
public class MdQuoteRequestCO {
  @SerializedName("nucleus_security_id")
  private List<UUID> nucleusSecurityId = null;

  @SerializedName("product")
  private String product = null;

  @SerializedName("ticker")
  private List<String> ticker = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    DELAYED("delayed"),
    
    REALTIME("realtime");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public MdQuoteRequestCO nucleusSecurityId(List<UUID> nucleusSecurityId) {
    this.nucleusSecurityId = nucleusSecurityId;
    return this;
  }

  public MdQuoteRequestCO addNucleusSecurityIdItem(UUID nucleusSecurityIdItem) {
    if (this.nucleusSecurityId == null) {
      this.nucleusSecurityId = new ArrayList<UUID>();
    }
    this.nucleusSecurityId.add(nucleusSecurityIdItem);
    return this;
  }

   /**
   * Get nucleusSecurityId
   * @return nucleusSecurityId
  **/
  @ApiModelProperty(value = "")
  public List<UUID> getNucleusSecurityId() {
    return nucleusSecurityId;
  }

  public void setNucleusSecurityId(List<UUID> nucleusSecurityId) {
    this.nucleusSecurityId = nucleusSecurityId;
  }

  public MdQuoteRequestCO product(String product) {
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @ApiModelProperty(value = "")
  public String getProduct() {
    return product;
  }

  public void setProduct(String product) {
    this.product = product;
  }

  public MdQuoteRequestCO ticker(List<String> ticker) {
    this.ticker = ticker;
    return this;
  }

  public MdQuoteRequestCO addTickerItem(String tickerItem) {
    if (this.ticker == null) {
      this.ticker = new ArrayList<String>();
    }
    this.ticker.add(tickerItem);
    return this;
  }

   /**
   * Get ticker
   * @return ticker
  **/
  @ApiModelProperty(value = "")
  public List<String> getTicker() {
    return ticker;
  }

  public void setTicker(List<String> ticker) {
    this.ticker = ticker;
  }

  public MdQuoteRequestCO type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MdQuoteRequestCO mdQuoteRequestCO = (MdQuoteRequestCO) o;
    return Objects.equals(this.nucleusSecurityId, mdQuoteRequestCO.nucleusSecurityId) &&
        Objects.equals(this.product, mdQuoteRequestCO.product) &&
        Objects.equals(this.ticker, mdQuoteRequestCO.ticker) &&
        Objects.equals(this.type, mdQuoteRequestCO.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nucleusSecurityId, product, ticker, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MdQuoteRequestCO {\n");
    
    sb.append("    nucleusSecurityId: ").append(toIndentedString(nucleusSecurityId)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    ticker: ").append(toIndentedString(ticker)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

