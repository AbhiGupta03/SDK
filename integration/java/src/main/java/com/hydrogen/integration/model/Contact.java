/*
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.3.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.integration.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.hydrogen.integration.model.Balances;
import com.hydrogen.integration.model.ContactAddress;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * Contact Object
 */
@ApiModel(description = "Contact Object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-05-18T13:00:49.675Z")
public class Contact {
  @SerializedName("address")
  private List<ContactAddress> address = null;

  @SerializedName("balances")
  private Balances balances = null;

  @SerializedName("business_id")
  private UUID businessId = null;

  @SerializedName("client_id")
  private UUID clientId = null;

  @SerializedName("company_name")
  private String companyName = null;

  @SerializedName("create_date")
  private OffsetDateTime createDate = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("first_name")
  private String firstName = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("identification_number")
  private String identificationNumber = null;

  @SerializedName("is_active")
  private Boolean isActive = null;

  /**
   * isCustomer
   */
  @JsonAdapter(IsCustomerEnum.Adapter.class)
  public enum IsCustomerEnum {
    TRUE("true"),
    
    FALSE("false"),
    
    NULL("null");

    private String value;

    IsCustomerEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IsCustomerEnum fromValue(String text) {
      for (IsCustomerEnum b : IsCustomerEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<IsCustomerEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IsCustomerEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IsCustomerEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return IsCustomerEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("is_customer")
  private IsCustomerEnum isCustomer = IsCustomerEnum.NULL;

  /**
   * isSupplier
   */
  @JsonAdapter(IsSupplierEnum.Adapter.class)
  public enum IsSupplierEnum {
    TRUE("true"),
    
    FALSE("false"),
    
    NULL("null");

    private String value;

    IsSupplierEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static IsSupplierEnum fromValue(String text) {
      for (IsSupplierEnum b : IsSupplierEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<IsSupplierEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final IsSupplierEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public IsSupplierEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return IsSupplierEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("is_supplier")
  private IsSupplierEnum isSupplier = IsSupplierEnum.NULL;

  @SerializedName("last_name")
  private String lastName = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("update_date")
  private OffsetDateTime updateDate = null;

  public Contact address(List<ContactAddress> address) {
    this.address = address;
    return this;
  }

  public Contact addAddressItem(ContactAddress addressItem) {
    if (this.address == null) {
      this.address = new ArrayList<ContactAddress>();
    }
    this.address.add(addressItem);
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @ApiModelProperty(value = "")
  public List<ContactAddress> getAddress() {
    return address;
  }

  public void setAddress(List<ContactAddress> address) {
    this.address = address;
  }

  public Contact balances(Balances balances) {
    this.balances = balances;
    return this;
  }

   /**
   * Get balances
   * @return balances
  **/
  @ApiModelProperty(value = "")
  public Balances getBalances() {
    return balances;
  }

  public void setBalances(Balances balances) {
    this.balances = balances;
  }

  public Contact businessId(UUID businessId) {
    this.businessId = businessId;
    return this;
  }

   /**
   * businessId
   * @return businessId
  **/
  @ApiModelProperty(example = "50d76212-0fcd-4d36-8633-e4a52cbcb79f", value = "businessId")
  public UUID getBusinessId() {
    return businessId;
  }

  public void setBusinessId(UUID businessId) {
    this.businessId = businessId;
  }

  public Contact clientId(UUID clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * clientId
   * @return clientId
  **/
  @ApiModelProperty(example = "50d76212-0fcd-4d36-8633-e4a52cbcb79f", value = "clientId")
  public UUID getClientId() {
    return clientId;
  }

  public void setClientId(UUID clientId) {
    this.clientId = clientId;
  }

  public Contact companyName(String companyName) {
    this.companyName = companyName;
    return this;
  }

   /**
   * companyName
   * @return companyName
  **/
  @ApiModelProperty(example = "hydrogen", required = true, value = "companyName")
  public String getCompanyName() {
    return companyName;
  }

  public void setCompanyName(String companyName) {
    this.companyName = companyName;
  }

  public Contact createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }

  public Contact description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description
   * @return description
  **/
  @ApiModelProperty(example = "zgzIeci1iCzGYuqwNiFM", value = "description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Contact firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * firstName
   * @return firstName
  **/
  @ApiModelProperty(example = "firstname", value = "firstName")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public Contact id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public Contact identificationNumber(String identificationNumber) {
    this.identificationNumber = identificationNumber;
    return this;
  }

   /**
   * identificationNumber
   * @return identificationNumber
  **/
  @ApiModelProperty(example = "vAh1e9nuzp5NHmM6derx", value = "identificationNumber")
  public String getIdentificationNumber() {
    return identificationNumber;
  }

  public void setIdentificationNumber(String identificationNumber) {
    this.identificationNumber = identificationNumber;
  }

  public Contact isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * isActive
   * @return isActive
  **/
  @ApiModelProperty(example = "true", value = "isActive")
  public Boolean isIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public Contact isCustomer(IsCustomerEnum isCustomer) {
    this.isCustomer = isCustomer;
    return this;
  }

   /**
   * isCustomer
   * @return isCustomer
  **/
  @ApiModelProperty(example = "false", value = "isCustomer")
  public IsCustomerEnum getIsCustomer() {
    return isCustomer;
  }

  public void setIsCustomer(IsCustomerEnum isCustomer) {
    this.isCustomer = isCustomer;
  }

  public Contact isSupplier(IsSupplierEnum isSupplier) {
    this.isSupplier = isSupplier;
    return this;
  }

   /**
   * isSupplier
   * @return isSupplier
  **/
  @ApiModelProperty(example = "false", value = "isSupplier")
  public IsSupplierEnum getIsSupplier() {
    return isSupplier;
  }

  public void setIsSupplier(IsSupplierEnum isSupplier) {
    this.isSupplier = isSupplier;
  }

  public Contact lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * lastName
   * @return lastName
  **/
  @ApiModelProperty(example = "lastName", value = "lastName")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

   /**
   * metadata
   * @return metadata
  **/
  @ApiModelProperty(example = "{}", value = "metadata")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public Contact secondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
    return this;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public void setSecondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
  }

  public Contact status(String status) {
    this.status = status;
    return this;
  }

   /**
   * status
   * @return status
  **/
  @ApiModelProperty(example = "Completed", value = "status")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Contact updateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
    return this;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public void setUpdateDate(OffsetDateTime updateDate) {
    this.updateDate = updateDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contact contact = (Contact) o;
    return Objects.equals(this.address, contact.address) &&
        Objects.equals(this.balances, contact.balances) &&
        Objects.equals(this.businessId, contact.businessId) &&
        Objects.equals(this.clientId, contact.clientId) &&
        Objects.equals(this.companyName, contact.companyName) &&
        Objects.equals(this.createDate, contact.createDate) &&
        Objects.equals(this.description, contact.description) &&
        Objects.equals(this.firstName, contact.firstName) &&
        Objects.equals(this.id, contact.id) &&
        Objects.equals(this.identificationNumber, contact.identificationNumber) &&
        Objects.equals(this.isActive, contact.isActive) &&
        Objects.equals(this.isCustomer, contact.isCustomer) &&
        Objects.equals(this.isSupplier, contact.isSupplier) &&
        Objects.equals(this.lastName, contact.lastName) &&
        Objects.equals(this.metadata, contact.metadata) &&
        Objects.equals(this.secondaryId, contact.secondaryId) &&
        Objects.equals(this.status, contact.status) &&
        Objects.equals(this.updateDate, contact.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, balances, businessId, clientId, companyName, createDate, description, firstName, id, identificationNumber, isActive, isCustomer, isSupplier, lastName, metadata, secondaryId, status, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contact {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    balances: ").append(toIndentedString(balances)).append("\n");
    sb.append("    businessId: ").append(toIndentedString(businessId)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    identificationNumber: ").append(toIndentedString(identificationNumber)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isCustomer: ").append(toIndentedString(isCustomer)).append("\n");
    sb.append("    isSupplier: ").append(toIndentedString(isSupplier)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

