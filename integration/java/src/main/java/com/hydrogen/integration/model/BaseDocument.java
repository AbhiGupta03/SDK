/*
 * Hydrogen Integration API
 * The Hydrogen Integration API
 *
 * OpenAPI spec version: 1.2.1
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.integration.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

/**
 * BaseDocument
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-11T07:03:53.789Z")
public class BaseDocument {
  @SerializedName("data")
  private DigitalDocumentData data = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    BASIC_INFO("BASIC_INFO"),
    
    ADDRESS_INFO("ADDRESS_INFO"),
    
    PERSONAL_INFO("PERSONAL_INFO"),
    
    IDENTIFICATION_INFO("IDENTIFICATION_INFO"),
    
    EMPLOYMENT_INFO("EMPLOYMENT_INFO"),
    
    INVESTOR_PROFILE_INFO("INVESTOR_PROFILE_INFO"),
    
    COMPLIANCE_AML_INFO("COMPLIANCE_AML_INFO"),
    
    DISCLOSURES("DISCLOSURES"),
    
    MARGIN_DISCLOSURE("MARGIN_DISCLOSURE"),
    
    MARKETING_INFO("MARKETING_INFO"),
    
    CUSTODIAN_INFO("CUSTODIAN_INFO"),
    
    INSTITUTIONAL_INFO("INSTITUTIONAL_INFO"),
    
    DIRECTOR_INFO("DIRECTOR_INFO"),
    
    TRUST_INFO("TRUST_INFO"),
    
    JOINT_BASIC_INFO("JOINT_BASIC_INFO"),
    
    JOINT_ADDRESS_INFO("JOINT_ADDRESS_INFO"),
    
    JOINT_PERSONAL_INFO("JOINT_PERSONAL_INFO"),
    
    JOINT_IDENTIFICATION_INFO("JOINT_IDENTIFICATION_INFO"),
    
    JOINT_EMPLOYMENT_INFO("JOINT_EMPLOYMENT_INFO"),
    
    JOINT_INVESTOR_PROFILE_INFO("JOINT_INVESTOR_PROFILE_INFO"),
    
    JOINT_COMPLIANCE_AML_INFO("JOINT_COMPLIANCE_AML_INFO"),
    
    JOINT_DISCLOSURES("JOINT_DISCLOSURES"),
    
    JOINT_MARGIN_DISCLOSURE("JOINT_MARGIN_DISCLOSURE"),
    
    JOINT_MARKETING_INFO("JOINT_MARKETING_INFO"),
    
    JOINT_CUSTODIAN_INFO("JOINT_CUSTODIAN_INFO"),
    
    JOINT_INSTITUTIONAL_INFO("JOINT_INSTITUTIONAL_INFO"),
    
    JOINT_DIRECTOR_INFO("JOINT_DIRECTOR_INFO"),
    
    JOINT_TRUST_INFO("JOINT_TRUST_INFO");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  public BaseDocument data(DigitalDocumentData data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @ApiModelProperty(value = "")
  public DigitalDocumentData getData() {
    return data;
  }

  public void setData(DigitalDocumentData data) {
    this.data = data;
  }

  public BaseDocument type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BaseDocument baseDocument = (BaseDocument) o;
    return Objects.equals(this.data, baseDocument.data) &&
        Objects.equals(this.type, baseDocument.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BaseDocument {\n");
    
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

