/*
 * Molecule API Documentation
 * The Hydrogen Molecule API
 *
 * OpenAPI spec version: 1.3.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MoleculeApiDocumentation) {
      root.MoleculeApiDocumentation = {};
    }
    root.MoleculeApiDocumentation.WalletClientsPermission = factory(root.MoleculeApiDocumentation.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';

  /**
   * The WalletClientsPermission model module.
   * @module model/WalletClientsPermission
   * @version 1.3.0
   */

  /**
   * Constructs a new <code>WalletClientsPermission</code>.
   * @alias module:model/WalletClientsPermission
   * @class
   * @param nucleusClientId {String} 
   * @param clientWalletAssociationType {module:model/WalletClientsPermission.ClientWalletAssociationTypeEnum} 
   * @param permissionType {module:model/WalletClientsPermission.PermissionTypeEnum} 
   */
  var exports = function(nucleusClientId, clientWalletAssociationType, permissionType) {
    this.nucleusClientId = nucleusClientId;
    this.clientWalletAssociationType = clientWalletAssociationType;
    this.permissionType = permissionType;
  };

  /**
   * Constructs a <code>WalletClientsPermission</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/WalletClientsPermission} obj Optional instance to populate.
   * @return {module:model/WalletClientsPermission} The populated <code>WalletClientsPermission</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('nucleus_client_id'))
        obj.nucleusClientId = ApiClient.convertToType(data['nucleus_client_id'], 'String');
      if (data.hasOwnProperty('client_wallet_association_type'))
        obj.clientWalletAssociationType = ApiClient.convertToType(data['client_wallet_association_type'], 'String');
      if (data.hasOwnProperty('permission_type'))
        obj.permissionType = ApiClient.convertToType(data['permission_type'], 'String');
      if (data.hasOwnProperty('is_primary'))
        obj.isPrimary = ApiClient.convertToType(data['is_primary'], 'Boolean');
    }
    return obj;
  }

  /**
   * @member {String} nucleusClientId
   */
  exports.prototype.nucleusClientId = undefined;

  /**
   * @member {module:model/WalletClientsPermission.ClientWalletAssociationTypeEnum} clientWalletAssociationType
   */
  exports.prototype.clientWalletAssociationType = undefined;

  /**
   * @member {module:model/WalletClientsPermission.PermissionTypeEnum} permissionType
   */
  exports.prototype.permissionType = undefined;

  /**
   * @member {Boolean} isPrimary
   */
  exports.prototype.isPrimary = undefined;


  /**
   * Allowed values for the <code>clientWalletAssociationType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ClientWalletAssociationTypeEnum = {
    /**
     * value: "joint"
     * @const
     */
    joint: "joint",

    /**
     * value: "owner"
     * @const
     */
    owner: "owner",

    /**
     * value: "trustee"
     * @const
     */
    trustee: "trustee",

    /**
     * value: "viewer"
     * @const
     */
    viewer: "viewer",

    /**
     * value: "admin"
     * @const
     */
    admin: "admin"
  };


  /**
   * Allowed values for the <code>permissionType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PermissionTypeEnum = {
    /**
     * value: "INQUIRY_ACCESS"
     * @const
     */
    INQUIRY_ACCESS: "INQUIRY_ACCESS",

    /**
     * value: "LIMITED_AUTHORITY"
     * @const
     */
    LIMITED_AUTHORITY: "LIMITED_AUTHORITY",

    /**
     * value: "POWER_OF_ATTORNEY"
     * @const
     */
    POWER_OF_ATTORNEY: "POWER_OF_ATTORNEY",

    /**
     * value: "FULL_AUTHORITY"
     * @const
     */
    FULL_AUTHORITY: "FULL_AUTHORITY"
  };

  return exports;

}));
