/*
 * Molecule API Documentation
 * The Hydrogen Molecule API
 *
 * OpenAPI spec version: 1.3.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.molecule.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

/**
 * WalletParams
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-07-21T09:54:56.296Z")
public class WalletParams {
  @SerializedName("wallet_key_id")
  private UUID walletKeyId = null;

  @SerializedName("name")
  private String name = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    INDIVIDUAL("individual"),
    
    BUSINESS("business"),
    
    TRUST("trust"),
    
    CONTRACT("contract");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("is_active")
  private Boolean isActive = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("record_status")
  private String recordStatus = null;

  @SerializedName("clients")
  private List<WalletClients> clients = null;

  @SerializedName("metadata")
  private Object metadata = null;

  @SerializedName("token_whitelists")
  private List<TokenWhitelists> tokenWhitelists = null;

  public WalletParams walletKeyId(UUID walletKeyId) {
    this.walletKeyId = walletKeyId;
    return this;
  }

   /**
   * Get walletKeyId
   * @return walletKeyId
  **/
  @ApiModelProperty(value = "")
  public UUID getWalletKeyId() {
    return walletKeyId;
  }

  public void setWalletKeyId(UUID walletKeyId) {
    this.walletKeyId = walletKeyId;
  }

  public WalletParams name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public WalletParams type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public WalletParams isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * Get isActive
   * @return isActive
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public WalletParams secondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
    return this;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public void setSecondaryId(String secondaryId) {
    this.secondaryId = secondaryId;
  }

  public WalletParams recordStatus(String recordStatus) {
    this.recordStatus = recordStatus;
    return this;
  }

   /**
   * Get recordStatus
   * @return recordStatus
  **/
  @ApiModelProperty(value = "")
  public String getRecordStatus() {
    return recordStatus;
  }

  public void setRecordStatus(String recordStatus) {
    this.recordStatus = recordStatus;
  }

  public WalletParams clients(List<WalletClients> clients) {
    this.clients = clients;
    return this;
  }

  public WalletParams addClientsItem(WalletClients clientsItem) {
    if (this.clients == null) {
      this.clients = new ArrayList<WalletClients>();
    }
    this.clients.add(clientsItem);
    return this;
  }

   /**
   * Get clients
   * @return clients
  **/
  @ApiModelProperty(value = "")
  public List<WalletClients> getClients() {
    return clients;
  }

  public void setClients(List<WalletClients> clients) {
    this.clients = clients;
  }

  public WalletParams metadata(Object metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Object getMetadata() {
    return metadata;
  }

  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }

  public WalletParams tokenWhitelists(List<TokenWhitelists> tokenWhitelists) {
    this.tokenWhitelists = tokenWhitelists;
    return this;
  }

  public WalletParams addTokenWhitelistsItem(TokenWhitelists tokenWhitelistsItem) {
    if (this.tokenWhitelists == null) {
      this.tokenWhitelists = new ArrayList<TokenWhitelists>();
    }
    this.tokenWhitelists.add(tokenWhitelistsItem);
    return this;
  }

   /**
   * Get tokenWhitelists
   * @return tokenWhitelists
  **/
  @ApiModelProperty(value = "")
  public List<TokenWhitelists> getTokenWhitelists() {
    return tokenWhitelists;
  }

  public void setTokenWhitelists(List<TokenWhitelists> tokenWhitelists) {
    this.tokenWhitelists = tokenWhitelists;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WalletParams walletParams = (WalletParams) o;
    return Objects.equals(this.walletKeyId, walletParams.walletKeyId) &&
        Objects.equals(this.name, walletParams.name) &&
        Objects.equals(this.type, walletParams.type) &&
        Objects.equals(this.isActive, walletParams.isActive) &&
        Objects.equals(this.secondaryId, walletParams.secondaryId) &&
        Objects.equals(this.recordStatus, walletParams.recordStatus) &&
        Objects.equals(this.clients, walletParams.clients) &&
        Objects.equals(this.metadata, walletParams.metadata) &&
        Objects.equals(this.tokenWhitelists, walletParams.tokenWhitelists);
  }

  @Override
  public int hashCode() {
    return Objects.hash(walletKeyId, name, type, isActive, secondaryId, recordStatus, clients, metadata, tokenWhitelists);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WalletParams {\n");
    
    sb.append("    walletKeyId: ").append(toIndentedString(walletKeyId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    recordStatus: ").append(toIndentedString(recordStatus)).append("\n");
    sb.append("    clients: ").append(toIndentedString(clients)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    tokenWhitelists: ").append(toIndentedString(tokenWhitelists)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

