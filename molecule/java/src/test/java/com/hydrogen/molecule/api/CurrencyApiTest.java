/*
 * Molecule API Documentation
 * The Hydrogen Molecule API
 *
 * OpenAPI spec version: 1.3.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.molecule.api;

import com.hydrogen.molecule.ApiException;
import com.hydrogen.molecule.model.CurrencyParams;
import com.hydrogen.molecule.model.CurrencyResponse;
import com.hydrogen.molecule.model.CurrencyUpdateParams;
import com.hydrogen.molecule.model.PageCurrencyResponse;

import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for CurrencyApi
 */
@Ignore
public class CurrencyApiTest {

    private final CurrencyApi api = new CurrencyApi();

    
    /**
     * Creates a new Currency
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createCurrencyUsingPostTest() throws ApiException {
        CurrencyParams currencyParams = null;
        CurrencyResponse response = api.createCurrencyUsingPost(currencyParams);

        // TODO: test validations
    }
    
    /**
     * Fetch Currency list
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCurrencyAllUsingGetTest() throws ApiException {
        String symbol = null;
        Boolean isAllowed = null;
        Integer page = null;
        Integer size = null;
        String orderBy = null;
        Boolean ascending = null;
        Boolean getLatest = null;
        PageCurrencyResponse response = api.getCurrencyAllUsingGet(symbol, isAllowed, page, size, orderBy, ascending, getLatest);

        // TODO: test validations
    }
    
    /**
     * Fetch Currency details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getCurrencyUsingGetTest() throws ApiException {
        UUID currencyId = null;
        CurrencyResponse response = api.getCurrencyUsingGet(currencyId);

        // TODO: test validations
    }
    
    /**
     * Update Currency details
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateCurrencyUsingPutTest() throws ApiException {
        UUID currencyId = null;
        CurrencyUpdateParams currencyUpdateParams = null;
        CurrencyResponse response = api.updateCurrencyUsingPut(currencyId, currencyUpdateParams);

        // TODO: test validations
    }
    
}
