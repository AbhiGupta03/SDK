info:
  title: Molecule API Documentation
  version: 1.3.0
  description: Hydrogen Molecule API
  termsOfService: 'https://www.hydrogenplatform.com/legal/terms'
  contact:
    name: The Hydrogen Technology Corporation
    url: 'https://www.hydrogenplatform.com/contact'
    email: info@hydrogenplatform.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: sandbox.hydrogenplatform.com
basePath: /molecule/v1
swagger: '2.0'
paths:
  /webhook:
    post:
      tags:
        - Webhook
      summary: Creates a new Webhook record
      operationId: createWebhookUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: Webhook Params
          description: It enables a user to create a Webhook record
          required: true
          schema:
            $ref: '#/definitions/WebhookParams'
      responses:
        '200':
          description: An object with Webhook details
          schema:
            $ref: '#/definitions/WebhookResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Webhook
      summary: Fetch Webhook list
      operationId: getWebhookAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: page
          description: To filter response webhook list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Webhook records
          schema:
            type: array
            items:
              $ref: '#/definitions/WebhookResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/webhook/{webhook_id}':
    get:
      tags:
        - Webhook
      summary: Fetch Webhook details
      operationId: getWebhookUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: webhook_id
          description: Webhook ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Webhook details
          schema:
            $ref: '#/definitions/WebhookResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Webhook
      summary: Update Webhook details
      operationId: updateWebhookUsingPut
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: webhook_id
          description: Webhook ID
          required: true
          type: string
          format: uuid
        - in: body
          name: Webhook Update Params
          description: Webhook details to be updated
          required: true
          schema:
            $ref: '#/definitions/WebhookParams'
      responses:
        '200':
          description: An object with updated Webhook details
          schema:
            $ref: '#/definitions/WebhookResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Webhook
      summary: Delete Webhook
      operationId: deleteWebhookUsingDelete
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: webhook_id
          description: Webhook ID
          required: true
          type: string
          format: uuid
      responses:
        '204':
          description: Deleted Successfully.
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /wallet:
    post:
      tags:
        - Wallet
      summary: Creates a new Wallet
      operationId: createWalletUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: WalletParams
          description: It enables a user to create a Wallet
          required: true
          schema:
            $ref: '#/definitions/WalletParams'
      responses:
        '200':
          description: An object with Wallet details
          schema:
            $ref: '#/definitions/WalletResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Wallet
      summary: Fetch Wallet list
      operationId: getWalletAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: nucleus_client_id
          description: To filter response wallet list by client's ID
          required: false
          type: string
          format: uuid
        - in: query
          name: is_primary
          description: To filter response for primary wallets
          required: false
          type: boolean
        - in: query
          name: page
          description: To filter response wallet list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Wallet records
          schema:
            type: array
            items:
              $ref: '#/definitions/WalletResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/wallet/{wallet_id}':
    get:
      tags:
        - Wallet
      summary: Fetch Wallet details
      operationId: getWalletUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: wallet_id
          description: Wallet ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Wallet details
          schema:
            $ref: '#/definitions/WalletResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Wallet
      summary: Update Wallet details
      operationId: updateWalletUsingPut
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: wallet_id
          description: Wallet ID
          required: true
          type: string
          format: uuid
        - in: body
          name: WalletUpdateParams
          description: Wallet details to be updated
          required: false
          schema:
            $ref: '#/definitions/WalletParams'
      responses:
        '200':
          description: An object with updated Wallet details
          schema:
            $ref: '#/definitions/WalletResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/wallet/wallet_key/{wallet_key_id}':
    get:
      tags:
        - Wallet
      summary: Fetch Wallet details by Wallet Key ID
      operationId: getWalletWalletKeyUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: wallet_key_id
          description: Wallet Key ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Wallet details
          schema:
            $ref: '#/definitions/WalletResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /wallet_permission:
    get:
      tags:
        - Wallet Permission
      summary: Fetch Wallet list with client's permissions
      operationId: getWalletPermissionAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: nucleus_client_id
          description: To filter response wallet list by client's ID
          required: false
          type: string
        - in: query
          name: is_active
          description: To filter response for active wallets
          required: false
          type: boolean
        - in: query
          name: page
          description: To filter response wallet list page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Wallet records with client's permissions
          schema:
            type: array
            items:
              $ref: '#/definitions/WalletPermissionResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/wallet_permission/{wallet_id}':
    get:
      tags:
        - Wallet Permission
      summary: Fetch Wallet's client permissions details
      operationId: getWalletPermissionUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: wallet_id
          description: Wallet ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Wallet's client permission details
          schema:
            $ref: '#/definitions/WalletPermissionResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Wallet Permission
      summary: Update client's permission for provided Wallet
      operationId: updateWalletPermissionUsingPut
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: wallet_id
          description: Wallet ID
          required: true
          type: string
          format: uuid
        - in: body
          name: Client Permissions
          description: Client's permission to be updated
          required: true
          schema:
            $ref: '#/definitions/WalletPermissionUpdateParams'
      responses:
        '200':
          description: An updated Wallet object with client's permissions
          schema:
            $ref: '#/definitions/WalletPermissionResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /wallet_key:
    post:
      tags:
        - Wallet Key
      summary: Creates a new Wallet Key for provided Wallet ID
      operationId: createWalletKeyUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: Wallet Key Params
          description: It enables a user to create a Wallet Key record
          required: true
          schema:
            $ref: '#/definitions/WalletKeyParams'
      responses:
        '200':
          description: An object with Wallet Key details
          schema:
            $ref: '#/definitions/WalletKeyResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Wallet Key
      summary: Fetch Wallet Key list
      operationId: getWalletKeyAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: page
          description: To filter response wallet list page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Wallet Key records
          schema:
            type: array
            items:
              $ref: '#/definitions/WalletKeyResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/wallet_key/{wallet_key_id}':
    get:
      tags:
        - Wallet Key
      summary: Fetch Wallet Key details
      operationId: getWalletKeyUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: wallet_key_id
          description: Wallet Key ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Wallet Key details
          schema:
            $ref: '#/definitions/WalletKeyResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /wallet_key/generator:
    post:
      tags:
        - Wallet Key
      summary: Generates Wallet Key for provided Wallet ID
      operationId: createWalletKeyGeneratorUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: Wallet Key Generate Params
          description: It enables a user to generate a Wallet Key record
          required: true
          schema:
            $ref: '#/definitions/WalletKeyGenerateParams'
      responses:
        '200':
          description: An object with Wallet Key details
          schema:
            $ref: '#/definitions/WalletKeyResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /transaction_status:
    get:
      tags:
        - Transaction Status
      summary: Fetch Transaction Status list
      operationId: getTransactionStatusAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: hash
          description: To filter response Transaction record list by Transaction's hash
          required: false
          type: string
        - in: query
          name: wallet_id
          description: To filter response Transaction record list by Wallet ID
          required: false
          type: string
          format: uuid
        - in: query
          name: status
          description: To filter response Transaction record list by Transaction's status
          required: false
          type: string
        - in: query
          name: page
          description: To filter response Transaction record list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Transaction Status records
          schema:
            type: array
            items:
              $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/transaction_status/{transaction_id}':
    get:
      tags:
        - Transaction Status
      summary: Fetch Transaction record details
      operationId: getTransactionStatusUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: transaction_id
          description: Transaction ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Transaction status record details
          schema:
            $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /token:
    post:
      tags:
        - Token
      summary: Creates a new Token
      operationId: createTokenUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: TokenParams
          description: It enables a user to create a Token
          required: true
          schema:
            $ref: '#/definitions/TokenParams'
      responses:
        '200':
          description: An object with Token details
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Token
      summary: Fetch Token list
      operationId: getTokenAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: page
          description: To filter response Token list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Token records
          schema:
            type: array
            items:
              $ref: '#/definitions/TokenResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/token/{token_id}':
    get:
      tags:
        - Token
      summary: Fetch Token details
      operationId: getTokenUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: token_id
          description: Token ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Token details
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Token
      summary: Update Token details
      operationId: updateTokenUsingPut
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: token_id
          description: Token ID
          required: true
          type: string
          format: uuid
        - in: body
          name: TokenUpdateParams
          description: Token details to be updated
          required: false
          schema:
            $ref: '#/definitions/TokenUpdateParams'
      responses:
        '200':
          description: An object with updated Token details
          schema:
            $ref: '#/definitions/TokenResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Token
      summary: Delete Token
      operationId: deleteTokenUsingDelete
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: token_id
          description: Token ID
          required: true
          type: string
          format: uuid
      responses:
        '204':
          description: Deleted Successfully.
        '400':
          description: Invalid Input.
          schema:
            $ref: '#/definitions/ErrorResponse'
        '404':
          description: Not found.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /token/deploy:
    post:
      tags:
        - Token
      summary: Deploys provided Token to network
      operationId: createTokenDeployUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: TokenDeployParams
          description: Deploys provided Token to network
          required: true
          schema:
            $ref: '#/definitions/TokenDeployParams'
      responses:
        '200':
          description: An object with transaction status
          schema:
            $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /token/whitelist:
    post:
      tags:
        - Token
      summary: Whitelist token for provided wallet
      operationId: createTokenWhitelistUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: TokenWhitelistParams
          description: Whitelist token for provided wallet
          required: true
          schema:
            $ref: '#/definitions/TokenWhitelistParams'
      responses:
        '200':
          description: An object with transaction status
          schema:
            $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /token/mint:
    post:
      tags:
        - Token
      summary: Mint new tokens
      operationId: createTokenMintUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: TokenMintParams
          description: Mint new tokens
          required: true
          schema:
            $ref: '#/definitions/TokenMintParams'
      responses:
        '200':
          description: An object with transaction status
          schema:
            $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /token/burn:
    post:
      tags:
        - Token
      summary: Burn tokens
      operationId: createTokenBurnUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: TokenBurnParams
          description: Burns provided amount of existing tokens
          required: true
          schema:
            $ref: '#/definitions/TokenBurnParams'
      responses:
        '200':
          description: An object with transaction status
          schema:
            $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /token_transfer:
    post:
      tags:
        - Token Transfer
      summary: Creates Token Transfer record
      operationId: createTokenTransferUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: TokenTransferParams
          description: It enables a user to transfer Tokens
          required: true
          schema:
            $ref: '#/definitions/TokenTransferParams'
      responses:
        '200':
          description: An object with transaction status
          schema:
            $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Token Transfer
      summary: Fetch Token Transfer record list
      operationId: getTokenTransferAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: wallet_id
          description: To filter response Token Transfer list by Wallet ID
          required: false
          type: string
          format: uuid
        - in: query
          name: page
          description: To filter response Token Transfer list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Token Transfer records
          schema:
            type: array
            items:
              $ref: '#/definitions/TokenTransferResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/token_transfer/{token_transfer_id}':
    get:
      tags:
        - Token Transfer
      summary: Fetch Token Transfer record details
      operationId: getTokenTransferUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: token_transfer_id
          description: Token Transfer ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Token Transfer record details
          schema:
            $ref: '#/definitions/TokenTransferResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /token_supply:
    get:
      tags:
        - Token Supply
      summary: Fetch Token Supply record list
      operationId: getTokenSupplyAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: token_id
          description: To filter response Token Supply list by Token ID
          required: false
          type: string
          format: uuid
        - in: query
          name: page
          description: To filter response Token Supply list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Token Supply records
          schema:
            type: array
            items:
              $ref: '#/definitions/TokenSupplyResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/token_supply/{token_supply_id}':
    get:
      tags:
        - Token Supply
      summary: Fetch Token Supply details
      operationId: getTokenSupplyUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: token_supply_id
          description: Token Supply ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Token Supply details
          schema:
            $ref: '#/definitions/TokenSupplyResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /crowdsale/deploy:
    post:
      tags:
        - Token Crowdsale
      summary: Deploy token for Crowdsale
      operationId: createCrowdsaleDeployUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: CrowdsaleDeployParams
          description: Deploy token for Crowdsale
          required: true
          schema:
            $ref: '#/definitions/CrowdsaleDeployParams'
      responses:
        '200':
          description: An object with transaction status
          schema:
            $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /crowdsale/fund:
    post:
      tags:
        - Token Crowdsale
      summary: Fund/add Tokens supply to Crowdsale
      operationId: createCrowdsaleFundUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: CrowdsaleFundParams
          description: Fund provided Token's supply to Crowdsale
          required: true
          schema:
            $ref: '#/definitions/CrowdsaleFundParams'
      responses:
        '200':
          description: An object with transaction status
          schema:
            $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /crowdsale/purchase:
    post:
      tags:
        - Token Crowdsale
      summary: Purchase Tokens from Crowdsale
      operationId: createCrowdsalePurchaseUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: CrowdsalePurchaseParams
          description: Purchase Tokens
          required: true
          schema:
            $ref: '#/definitions/CrowdsalePurchaseParams'
      responses:
        '200':
          description: An object with transaction status
          schema:
            $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /token_balance:
    get:
      tags:
        - Token Balance
      summary: Fetch Token Balance list
      operationId: getTokenBalanceAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: wallet_id
          description: To filter response Token Balance list by wallet ID
          required: false
          type: string
          format: uuid
        - in: query
          name: token_id
          description: To filter response Token Balance list by Token ID
          required: false
          type: string
          format: uuid
        - in: query
          name: page
          description: To filter response Token Balance list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Token Balance records
          schema:
            type: array
            items:
              $ref: '#/definitions/TokenBalanceResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/token_balance/{token_balance_id}':
    get:
      tags:
        - Token Balance
      summary: Fetch Token Balance details
      operationId: getTokenBalanceUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: token_balance_id
          description: Token Balance ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Token Balance details
          schema:
            $ref: '#/definitions/TokenBalanceResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /currency:
    post:
      tags:
        - Currency
      summary: Creates a new Currency
      operationId: createCurrencyUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: CurrencyParams
          description: It enables a user to create a Currency
          required: true
          schema:
            $ref: '#/definitions/CurrencyParams'
      responses:
        '200':
          description: An object with Currency record
          schema:
            $ref: '#/definitions/CurrencyResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Currency
      summary: Fetch Currency list
      operationId: getCurrencyAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: symbol
          description: To filter response Currency list by Symbol name
          required: false
          type: string
        - in: query
          name: is_allowed
          description: To filter response Currency list
          required: false
          type: boolean
        - in: query
          name: page
          description: To filter response Currency list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Currency records
          schema:
            type: array
            items:
              $ref: '#/definitions/CurrencyResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/currency/{currency_id}':
    get:
      tags:
        - Currency
      summary: Fetch Currency details
      operationId: getCurrencyUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: currency_id
          description: Currency ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Currency details
          schema:
            $ref: '#/definitions/CurrencyResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Currency
      summary: Update Currency details
      operationId: updateCurrencyUsingPut
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: currency_id
          description: Currency ID
          required: true
          type: string
          format: uuid
        - in: body
          name: CurrencyUpdateParams
          description: Currency details to be updated
          required: false
          schema:
            $ref: '#/definitions/CurrencyUpdateParams'
      responses:
        '200':
          description: An object with updated Currency details
          schema:
            $ref: '#/definitions/CurrencyResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /currency_transfer:
    post:
      tags:
        - Currency Transfer
      summary: Creates Currency Transfer record
      operationId: createCurrencyTransferUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: CurrencyTransferParams
          description: It enables a user to transfer Currency
          required: true
          schema:
            $ref: '#/definitions/CurrencyTransferParams'
      responses:
        '200':
          description: An object with transaction status
          schema:
            $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Currency Transfer
      summary: Fetch Currency Transfer record list
      operationId: getCurrencyTransferAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: wallet_id
          description: To filter response Currency Transfer list by Wallet ID
          required: false
          type: string
          format: uuid
        - in: query
          name: currency_id
          description: To filter response Currency Transfer list by Currency ID
          required: false
          type: string
          format: uuid
        - in: query
          name: page
          description: To filter response Currency Transfer list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Currency Transfer records
          schema:
            type: array
            items:
              $ref: '#/definitions/CurrencyTransferResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/currency_transfer/{currency_transfer_id}':
    get:
      tags:
        - Currency Transfer
      summary: Fetch Currency Transfer record details
      operationId: getCurrencyTransferUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: currency_transfer_id
          description: Currency Transfer ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Currency Transfer record details
          schema:
            $ref: '#/definitions/CurrencyTransferResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /currency_balance:
    get:
      tags:
        - Currency Balance
      summary: Fetch Currency Balance list
      operationId: getCurrencyBalanceAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: wallet_id
          description: To filter response Currency Balance list by wallet ID
          required: false
          type: string
          format: uuid
        - in: query
          name: currency_id
          description: To filter response Currency Balance list by currency ID
          required: false
          type: string
          format: uuid
        - in: query
          name: page
          description: To filter response Currency Balance list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An array of Currency Balance records
          schema:
            type: array
            items:
              $ref: '#/definitions/CurrencyBalanceResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/currency_balance/{currency_balance_id}':
    get:
      tags:
        - Currency Balance
      summary: Fetch Currency Balance details
      operationId: getCurrencyBalanceUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: currency_balance_id
          description: Currency Balance ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Currency Balance details
          schema:
            $ref: '#/definitions/CurrencyBalanceResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /currency_balance/update:
    post:
      tags:
        - Currency Balance
      summary: Update(Fetch) latest Currency Balance
      operationId: createCurrencyBalanceUpdateUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: CurrencyBalanceUpdateParams
          description: To fetch/update latest record
          required: true
          schema:
            $ref: '#/definitions/CurrencyBalanceUpdateParams'
      responses:
        '200':
          description: An object with Currency Balance details
          schema:
            $ref: '#/definitions/CurrencyBalanceResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /document:
    post:
      tags:
        - Document
      summary: Create a new Document
      operationId: createDocumentUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: DocumentParams
          description: Enables a user to store a Document hash on the blockchain
          required: true
          schema:
            $ref: '#/definitions/DocumentParams'
      responses:
        '200':
          description: An object with Transaction success response
          schema:
            $ref: '#/definitions/TransactionSuccessResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /document/verify:
    post:
      tags:
        - Document
      summary: Verify a Document
      operationId: createDocumentVerifyUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: DocumentParams
          description: Enables a user to verify a Document has not been changed
          required: true
          schema:
            $ref: '#/definitions/DocumentParams'
      responses:
        '200':
          description: An object with the Document verification record
          schema:
            $ref: '#/definitions/DocumentVerifyResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/document/{document_id}':
    get:
      tags:
        - Document
      summary: Retrieve a Document
      operationId: getDocumentUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: document_id
          description: Document ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with the Document record
          schema:
            $ref: '#/definitions/DocumentResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /escrow:
    post:
      tags:
        - Escrow
      summary: Create a new Escrow
      operationId: createEscrowUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: EscrowParams
          description: It enables a user to create a escrow
          required: true
          schema:
            $ref: '#/definitions/EscrowParams'
      responses:
        '200':
          description: An object with Escrow record
          schema:
            $ref: '#/definitions/EscrowResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Escrow
      summary: List all Escrow
      operationId: getEscrowAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: page
          description: To filter response Escrow list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An object with Escrow record
          schema:
            type: array
            items:
              $ref: '#/definitions/EscrowResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/escrow/{escrow_id}':
    get:
      tags:
        - Escrow
      summary: Fetch Escrow
      operationId: getEscrowUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: escrow_id
          description: Escrow ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Escrow record
          schema:
            $ref: '#/definitions/EscrowResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  /escrow_transaction:
    post:
      tags:
        - Escrow Transaction
      summary: Create a new Escrow Transaction
      operationId: createEscrowTransactionUsingPost
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: body
          name: EscrowDepositParams
          description: It enables a user to create a escrow transaction
          required: true
          schema:
            $ref: '#/definitions/EscrowDepositParams'
      responses:
        '200':
          description: An object with Escrow transaction record
          schema:
            $ref: '#/definitions/EscrowTransactionResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    get:
      tags:
        - Escrow Transaction
      summary: List all Escrow Transaction
      operationId: getEscrowTransactionAllUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: query
          name: page
          description: To filter response Escrow Transaction list by page number
          required: false
          type: integer
        - in: query
          name: size
          description: Number of records per page
          required: false
          type: integer
        - in: query
          name: order_by
          description: Field to sort record list
          required: false
          type: string
        - in: query
          name: ascending
          description: Sorting order
          required: false
          type: boolean
        - in: query
          name: get_latest
          description: To fetch latest (one) record
          required: false
          type: boolean
      responses:
        '200':
          description: An object with Escrow Transaction record
          schema:
            type: array
            items:
              $ref: '#/definitions/EscrowTransactionResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
  '/escrow_transaction/{escrow_transaction_id}':
    get:
      tags:
        - Escrow Transaction
      summary: Fetch Escrow Transaction
      operationId: getEscrowTransactionUsingGet
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: escrow_transaction_id
          description: Escrow Transaction ID
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: An object with Escrow Transaction record
          schema:
            $ref: '#/definitions/EscrowTransactionResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Escrow Transaction
      summary: Update Escrow Transaction
      operationId: updateEscrowTransactionUsingPut
      produces:
        - application/json
      security:
        - oauth2: []
      parameters:
        - in: path
          name: escrow_transaction_id
          description: Escrow Transaction ID
          required: true
          type: string
          format: uuid
        - in: body
          name: EscrowDepositParams
          description: It enables a user to create a escrow transaction
          required: false
          schema:
            $ref: '#/definitions/EscrowDepositParams'
      responses:
        '200':
          description: An object with Escrow Transaction record
          schema:
            $ref: '#/definitions/EscrowTransactionResponse'
        '400':
          description: Invalid input
          schema:
            $ref: '#/definitions/ErrorResponse'
        '401':
          description: You are not authorized to perform this action.
          schema:
            $ref: '#/definitions/ErrorResponse'
definitions:
  WebhookParams:
    type: object
    required:
      - url
      - molecule_service
    properties:
      url:
        type: string
      molecule_service:
        type: array
        items:
          type: string
          enum:
            - whitelist_admin
            - whitelisted
            - token_transfer
            - token_balance
            - token_supply_balance
            - currency_transfer
            - currency_balance
            - transaction
      is_active:
        type: boolean
      record_status:
        type: string
  WebhookResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      url:
        type: string
      molecule_service:
        type: array
        items:
          type: string
          enum:
            - whitelist_admin
            - whitelisted
            - token_transfer
            - token_balance
            - token_supply_balance
            - currency_transfer
            - currency_balance
            - transaction
      is_active:
        type: boolean
      record_status:
        type: string
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
  WalletParams:
    type: object
    required:
      - name
      - type
    properties:
      wallet_key_id:
        type: string
        format: uuid
      name:
        type: string
      type:
        type: string
        enum:
          - individual
          - business
          - trust
          - contract
      is_active:
        type: boolean
      secondary_id:
        type: string
      record_status:
        type: string
      clients:
        type: array
        items:
          $ref: '#/definitions/WalletClients'
      metadata:
        type: object
      token_whitelists:
        type: array
        items:
          $ref: '#/definitions/TokenWhitelists'
  WalletClients:
    type: object
    required:
      - nucleus_client_id
      - client_wallet_association_type
    properties:
      nucleus_client_id:
        type: string
        format: uuid
      client_wallet_association_type:
        type: string
        enum:
          - joint
          - owner
          - trustee
          - viewer
          - admin
      is_primary:
        type: boolean
  TokenWhitelists:
    type: object
    required:
      - token_id
    properties:
      token_id:
        type: string
        format: uuid
      role:
        type: string
      sell_restriction_date:
        type: string
        format: date-time
      buy_restriction_date:
        type: string
        format: date-time
  WalletResponse:
    type: object
    properties:
      id:
        type: string
        format: date-time
      wallet_key_id:
        type: string
        format: date-time
      name:
        type: string
      type:
        type: string
        enum:
          - individual
          - business
          - trust
          - contract
      is_active:
        type: boolean
      secondary_id:
        type: string
      record_status:
        type: string
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
      clients:
        type: array
        items:
          $ref: '#/definitions/WalletClients'
      metadata:
        type: object
      token_whitelists:
        type: array
        items:
          $ref: '#/definitions/TokenWhitelists'
  WalletPermissionUpdateParams:
    type: object
    required:
      - nucleus_client_id
      - permission_type
    properties:
      nucleus_client_id:
        type: string
        format: uuid
      permission_type:
        type: string
        enum:
          - INQUIRY_ACCESS
          - LIMITED_AUTHORITY
          - POWER_OF_ATTORNEY
          - FULL_AUTHORITY
  WalletPermissionResponse:
    type: object
    properties:
      wallet_id:
        type: string
        format: uuid
      clients:
        type: array
        items:
          $ref: '#/definitions/WalletClientsPermission'
  WalletClientsPermission:
    type: object
    required:
      - nucleus_client_id
      - client_wallet_association_type
      - permission_type
    properties:
      nucleus_client_id:
        type: string
        format: uuid
      client_wallet_association_type:
        type: string
        enum:
          - joint
          - owner
          - trustee
          - viewer
          - admin
      permission_type:
        type: string
        enum:
          - INQUIRY_ACCESS
          - LIMITED_AUTHORITY
          - POWER_OF_ATTORNEY
          - FULL_AUTHORITY
      is_primary:
        type: boolean
  WalletKeyParams:
    type: object
    required:
      - wallet_id
      - address
      - private_key
    properties:
      wallet_id:
        type: string
        format: uuid
      address:
        type: string
      private_key:
        type: string
      key_id:
        type: string
      key_server:
        type: string
      is_active:
        type: boolean
      record_status:
        type: string
  WalletKeyGenerateParams:
    type: object
    required:
      - wallet_id
    properties:
      wallet_id:
        type: string
        format: uuid
      key_id:
        type: string
      key_server:
        type: string
      is_active:
        type: boolean
      record_status:
        type: string
  WalletKeyResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      key_id:
        type: string
      key_server:
        type: string
      private_key:
        type: string
      address:
        type: string
      record_status:
        type: string
      is_active:
        type: boolean
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
  TokenParams:
    type: object
    required:
      - name
      - symbol
      - nucleus_model_id
      - owner_wallet_id
      - offering_settings
    properties:
      name:
        type: string
      symbol:
        type: string
      nucleus_model_id:
        type: string
        format: uuid
      owner_wallet_id:
        type: string
        format: uuid
      is_mintable:
        type: boolean
      is_burnable:
        type: boolean
      whitelist_address:
        type: string
      contract_address:
        type: string
      crowdsale_address:
        type: string
      is_active:
        type: boolean
      secondary_id:
        type: string
      record_status:
        type: string
      offering_settings:
        type: object
        required:
          - rate
        properties:
          start_date:
            type: string
            format: date
          end_date:
            type: string
            format: date
          rate:
            type: string
      metadata:
        type: object
      restrictions:
        type: object
  TokenResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      symbol:
        type: string
      nucleus_model_id:
        type: string
        format: uuid
      owner_wallet_id:
        type: string
        format: uuid
      is_mintable:
        type: boolean
      is_burnable:
        type: boolean
      whitelist_address:
        type: string
      contract_address:
        type: string
      crowdsale_address:
        type: string
      is_active:
        type: boolean
      secondary_id:
        type: string
      record_status:
        type: string
      offering_settings:
        type: object
        properties:
          start_date:
            type: string
            format: date
          end_date:
            type: string
            format: date
          rate:
            type: string
      metadata:
        type: object
      restrictions:
        type: object
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
  TokenUpdateParams:
    type: object
    properties:
      name:
        type: string
      symbol:
        type: string
      nucleus_model_id:
        type: string
        format: uuid
      owner_wallet_id:
        type: string
        format: uuid
      is_mintable:
        type: boolean
      is_burnable:
        type: boolean
      whitelist_address:
        type: string
      contract_address:
        type: string
      crowdsale_address:
        type: string
      is_active:
        type: boolean
      secondary_id:
        type: string
      record_status:
        type: string
      offering_settings:
        type: object
        required:
          - rate
        properties:
          start_date:
            type: string
            format: date
          end_date:
            type: string
            format: date
          rate:
            type: string
      metadata:
        type: object
      restrictions:
        type: object
  TokenWhitelistParams:
    type: object
    required:
      - wallet_id
      - token_id
    properties:
      wallet_id:
        type: string
        format: uuid
      token_id:
        type: string
        format: uuid
  TokenDeployParams:
    type: object
    required:
      - token_id
    properties:
      token_id:
        type: string
        format: uuid
  TokenMintParams:
    type: object
    required:
      - receiver_wallet_id
      - token_id
      - amount
    properties:
      receiver_wallet_id:
        type: string
        format: uuid
      token_id:
        type: string
        format: uuid
      amount:
        type: number
        format: double
  TokenBurnParams:
    type: object
    required:
      - token_id
      - amount
    properties:
      token_id:
        type: string
        format: uuid
      amount:
        type: number
        format: double
  TransactionSuccessResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      wallet_id:
        type: string
        format: uuid
      hash:
        type: string
      status:
        type: string
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
  TokenTransferParams:
    type: object
    required:
      - sender_wallet_id
      - receiver_wallet_id
      - token_id
      - amount
    properties:
      sender_wallet_id:
        type: string
        format: uuid
      receiver_wallet_id:
        type: string
        format: uuid
      token_id:
        type: string
        format: uuid
      amount:
        type: number
        format: double
      is_active:
        type: boolean
      record_status:
        type: string
  TokenTransferResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      sender_wallet_id:
        type: string
        format: uuid
      receiver_wallet_id:
        type: string
        format: uuid
      token_id:
        type: string
        format: uuid
      amount:
        type: number
        format: double
      is_active:
        type: boolean
      record_status:
        type: string
      transaction_hash:
        type: string
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
  TokenSupplyResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      available_supply:
        type: number
        format: double
      token_id:
        type: string
        format: uuid
      is_active:
        type: boolean
      record_status:
        type: string
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
  CrowdsaleDeployParams:
    type: object
    required:
      - token_id
    properties:
      token_id:
        type: string
        format: uuid
  CrowdsaleFundParams:
    type: object
    required:
      - token_id
      - supply
    properties:
      token_id:
        type: string
        format: uuid
      supply:
        type: number
        format: double
  CrowdsalePurchaseParams:
    type: object
    required:
      - token_id
      - wallet_id
      - amount
    properties:
      token_id:
        type: string
        format: uuid
      wallet_id:
        type: string
        format: uuid
      amount:
        type: number
        format: double
  TokenBalanceResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      balance:
        type: number
        format: double
      wallet_id:
        type: string
        format: uuid
      token_id:
        type: string
        format: uuid
      is_active:
        type: boolean
      record_status:
        type: string
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
  ErrorResponse:
    type: object
    properties:
      message:
        type: string
  CurrencyParams:
    type: object
    required:
      - address
    properties:
      address:
        type: string
      logo:
        type: string
  CurrencyResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      name:
        type: string
      decimal_points:
        type: number
        format: integer
      symbol:
        type: string
      address:
        type: string
      logo:
        type: string
      network:
        type: string
      is_allowed:
        type: boolean
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
  CurrencyUpdateParams:
    type: object
    properties:
      logo:
        type: string
      is_allowed:
        type: boolean
  CurrencyTransferParams:
    type: object
    required:
      - sender_wallet_id
      - receiver_wallet_id
      - currency_id
      - amount
    properties:
      sender_wallet_id:
        type: string
        format: uuid
      receiver_wallet_id:
        type: string
        format: uuid
      currency_id:
        type: string
        format: uuid
      amount:
        type: number
        format: double
      is_active:
        type: boolean
      record_status:
        type: string
  CurrencyTransferResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      sender_wallet_id:
        type: string
        format: uuid
      receiver_wallet_id:
        type: string
        format: uuid
      currency_id:
        type: string
        format: uuid
      amount:
        type: number
        format: double
      transaction_hash:
        type: string
      is_active:
        type: boolean
      record_status:
        type: string
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
  CurrencyBalanceResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      wallet_id:
        type: string
        format: uuid
      currency_id:
        type: string
        format: uuid
      balance:
        type: number
        format: double
      hash:
        type: string
      is_active:
        type: boolean
      record_status:
        type: string
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
  CurrencyBalanceUpdateParams:
    type: object
    required:
      - wallet_id
      - currency_id
    properties:
      wallet_id:
        type: string
        format: uuid
      currency_id:
        type: string
        format: uuid
  DocumentParams:
    type: object
    required:
      - document_id
      - wallet_id
    properties:
      document_id:
        type: string
        format: uuid
      wallet_id:
        type: string
        format: uuid
  DocumentVerifyResponse:
    type: object
    properties:
      status:
        type: string
      doc_file_hash:
        type: string
  DocumentResponse:
    type: object
    properties:
      documents:
        type: array
        items:
          $ref: '#/definitions/Document'
  Document:
    type: object
    properties:
      electron_document_id:
        type: string
        format: uuid
      version:
        type: number
        format: double
      doc_file_hash:
        type: string
      wallet_id:
        type: string
        format: uuid
  EscrowParams:
    type: object
    required:
      - is_active
    properties:
      address:
        type: string
      is_active:
        type: boolean
  EscrowResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      address:
        type: string
      is_active:
        type: boolean
      record_status:
        type: string
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
  EscrowDepositParams:
    type: object
    required:
      - payee_wallet_id
      - payer_wallet_id
      - amount
    properties:
      payee_wallet_id:
        type: string
        format: uuid
      payer_wallet_id:
        type: string
        format: uuid
      amount:
        type: number
        format: double
      record_status:
        type: string
  EscrowTransactionResponse:
    type: object
    properties:
      id:
        type: string
        format: uuid
      payee_wallet_id:
        type: string
        format: uuid
      payer_wallet_id:
        type: string
        format: uuid
      amount:
        type: number
        format: double
      withdrawn:
        type: boolean
      escrow_address:
        type: string
      record_status:
        type: string
      create_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
responses:
  '200':
    description: Successful response
  '204':
    description: No content
  '400':
    description: Bad request
  '401':
    description: Unauthorized
  '403':
    description: Forbidden
  '404':
    description: Not found
  '405':
    description: Not allowed
  '429':
    description: Too many requests
  '500':
    description: Internal server error
  '503':
    description: Service unavailable
parameters: {}
securityDefinitions:
  oauth2:
    type: oauth2
    tokenUrl: 'https://sandbox.hydrogenplatform.com/authorization/v1/oauth/token'
    flow: application
tags:
  - name: Currency Balance
    description: Currency Balance Controller
  - name: Currency Transfer
    description: Currency Transfer Controller
  - name: Currency
    description: Currency Controller
  - name: Document
    description: Document Controller
  - name: Escrow
    description: Escrow Controller
  - name: Escrow Transaction
    description: Escrow Transaction Controller
  - name: Token Balance
    description: Token Balance Controller
  - name: Token Crowdsale
    description: Token Crowdsale Controller
  - name: Token Supply
    description: Token Supply Controller
  - name: Token Transfer
    description: Token Transfer Controller
  - name: Token
    description: Token Controller
  - name: Transaction Status
    description: Transaction Status Controller
  - name: Wallet Key
    description: Wallet Key Controller
  - name: Wallet Permission
    description: Wallet Permission Controller
  - name: Wallet
    description: Wallet Controller
  - name: Webhook
    description: Webhook Controller
