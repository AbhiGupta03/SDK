=begin
#Molecule API Documentation

#The Hydrogen Molecule API

OpenAPI spec version: 1.3.0
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'uri'

module MoleculeApi
  class DocumentApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a new Document
    # @param document_params Enables a user to store a Document hash on the blockchain
    # @param [Hash] opts the optional parameters
    # @return [TransactionSuccessResponse]
    def create_document_using_post(document_params, opts = {})
      data, _status_code, _headers = create_document_using_post_with_http_info(document_params, opts)
      data
    end

    # Create a new Document
    # @param document_params Enables a user to store a Document hash on the blockchain
    # @param [Hash] opts the optional parameters
    # @return [Array<(TransactionSuccessResponse, Fixnum, Hash)>] TransactionSuccessResponse data, response status code and response headers
    def create_document_using_post_with_http_info(document_params, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DocumentApi.create_document_using_post ...'
      end
      # verify the required parameter 'document_params' is set
      if @api_client.config.client_side_validation && document_params.nil?
        fail ArgumentError, "Missing the required parameter 'document_params' when calling DocumentApi.create_document_using_post"
      end
      # resource path
      local_var_path = '/document'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(document_params)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'TransactionSuccessResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DocumentApi#create_document_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Retrieve a Document
    # @param document_id Document ID
    # @param [Hash] opts the optional parameters
    # @return [DocumentResponse]
    def get_document_using_get(document_id, opts = {})
      data, _status_code, _headers = get_document_using_get_with_http_info(document_id, opts)
      data
    end

    # Retrieve a Document
    # @param document_id Document ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(DocumentResponse, Fixnum, Hash)>] DocumentResponse data, response status code and response headers
    def get_document_using_get_with_http_info(document_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DocumentApi.get_document_using_get ...'
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling DocumentApi.get_document_using_get"
      end
      # resource path
      local_var_path = '/document/{document_id}'.sub('{' + 'document_id' + '}', document_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DocumentResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DocumentApi#get_document_using_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Verify a Document
    # @param document_params Enables a user to verify a Document has not been changed
    # @param [Hash] opts the optional parameters
    # @return [DocumentVerifyResponse]
    def verify_document_using_post(document_params, opts = {})
      data, _status_code, _headers = verify_document_using_post_with_http_info(document_params, opts)
      data
    end

    # Verify a Document
    # @param document_params Enables a user to verify a Document has not been changed
    # @param [Hash] opts the optional parameters
    # @return [Array<(DocumentVerifyResponse, Fixnum, Hash)>] DocumentVerifyResponse data, response status code and response headers
    def verify_document_using_post_with_http_info(document_params, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DocumentApi.verify_document_using_post ...'
      end
      # verify the required parameter 'document_params' is set
      if @api_client.config.client_side_validation && document_params.nil?
        fail ArgumentError, "Missing the required parameter 'document_params' when calling DocumentApi.verify_document_using_post"
      end
      # resource path
      local_var_path = '/document/verify'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(document_params)
      auth_names = ['oauth2']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'DocumentVerifyResponse')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DocumentApi#verify_document_using_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
