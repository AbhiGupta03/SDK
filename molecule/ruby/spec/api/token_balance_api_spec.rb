=begin
#Molecule API Documentation

#The Hydrogen Molecule API

OpenAPI spec version: 1.3.0
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'spec_helper'
require 'json'

# Unit tests for MoleculeApi::TokenBalanceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'TokenBalanceApi' do
  before do
    # run before each test
    @instance = MoleculeApi::TokenBalanceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TokenBalanceApi' do
    it 'should create an instance of TokenBalanceApi' do
      expect(@instance).to be_instance_of(MoleculeApi::TokenBalanceApi)
    end
  end

  # unit tests for get_token_balance_all_using_get
  # Fetch Token Balance list
  # @param [Hash] opts the optional parameters
  # @option opts [String] :wallet_id To filter response Token Balance list by wallet ID
  # @option opts [String] :token_id To filter response Token Balance list by Token ID
  # @option opts [Integer] :page To filter response Token Balance list by page number
  # @option opts [Integer] :size Number of records per page
  # @option opts [String] :order_by Field to sort record list
  # @option opts [BOOLEAN] :ascending Sorting order
  # @option opts [BOOLEAN] :get_latest To fetch latest (one) record
  # @return [PageTokenBalanceResponse]
  describe 'get_token_balance_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_token_balance_using_get
  # Fetch Token Balance details
  # @param token_balance_id Token Balance ID
  # @param [Hash] opts the optional parameters
  # @return [TokenBalanceResponse]
  describe 'get_token_balance_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
