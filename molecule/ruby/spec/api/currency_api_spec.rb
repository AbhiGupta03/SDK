=begin
#Molecule API Documentation

#The Hydrogen Molecule API

OpenAPI spec version: 1.3.0
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'spec_helper'
require 'json'

# Unit tests for MoleculeApi::CurrencyApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'CurrencyApi' do
  before do
    # run before each test
    @instance = MoleculeApi::CurrencyApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of CurrencyApi' do
    it 'should create an instance of CurrencyApi' do
      expect(@instance).to be_instance_of(MoleculeApi::CurrencyApi)
    end
  end

  # unit tests for create_currency_using_post
  # Creates a new Currency
  # @param currency_params It enables a user to create a Currency
  # @param [Hash] opts the optional parameters
  # @return [CurrencyResponse]
  describe 'create_currency_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_currency_all_using_get
  # Fetch Currency list
  # @param [Hash] opts the optional parameters
  # @option opts [String] :symbol To filter response Currency list by Symbol name
  # @option opts [BOOLEAN] :is_allowed To filter response Currency list
  # @option opts [Integer] :page To filter response Currency list by page number
  # @option opts [Integer] :size Number of records per page
  # @option opts [String] :order_by Field to sort record list
  # @option opts [BOOLEAN] :ascending Sorting order
  # @option opts [BOOLEAN] :get_latest To fetch latest (one) record
  # @return [PageCurrencyResponse]
  describe 'get_currency_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_currency_using_get
  # Fetch Currency details
  # @param currency_id Currency ID
  # @param [Hash] opts the optional parameters
  # @return [CurrencyResponse]
  describe 'get_currency_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_currency_using_put
  # Update Currency details
  # @param currency_id Currency ID
  # @param [Hash] opts the optional parameters
  # @option opts [CurrencyUpdateParams] :currency_update_params Currency details to be updated
  # @return [CurrencyResponse]
  describe 'update_currency_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
