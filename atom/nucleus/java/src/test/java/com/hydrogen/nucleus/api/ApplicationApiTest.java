/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.8.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.api;

import com.hydrogen.nucleus.model.Application;
import com.hydrogen.nucleus.model.PageApplication;
import com.hydrogen.nucleus.ApiException;

import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for ApplicationApi
 */
@Ignore
public class ApplicationApiTest {

    private final ApplicationApi api = new ApplicationApi();

    
    /**
     * Create an application
     *
     * Create an application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createApplicationUsingPostTest() throws ApiException {
        Application application = null;
        Application response = api.createApplicationUsingPost(application);

        // TODO: test validations
    }
    
    /**
     * Delete an Application
     *
     * Permanently delete an Application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteApplicationUsingDeleteTest() throws ApiException {
        UUID applicationId = null;
        api.deleteApplicationUsingDelete(applicationId);

        // TODO: test validations
    }
    
    /**
     * List all Application
     *
     * Get details for all Application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApplicationAllUsingGetTest() throws ApiException {
        Boolean ascending = null;
        String filter = null;
        String orderBy = null;
        Integer page = null;
        Integer size = null;
        PageApplication response = api.getApplicationAllUsingGet(ascending, filter, orderBy, page, size);

        // TODO: test validations
    }
    
    /**
     * Retrieve an Application
     *
     * Retrieve the information for an Application.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getApplicationUsingGetTest() throws ApiException {
        UUID applicationId = null;
        Application response = api.getApplicationUsingGet(applicationId);

        // TODO: test validations
    }
    
    /**
     * Update an Application
     *
     * Update the information for an Application
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateApplicationUsingPutTest() throws ApiException {
        Application application = null;
        UUID applicationId = null;
        Application response = api.updateApplicationUsingPut(application, applicationId);

        // TODO: test validations
    }
    
}
