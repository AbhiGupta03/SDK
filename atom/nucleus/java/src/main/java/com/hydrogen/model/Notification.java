/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.7.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * Notification Object
 */
@ApiModel(description = "Notification Object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-04T05:11:20.520Z")
public class Notification {
  @SerializedName("application_id")
  private UUID applicationId = null;

  @SerializedName("create_date")
  private OffsetDateTime createDate = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("feature_id")
  private UUID featureId = null;

  @SerializedName("frequency_unit")
  private List<String> frequencyUnit = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("is_active")
  private Boolean isActive = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("notification_type")
  private String notificationType = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("threshold_type")
  private String thresholdType = null;

  @SerializedName("update_date")
  private OffsetDateTime updateDate = null;

  public Notification applicationId(UUID applicationId) {
    this.applicationId = applicationId;
    return this;
  }

   /**
   * application_id
   * @return applicationId
  **/
  @ApiModelProperty(example = "04638eb3-d94d-45d6-b6f3-c685bb5a6009", value = "application_id")
  public UUID getApplicationId() {
    return applicationId;
  }

  public void setApplicationId(UUID applicationId) {
    this.applicationId = applicationId;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public Notification description(String description) {
    this.description = description;
    return this;
  }

   /**
   * description
   * @return description
  **/
  @ApiModelProperty(example = "notification desc", value = "description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Notification featureId(UUID featureId) {
    this.featureId = featureId;
    return this;
  }

   /**
   * feature_id
   * @return featureId
  **/
  @ApiModelProperty(example = "04638eb3-d94d-45d6-b6f3-c685bb5a6009", value = "feature_id")
  public UUID getFeatureId() {
    return featureId;
  }

  public void setFeatureId(UUID featureId) {
    this.featureId = featureId;
  }

  public Notification frequencyUnit(List<String> frequencyUnit) {
    this.frequencyUnit = frequencyUnit;
    return this;
  }

  public Notification addFrequencyUnitItem(String frequencyUnitItem) {
    if (this.frequencyUnit == null) {
      this.frequencyUnit = new ArrayList<String>();
    }
    this.frequencyUnit.add(frequencyUnitItem);
    return this;
  }

   /**
   * frequency_unit
   * @return frequencyUnit
  **/
  @ApiModelProperty(example = "[\"daily\"]", value = "frequency_unit")
  public List<String> getFrequencyUnit() {
    return frequencyUnit;
  }

  public void setFrequencyUnit(List<String> frequencyUnit) {
    this.frequencyUnit = frequencyUnit;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "000183ac-2288-4564-a76b-119f4694be98", value = "")
  public UUID getId() {
    return id;
  }

  public Notification isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * is_active
   * @return isActive
  **/
  @ApiModelProperty(example = "true", value = "is_active")
  public Boolean isIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

   /**
   * metadata
   * @return metadata
  **/
  @ApiModelProperty(example = "{}", value = "metadata")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public Notification name(String name) {
    this.name = name;
    return this;
  }

   /**
   * name
   * @return name
  **/
  @ApiModelProperty(example = "notification name", required = true, value = "name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Notification notificationType(String notificationType) {
    this.notificationType = notificationType;
    return this;
  }

   /**
   * notificationType
   * @return notificationType
  **/
  @ApiModelProperty(example = "push_mobile", required = true, value = "notificationType")
  public String getNotificationType() {
    return notificationType;
  }

  public void setNotificationType(String notificationType) {
    this.notificationType = notificationType;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(example = "7289243787238", value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public Notification thresholdType(String thresholdType) {
    this.thresholdType = thresholdType;
    return this;
  }

   /**
   * threshold_type
   * @return thresholdType
  **/
  @ApiModelProperty(example = "false", value = "threshold_type")
  public String getThresholdType() {
    return thresholdType;
  }

  public void setThresholdType(String thresholdType) {
    this.thresholdType = thresholdType;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Notification notification = (Notification) o;
    return Objects.equals(this.applicationId, notification.applicationId) &&
        Objects.equals(this.createDate, notification.createDate) &&
        Objects.equals(this.description, notification.description) &&
        Objects.equals(this.featureId, notification.featureId) &&
        Objects.equals(this.frequencyUnit, notification.frequencyUnit) &&
        Objects.equals(this.id, notification.id) &&
        Objects.equals(this.isActive, notification.isActive) &&
        Objects.equals(this.metadata, notification.metadata) &&
        Objects.equals(this.name, notification.name) &&
        Objects.equals(this.notificationType, notification.notificationType) &&
        Objects.equals(this.secondaryId, notification.secondaryId) &&
        Objects.equals(this.thresholdType, notification.thresholdType) &&
        Objects.equals(this.updateDate, notification.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(applicationId, createDate, description, featureId, frequencyUnit, id, isActive, metadata, name, notificationType, secondaryId, thresholdType, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Notification {\n");
    
    sb.append("    applicationId: ").append(toIndentedString(applicationId)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    featureId: ").append(toIndentedString(featureId)).append("\n");
    sb.append("    frequencyUnit: ").append(toIndentedString(frequencyUnit)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notificationType: ").append(toIndentedString(notificationType)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    thresholdType: ").append(toIndentedString(thresholdType)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

