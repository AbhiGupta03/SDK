/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.7.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * AggregateDataByCategoryForClientFromDbVO
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-04T05:11:20.520Z")
public class AggregateDataByCategoryForClientFromDbVO {
  @SerializedName("account_holder")
  private String accountHolder = null;

  @SerializedName("account_name")
  private String accountName = null;

  @SerializedName("account_number")
  private String accountNumber = null;

  @SerializedName("aggregation_account_balance_id")
  private UUID aggregationAccountBalanceId = null;

  @SerializedName("aggregation_account_id")
  private UUID aggregationAccountId = null;

  @SerializedName("available_balance")
  private String availableBalance = null;

  @SerializedName("available_credit")
  private String availableCredit = null;

  @SerializedName("balance")
  private String balance = null;

  @SerializedName("balance_time_stamp")
  private OffsetDateTime balanceTimeStamp = null;

  @SerializedName("category")
  private String category = null;

  @SerializedName("client_id")
  private UUID clientId = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("financial_offer_id")
  private UUID financialOfferId = null;

  @SerializedName("institution_name")
  private String institutionName = null;

  @SerializedName("is_active")
  private Boolean isActive = null;

  @SerializedName("is_asset")
  private Boolean isAsset = null;

  @SerializedName("mask")
  private String mask = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("subcategory")
  private String subcategory = null;

  public AggregateDataByCategoryForClientFromDbVO accountHolder(String accountHolder) {
    this.accountHolder = accountHolder;
    return this;
  }

   /**
   * Get accountHolder
   * @return accountHolder
  **/
  @ApiModelProperty(value = "")
  public String getAccountHolder() {
    return accountHolder;
  }

  public void setAccountHolder(String accountHolder) {
    this.accountHolder = accountHolder;
  }

  public AggregateDataByCategoryForClientFromDbVO accountName(String accountName) {
    this.accountName = accountName;
    return this;
  }

   /**
   * Get accountName
   * @return accountName
  **/
  @ApiModelProperty(value = "")
  public String getAccountName() {
    return accountName;
  }

  public void setAccountName(String accountName) {
    this.accountName = accountName;
  }

  public AggregateDataByCategoryForClientFromDbVO accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * Get accountNumber
   * @return accountNumber
  **/
  @ApiModelProperty(value = "")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public AggregateDataByCategoryForClientFromDbVO aggregationAccountBalanceId(UUID aggregationAccountBalanceId) {
    this.aggregationAccountBalanceId = aggregationAccountBalanceId;
    return this;
  }

   /**
   * Get aggregationAccountBalanceId
   * @return aggregationAccountBalanceId
  **/
  @ApiModelProperty(value = "")
  public UUID getAggregationAccountBalanceId() {
    return aggregationAccountBalanceId;
  }

  public void setAggregationAccountBalanceId(UUID aggregationAccountBalanceId) {
    this.aggregationAccountBalanceId = aggregationAccountBalanceId;
  }

  public AggregateDataByCategoryForClientFromDbVO aggregationAccountId(UUID aggregationAccountId) {
    this.aggregationAccountId = aggregationAccountId;
    return this;
  }

   /**
   * Get aggregationAccountId
   * @return aggregationAccountId
  **/
  @ApiModelProperty(value = "")
  public UUID getAggregationAccountId() {
    return aggregationAccountId;
  }

  public void setAggregationAccountId(UUID aggregationAccountId) {
    this.aggregationAccountId = aggregationAccountId;
  }

  public AggregateDataByCategoryForClientFromDbVO availableBalance(String availableBalance) {
    this.availableBalance = availableBalance;
    return this;
  }

   /**
   * Get availableBalance
   * @return availableBalance
  **/
  @ApiModelProperty(value = "")
  public String getAvailableBalance() {
    return availableBalance;
  }

  public void setAvailableBalance(String availableBalance) {
    this.availableBalance = availableBalance;
  }

  public AggregateDataByCategoryForClientFromDbVO availableCredit(String availableCredit) {
    this.availableCredit = availableCredit;
    return this;
  }

   /**
   * Get availableCredit
   * @return availableCredit
  **/
  @ApiModelProperty(value = "")
  public String getAvailableCredit() {
    return availableCredit;
  }

  public void setAvailableCredit(String availableCredit) {
    this.availableCredit = availableCredit;
  }

  public AggregateDataByCategoryForClientFromDbVO balance(String balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(value = "")
  public String getBalance() {
    return balance;
  }

  public void setBalance(String balance) {
    this.balance = balance;
  }

  public AggregateDataByCategoryForClientFromDbVO balanceTimeStamp(OffsetDateTime balanceTimeStamp) {
    this.balanceTimeStamp = balanceTimeStamp;
    return this;
  }

   /**
   * Get balanceTimeStamp
   * @return balanceTimeStamp
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getBalanceTimeStamp() {
    return balanceTimeStamp;
  }

  public void setBalanceTimeStamp(OffsetDateTime balanceTimeStamp) {
    this.balanceTimeStamp = balanceTimeStamp;
  }

  public AggregateDataByCategoryForClientFromDbVO category(String category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(value = "")
  public String getCategory() {
    return category;
  }

  public void setCategory(String category) {
    this.category = category;
  }

  public AggregateDataByCategoryForClientFromDbVO clientId(UUID clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Get clientId
   * @return clientId
  **/
  @ApiModelProperty(value = "")
  public UUID getClientId() {
    return clientId;
  }

  public void setClientId(UUID clientId) {
    this.clientId = clientId;
  }

  public AggregateDataByCategoryForClientFromDbVO currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public AggregateDataByCategoryForClientFromDbVO financialOfferId(UUID financialOfferId) {
    this.financialOfferId = financialOfferId;
    return this;
  }

   /**
   * Get financialOfferId
   * @return financialOfferId
  **/
  @ApiModelProperty(value = "")
  public UUID getFinancialOfferId() {
    return financialOfferId;
  }

  public void setFinancialOfferId(UUID financialOfferId) {
    this.financialOfferId = financialOfferId;
  }

  public AggregateDataByCategoryForClientFromDbVO institutionName(String institutionName) {
    this.institutionName = institutionName;
    return this;
  }

   /**
   * Get institutionName
   * @return institutionName
  **/
  @ApiModelProperty(value = "")
  public String getInstitutionName() {
    return institutionName;
  }

  public void setInstitutionName(String institutionName) {
    this.institutionName = institutionName;
  }

  public AggregateDataByCategoryForClientFromDbVO isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * Get isActive
   * @return isActive
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

  public AggregateDataByCategoryForClientFromDbVO isAsset(Boolean isAsset) {
    this.isAsset = isAsset;
    return this;
  }

   /**
   * Get isAsset
   * @return isAsset
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsAsset() {
    return isAsset;
  }

  public void setIsAsset(Boolean isAsset) {
    this.isAsset = isAsset;
  }

  public AggregateDataByCategoryForClientFromDbVO mask(String mask) {
    this.mask = mask;
    return this;
  }

   /**
   * Get mask
   * @return mask
  **/
  @ApiModelProperty(value = "")
  public String getMask() {
    return mask;
  }

  public void setMask(String mask) {
    this.mask = mask;
  }

  public AggregateDataByCategoryForClientFromDbVO metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public AggregateDataByCategoryForClientFromDbVO putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public AggregateDataByCategoryForClientFromDbVO subcategory(String subcategory) {
    this.subcategory = subcategory;
    return this;
  }

   /**
   * Get subcategory
   * @return subcategory
  **/
  @ApiModelProperty(value = "")
  public String getSubcategory() {
    return subcategory;
  }

  public void setSubcategory(String subcategory) {
    this.subcategory = subcategory;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AggregateDataByCategoryForClientFromDbVO aggregateDataByCategoryForClientFromDbVO = (AggregateDataByCategoryForClientFromDbVO) o;
    return Objects.equals(this.accountHolder, aggregateDataByCategoryForClientFromDbVO.accountHolder) &&
        Objects.equals(this.accountName, aggregateDataByCategoryForClientFromDbVO.accountName) &&
        Objects.equals(this.accountNumber, aggregateDataByCategoryForClientFromDbVO.accountNumber) &&
        Objects.equals(this.aggregationAccountBalanceId, aggregateDataByCategoryForClientFromDbVO.aggregationAccountBalanceId) &&
        Objects.equals(this.aggregationAccountId, aggregateDataByCategoryForClientFromDbVO.aggregationAccountId) &&
        Objects.equals(this.availableBalance, aggregateDataByCategoryForClientFromDbVO.availableBalance) &&
        Objects.equals(this.availableCredit, aggregateDataByCategoryForClientFromDbVO.availableCredit) &&
        Objects.equals(this.balance, aggregateDataByCategoryForClientFromDbVO.balance) &&
        Objects.equals(this.balanceTimeStamp, aggregateDataByCategoryForClientFromDbVO.balanceTimeStamp) &&
        Objects.equals(this.category, aggregateDataByCategoryForClientFromDbVO.category) &&
        Objects.equals(this.clientId, aggregateDataByCategoryForClientFromDbVO.clientId) &&
        Objects.equals(this.currencyCode, aggregateDataByCategoryForClientFromDbVO.currencyCode) &&
        Objects.equals(this.financialOfferId, aggregateDataByCategoryForClientFromDbVO.financialOfferId) &&
        Objects.equals(this.institutionName, aggregateDataByCategoryForClientFromDbVO.institutionName) &&
        Objects.equals(this.isActive, aggregateDataByCategoryForClientFromDbVO.isActive) &&
        Objects.equals(this.isAsset, aggregateDataByCategoryForClientFromDbVO.isAsset) &&
        Objects.equals(this.mask, aggregateDataByCategoryForClientFromDbVO.mask) &&
        Objects.equals(this.metadata, aggregateDataByCategoryForClientFromDbVO.metadata) &&
        Objects.equals(this.subcategory, aggregateDataByCategoryForClientFromDbVO.subcategory);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountHolder, accountName, accountNumber, aggregationAccountBalanceId, aggregationAccountId, availableBalance, availableCredit, balance, balanceTimeStamp, category, clientId, currencyCode, financialOfferId, institutionName, isActive, isAsset, mask, metadata, subcategory);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AggregateDataByCategoryForClientFromDbVO {\n");
    
    sb.append("    accountHolder: ").append(toIndentedString(accountHolder)).append("\n");
    sb.append("    accountName: ").append(toIndentedString(accountName)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    aggregationAccountBalanceId: ").append(toIndentedString(aggregationAccountBalanceId)).append("\n");
    sb.append("    aggregationAccountId: ").append(toIndentedString(aggregationAccountId)).append("\n");
    sb.append("    availableBalance: ").append(toIndentedString(availableBalance)).append("\n");
    sb.append("    availableCredit: ").append(toIndentedString(availableCredit)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    balanceTimeStamp: ").append(toIndentedString(balanceTimeStamp)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    financialOfferId: ").append(toIndentedString(financialOfferId)).append("\n");
    sb.append("    institutionName: ").append(toIndentedString(institutionName)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    isAsset: ").append(toIndentedString(isAsset)).append("\n");
    sb.append("    mask: ").append(toIndentedString(mask)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    subcategory: ").append(toIndentedString(subcategory)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

