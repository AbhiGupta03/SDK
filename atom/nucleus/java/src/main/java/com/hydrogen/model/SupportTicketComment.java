/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.7.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * Support Ticket Comment
 */
@ApiModel(description = "Support Ticket Comment")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-04T05:11:20.520Z")
public class SupportTicketComment {
  @SerializedName("create_date")
  private OffsetDateTime createDate = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("has_attachment")
  private Boolean hasAttachment = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("is_admin")
  private Boolean isAdmin = null;

  @SerializedName("is_read")
  private Boolean isRead = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("support_ticket_documents")
  private List<SupportTicketDocument> supportTicketDocuments = null;

  @SerializedName("support_ticket_id")
  private UUID supportTicketId = null;

  @SerializedName("update_date")
  private OffsetDateTime updateDate = null;

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public SupportTicketComment description(String description) {
    this.description = description;
    return this;
  }

   /**
   * SupportTicket Comment Description
   * @return description
  **/
  @ApiModelProperty(example = "Login Error", value = "SupportTicket Comment Description")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public SupportTicketComment hasAttachment(Boolean hasAttachment) {
    this.hasAttachment = hasAttachment;
    return this;
  }

   /**
   * Does the SupportTicket Comment contain an attachment
   * @return hasAttachment
  **/
  @ApiModelProperty(example = "true", value = "Does the SupportTicket Comment contain an attachment")
  public Boolean isHasAttachment() {
    return hasAttachment;
  }

  public void setHasAttachment(Boolean hasAttachment) {
    this.hasAttachment = hasAttachment;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "000183ac-2288-4564-a76b-119f4694be98", value = "")
  public UUID getId() {
    return id;
  }

  public SupportTicketComment isAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
    return this;
  }

   /**
   * Is the SupportTicket Comment an admin
   * @return isAdmin
  **/
  @ApiModelProperty(example = "false", value = "Is the SupportTicket Comment an admin")
  public Boolean isIsAdmin() {
    return isAdmin;
  }

  public void setIsAdmin(Boolean isAdmin) {
    this.isAdmin = isAdmin;
  }

  public SupportTicketComment isRead(Boolean isRead) {
    this.isRead = isRead;
    return this;
  }

   /**
   * Is the SupportTicket Comment read
   * @return isRead
  **/
  @ApiModelProperty(example = "false", value = "Is the SupportTicket Comment read")
  public Boolean isIsRead() {
    return isRead;
  }

  public void setIsRead(Boolean isRead) {
    this.isRead = isRead;
  }

  public SupportTicketComment metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public SupportTicketComment putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(example = "7289243787238", value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public SupportTicketComment supportTicketDocuments(List<SupportTicketDocument> supportTicketDocuments) {
    this.supportTicketDocuments = supportTicketDocuments;
    return this;
  }

  public SupportTicketComment addSupportTicketDocumentsItem(SupportTicketDocument supportTicketDocumentsItem) {
    if (this.supportTicketDocuments == null) {
      this.supportTicketDocuments = new ArrayList<SupportTicketDocument>();
    }
    this.supportTicketDocuments.add(supportTicketDocumentsItem);
    return this;
  }

   /**
   * Get supportTicketDocuments
   * @return supportTicketDocuments
  **/
  @ApiModelProperty(value = "")
  public List<SupportTicketDocument> getSupportTicketDocuments() {
    return supportTicketDocuments;
  }

  public void setSupportTicketDocuments(List<SupportTicketDocument> supportTicketDocuments) {
    this.supportTicketDocuments = supportTicketDocuments;
  }

  public SupportTicketComment supportTicketId(UUID supportTicketId) {
    this.supportTicketId = supportTicketId;
    return this;
  }

   /**
   * SupportTicket Id
   * @return supportTicketId
  **/
  @ApiModelProperty(example = "3551b26c-7080-4c4b-a8fc-9ce9360460ba", required = true, value = "SupportTicket Id")
  public UUID getSupportTicketId() {
    return supportTicketId;
  }

  public void setSupportTicketId(UUID supportTicketId) {
    this.supportTicketId = supportTicketId;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SupportTicketComment supportTicketComment = (SupportTicketComment) o;
    return Objects.equals(this.createDate, supportTicketComment.createDate) &&
        Objects.equals(this.description, supportTicketComment.description) &&
        Objects.equals(this.hasAttachment, supportTicketComment.hasAttachment) &&
        Objects.equals(this.id, supportTicketComment.id) &&
        Objects.equals(this.isAdmin, supportTicketComment.isAdmin) &&
        Objects.equals(this.isRead, supportTicketComment.isRead) &&
        Objects.equals(this.metadata, supportTicketComment.metadata) &&
        Objects.equals(this.secondaryId, supportTicketComment.secondaryId) &&
        Objects.equals(this.supportTicketDocuments, supportTicketComment.supportTicketDocuments) &&
        Objects.equals(this.supportTicketId, supportTicketComment.supportTicketId) &&
        Objects.equals(this.updateDate, supportTicketComment.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createDate, description, hasAttachment, id, isAdmin, isRead, metadata, secondaryId, supportTicketDocuments, supportTicketId, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SupportTicketComment {\n");
    
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    hasAttachment: ").append(toIndentedString(hasAttachment)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isAdmin: ").append(toIndentedString(isAdmin)).append("\n");
    sb.append("    isRead: ").append(toIndentedString(isRead)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    supportTicketDocuments: ").append(toIndentedString(supportTicketDocuments)).append("\n");
    sb.append("    supportTicketId: ").append(toIndentedString(supportTicketId)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

