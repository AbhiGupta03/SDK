/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.8.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * Insurance Quote Object
 */
@ApiModel(description = "Insurance Quote Object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-10-12T11:03:26.704Z")



public class InsuranceQuote {
  @SerializedName("coverages")
  private List<InsuranceCoverageMap> coverages = null;

  @SerializedName("create_date")
  private OffsetDateTime createDate = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("discounts")
  private List<InsuranceDiscountMap> discounts = null;

  @SerializedName("end_date")
  private OffsetDateTime endDate = null;

  @SerializedName("financial_offer_id")
  private UUID financialOfferId = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("is_active")
  private Boolean isActive = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("node_map")
  private List<AllocationNodeMap> nodeMap = null;

  @SerializedName("premium")
  private Double premium = null;

  @SerializedName("premium_duration")
  private Double premiumDuration = null;

  @SerializedName("premium_frequency")
  private Integer premiumFrequency = null;

  @SerializedName("premium_frequency_unit")
  private String premiumFrequencyUnit = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("start_date")
  private OffsetDateTime startDate = null;

  @SerializedName("update_date")
  private OffsetDateTime updateDate = null;

   /**
   * Get coverages
   * @return coverages
  **/
  @ApiModelProperty(example = "[]", value = "")
  public List<InsuranceCoverageMap> getCoverages() {
    return coverages;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public InsuranceQuote currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * currencyCode
   * @return currencyCode
  **/
  @ApiModelProperty(example = "USD", required = true, value = "currencyCode")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

   /**
   * Get discounts
   * @return discounts
  **/
  @ApiModelProperty(example = "[]", value = "")
  public List<InsuranceDiscountMap> getDiscounts() {
    return discounts;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public InsuranceQuote financialOfferId(UUID financialOfferId) {
    this.financialOfferId = financialOfferId;
    return this;
  }

   /**
   * financial_offer_id
   * @return financialOfferId
  **/
  @ApiModelProperty(example = "ffec4069-f3bd-46f0-bf62-c7c77b400e37", value = "financial_offer_id")
  public UUID getFinancialOfferId() {
    return financialOfferId;
  }

  public void setFinancialOfferId(UUID financialOfferId) {
    this.financialOfferId = financialOfferId;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "000183ac-2288-4564-a76b-119f4694be98", value = "")
  public UUID getId() {
    return id;
  }

  public InsuranceQuote isActive(Boolean isActive) {
    this.isActive = isActive;
    return this;
  }

   /**
   * is_active
   * @return isActive
  **/
  @ApiModelProperty(example = "true", value = "is_active")
  public Boolean isIsActive() {
    return isActive;
  }

  public void setIsActive(Boolean isActive) {
    this.isActive = isActive;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(example = "{}", value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

   /**
   * Get nodeMap
   * @return nodeMap
  **/
  @ApiModelProperty(example = "[]", value = "")
  public List<AllocationNodeMap> getNodeMap() {
    return nodeMap;
  }

  public InsuranceQuote premium(Double premium) {
    this.premium = premium;
    return this;
  }

   /**
   * premium
   * @return premium
  **/
  @ApiModelProperty(example = "0.88", required = true, value = "premium")
  public Double getPremium() {
    return premium;
  }

  public void setPremium(Double premium) {
    this.premium = premium;
  }

  public InsuranceQuote premiumDuration(Double premiumDuration) {
    this.premiumDuration = premiumDuration;
    return this;
  }

   /**
   * premiumDuration
   * @return premiumDuration
  **/
  @ApiModelProperty(example = "0.88", value = "premiumDuration")
  public Double getPremiumDuration() {
    return premiumDuration;
  }

  public void setPremiumDuration(Double premiumDuration) {
    this.premiumDuration = premiumDuration;
  }

  public InsuranceQuote premiumFrequency(Integer premiumFrequency) {
    this.premiumFrequency = premiumFrequency;
    return this;
  }

   /**
   * premiumFrequency
   * @return premiumFrequency
  **/
  @ApiModelProperty(example = "1", value = "premiumFrequency")
  public Integer getPremiumFrequency() {
    return premiumFrequency;
  }

  public void setPremiumFrequency(Integer premiumFrequency) {
    this.premiumFrequency = premiumFrequency;
  }

  public InsuranceQuote premiumFrequencyUnit(String premiumFrequencyUnit) {
    this.premiumFrequencyUnit = premiumFrequencyUnit;
    return this;
  }

   /**
   * premiumFrequencyUnit
   * @return premiumFrequencyUnit
  **/
  @ApiModelProperty(example = "daily", required = true, value = "premiumFrequencyUnit")
  public String getPremiumFrequencyUnit() {
    return premiumFrequencyUnit;
  }

  public void setPremiumFrequencyUnit(String premiumFrequencyUnit) {
    this.premiumFrequencyUnit = premiumFrequencyUnit;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(example = "7289243787238", value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InsuranceQuote insuranceQuote = (InsuranceQuote) o;
    return Objects.equals(this.coverages, insuranceQuote.coverages) &&
        Objects.equals(this.createDate, insuranceQuote.createDate) &&
        Objects.equals(this.currencyCode, insuranceQuote.currencyCode) &&
        Objects.equals(this.discounts, insuranceQuote.discounts) &&
        Objects.equals(this.endDate, insuranceQuote.endDate) &&
        Objects.equals(this.financialOfferId, insuranceQuote.financialOfferId) &&
        Objects.equals(this.id, insuranceQuote.id) &&
        Objects.equals(this.isActive, insuranceQuote.isActive) &&
        Objects.equals(this.metadata, insuranceQuote.metadata) &&
        Objects.equals(this.nodeMap, insuranceQuote.nodeMap) &&
        Objects.equals(this.premium, insuranceQuote.premium) &&
        Objects.equals(this.premiumDuration, insuranceQuote.premiumDuration) &&
        Objects.equals(this.premiumFrequency, insuranceQuote.premiumFrequency) &&
        Objects.equals(this.premiumFrequencyUnit, insuranceQuote.premiumFrequencyUnit) &&
        Objects.equals(this.secondaryId, insuranceQuote.secondaryId) &&
        Objects.equals(this.startDate, insuranceQuote.startDate) &&
        Objects.equals(this.updateDate, insuranceQuote.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(coverages, createDate, currencyCode, discounts, endDate, financialOfferId, id, isActive, metadata, nodeMap, premium, premiumDuration, premiumFrequency, premiumFrequencyUnit, secondaryId, startDate, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InsuranceQuote {\n");
    
    sb.append("    coverages: ").append(toIndentedString(coverages)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    discounts: ").append(toIndentedString(discounts)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    financialOfferId: ").append(toIndentedString(financialOfferId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    nodeMap: ").append(toIndentedString(nodeMap)).append("\n");
    sb.append("    premium: ").append(toIndentedString(premium)).append("\n");
    sb.append("    premiumDuration: ").append(toIndentedString(premiumDuration)).append("\n");
    sb.append("    premiumFrequency: ").append(toIndentedString(premiumFrequency)).append("\n");
    sb.append("    premiumFrequencyUnit: ").append(toIndentedString(premiumFrequencyUnit)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

