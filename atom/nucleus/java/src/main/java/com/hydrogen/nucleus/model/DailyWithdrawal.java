/*
 * Hydrogen Atom API
 * The Hydrogen Atom API
 *
 * OpenAPI spec version: 1.7.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.model;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * DailyWithdrawal Object
 */
@ApiModel(description = "DailyWithdrawal Object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-06-04T05:11:20.520Z")
public class DailyWithdrawal {
  @SerializedName("account_id")
  private UUID accountId = null;

  @SerializedName("account_number")
  private String accountNumber = null;

  @SerializedName("amount")
  private Double amount = null;

  @SerializedName("comments")
  private String comments = null;

  @SerializedName("create_date")
  private OffsetDateTime createDate = null;

  @SerializedName("currency_code")
  private String currencyCode = null;

  @SerializedName("direction")
  private String direction = null;

  @SerializedName("fees")
  private String fees = null;

  @SerializedName("funding_id")
  private UUID fundingId = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("last_request_date")
  private LocalDate lastRequestDate = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("notes")
  private String notes = null;

  @SerializedName("portfolio_id")
  private UUID portfolioId = null;

  @SerializedName("received_date")
  private LocalDate receivedDate = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("status_time_stamp")
  private OffsetDateTime statusTimeStamp = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("update_date")
  private OffsetDateTime updateDate = null;

  @SerializedName("withdrawal_date")
  private OffsetDateTime withdrawalDate = null;

  public DailyWithdrawal accountId(UUID accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * accountId
   * @return accountId
  **/
  @ApiModelProperty(example = "1c28dade-8679-4df5-9b9d-c508d04fcb0c", required = true, value = "accountId")
  public UUID getAccountId() {
    return accountId;
  }

  public void setAccountId(UUID accountId) {
    this.accountId = accountId;
  }

  public DailyWithdrawal accountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
    return this;
  }

   /**
   * accountNumber
   * @return accountNumber
  **/
  @ApiModelProperty(example = "bKU8LQ6gI", value = "accountNumber")
  public String getAccountNumber() {
    return accountNumber;
  }

  public void setAccountNumber(String accountNumber) {
    this.accountNumber = accountNumber;
  }

  public DailyWithdrawal amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * amount
   * @return amount
  **/
  @ApiModelProperty(example = "100.5", required = true, value = "amount")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public DailyWithdrawal comments(String comments) {
    this.comments = comments;
    return this;
  }

   /**
   * comments
   * @return comments
  **/
  @ApiModelProperty(example = "Funded", value = "comments")
  public String getComments() {
    return comments;
  }

  public void setComments(String comments) {
    this.comments = comments;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public DailyWithdrawal currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * currencyCode
   * @return currencyCode
  **/
  @ApiModelProperty(example = "USD", value = "currencyCode")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public DailyWithdrawal direction(String direction) {
    this.direction = direction;
    return this;
  }

   /**
   * direction
   * @return direction
  **/
  @ApiModelProperty(example = "withdrawal", value = "direction")
  public String getDirection() {
    return direction;
  }

  public void setDirection(String direction) {
    this.direction = direction;
  }

  public DailyWithdrawal fees(String fees) {
    this.fees = fees;
    return this;
  }

   /**
   * fees
   * @return fees
  **/
  @ApiModelProperty(example = "0", value = "fees")
  public String getFees() {
    return fees;
  }

  public void setFees(String fees) {
    this.fees = fees;
  }

  public DailyWithdrawal fundingId(UUID fundingId) {
    this.fundingId = fundingId;
    return this;
  }

   /**
   * fundingId
   * @return fundingId
  **/
  @ApiModelProperty(example = "ea30e8b7-3946-46ed-975a-4870a57d119s", value = "fundingId")
  public UUID getFundingId() {
    return fundingId;
  }

  public void setFundingId(UUID fundingId) {
    this.fundingId = fundingId;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "000183ac-2288-4564-a76b-119f4694be98", value = "")
  public UUID getId() {
    return id;
  }

  public DailyWithdrawal lastRequestDate(LocalDate lastRequestDate) {
    this.lastRequestDate = lastRequestDate;
    return this;
  }

   /**
   * lastRequestDate
   * @return lastRequestDate
  **/
  @ApiModelProperty(example = "2018-01-29", value = "lastRequestDate")
  public LocalDate getLastRequestDate() {
    return lastRequestDate;
  }

  public void setLastRequestDate(LocalDate lastRequestDate) {
    this.lastRequestDate = lastRequestDate;
  }

  public DailyWithdrawal metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public DailyWithdrawal putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public DailyWithdrawal notes(String notes) {
    this.notes = notes;
    return this;
  }

   /**
   * notes
   * @return notes
  **/
  @ApiModelProperty(example = "Sample", value = "notes")
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }

  public DailyWithdrawal portfolioId(UUID portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * portfolio_id
   * @return portfolioId
  **/
  @ApiModelProperty(example = "ea30e8b7-3946-46ed-975a-4870a57d119s", value = "portfolio_id")
  public UUID getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(UUID portfolioId) {
    this.portfolioId = portfolioId;
  }

  public DailyWithdrawal receivedDate(LocalDate receivedDate) {
    this.receivedDate = receivedDate;
    return this;
  }

   /**
   * received_date
   * @return receivedDate
  **/
  @ApiModelProperty(example = "2018-01-29", value = "received_date")
  public LocalDate getReceivedDate() {
    return receivedDate;
  }

  public void setReceivedDate(LocalDate receivedDate) {
    this.receivedDate = receivedDate;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(example = "7289243787238", value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public DailyWithdrawal status(String status) {
    this.status = status;
    return this;
  }

   /**
   * status
   * @return status
  **/
  @ApiModelProperty(example = "in process", value = "status")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public DailyWithdrawal statusTimeStamp(OffsetDateTime statusTimeStamp) {
    this.statusTimeStamp = statusTimeStamp;
    return this;
  }

   /**
   * statusTimeStamp
   * @return statusTimeStamp
  **/
  @ApiModelProperty(example = "2018-01-09'T'12:00:00", value = "statusTimeStamp")
  public OffsetDateTime getStatusTimeStamp() {
    return statusTimeStamp;
  }

  public void setStatusTimeStamp(OffsetDateTime statusTimeStamp) {
    this.statusTimeStamp = statusTimeStamp;
  }

  public DailyWithdrawal type(String type) {
    this.type = type;
    return this;
  }

   /**
   * type
   * @return type
  **/
  @ApiModelProperty(example = "Routine Withdrawal", value = "type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }

  public DailyWithdrawal withdrawalDate(OffsetDateTime withdrawalDate) {
    this.withdrawalDate = withdrawalDate;
    return this;
  }

   /**
   * withdrawalDate
   * @return withdrawalDate
  **/
  @ApiModelProperty(example = "2018-01-29", required = true, value = "withdrawalDate")
  public OffsetDateTime getWithdrawalDate() {
    return withdrawalDate;
  }

  public void setWithdrawalDate(OffsetDateTime withdrawalDate) {
    this.withdrawalDate = withdrawalDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DailyWithdrawal dailyWithdrawal = (DailyWithdrawal) o;
    return Objects.equals(this.accountId, dailyWithdrawal.accountId) &&
        Objects.equals(this.accountNumber, dailyWithdrawal.accountNumber) &&
        Objects.equals(this.amount, dailyWithdrawal.amount) &&
        Objects.equals(this.comments, dailyWithdrawal.comments) &&
        Objects.equals(this.createDate, dailyWithdrawal.createDate) &&
        Objects.equals(this.currencyCode, dailyWithdrawal.currencyCode) &&
        Objects.equals(this.direction, dailyWithdrawal.direction) &&
        Objects.equals(this.fees, dailyWithdrawal.fees) &&
        Objects.equals(this.fundingId, dailyWithdrawal.fundingId) &&
        Objects.equals(this.id, dailyWithdrawal.id) &&
        Objects.equals(this.lastRequestDate, dailyWithdrawal.lastRequestDate) &&
        Objects.equals(this.metadata, dailyWithdrawal.metadata) &&
        Objects.equals(this.notes, dailyWithdrawal.notes) &&
        Objects.equals(this.portfolioId, dailyWithdrawal.portfolioId) &&
        Objects.equals(this.receivedDate, dailyWithdrawal.receivedDate) &&
        Objects.equals(this.secondaryId, dailyWithdrawal.secondaryId) &&
        Objects.equals(this.status, dailyWithdrawal.status) &&
        Objects.equals(this.statusTimeStamp, dailyWithdrawal.statusTimeStamp) &&
        Objects.equals(this.type, dailyWithdrawal.type) &&
        Objects.equals(this.updateDate, dailyWithdrawal.updateDate) &&
        Objects.equals(this.withdrawalDate, dailyWithdrawal.withdrawalDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, accountNumber, amount, comments, createDate, currencyCode, direction, fees, fundingId, id, lastRequestDate, metadata, notes, portfolioId, receivedDate, secondaryId, status, statusTimeStamp, type, updateDate, withdrawalDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DailyWithdrawal {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    accountNumber: ").append(toIndentedString(accountNumber)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    direction: ").append(toIndentedString(direction)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    fundingId: ").append(toIndentedString(fundingId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastRequestDate: ").append(toIndentedString(lastRequestDate)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    receivedDate: ").append(toIndentedString(receivedDate)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusTimeStamp: ").append(toIndentedString(statusTimeStamp)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("    withdrawalDate: ").append(toIndentedString(withdrawalDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

