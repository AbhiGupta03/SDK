/*
 * Hydrogen Nucleus API
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.8.0
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.nucleus.model;

import java.util.Objects;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.LocalDate;
import org.threeten.bp.OffsetDateTime;

/**
 * CampaignData Object
 */
@ApiModel(description = "CampaignData Object")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-10-12T11:03:26.704Z")



public class CampaignData {
  @SerializedName("campaign_id")
  private UUID campaignId = null;

  @SerializedName("click_through_rate")
  private Double clickThroughRate = null;

  @SerializedName("create_date")
  private OffsetDateTime createDate = null;

  @SerializedName("end_date")
  private LocalDate endDate = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("line_item")
  private String lineItem = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("publisher_campaign_name")
  private String publisherCampaignName = null;

  @SerializedName("secondary_id")
  private String secondaryId = null;

  @SerializedName("start_date")
  private LocalDate startDate = null;

  @SerializedName("total_clicks")
  private Long totalClicks = null;

  @SerializedName("total_impressions")
  private Long totalImpressions = null;

  @SerializedName("update_date")
  private OffsetDateTime updateDate = null;

  public CampaignData campaignId(UUID campaignId) {
    this.campaignId = campaignId;
    return this;
  }

   /**
   * campaignId
   * @return campaignId
  **/
  @ApiModelProperty(example = "f572eedd-deab-4efd-9b30-9e74787cad44", required = true, value = "campaignId")
  public UUID getCampaignId() {
    return campaignId;
  }

  public void setCampaignId(UUID campaignId) {
    this.campaignId = campaignId;
  }

  public CampaignData clickThroughRate(Double clickThroughRate) {
    this.clickThroughRate = clickThroughRate;
    return this;
  }

   /**
   * clickThroughRate
   * @return clickThroughRate
  **/
  @ApiModelProperty(example = "100.0", value = "clickThroughRate")
  public Double getClickThroughRate() {
    return clickThroughRate;
  }

  public void setClickThroughRate(Double clickThroughRate) {
    this.clickThroughRate = clickThroughRate;
  }

   /**
   * Get createDate
   * @return createDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public CampaignData endDate(LocalDate endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * endDate
   * @return endDate
  **/
  @ApiModelProperty(example = "2018-01-09", required = true, value = "endDate")
  public LocalDate getEndDate() {
    return endDate;
  }

  public void setEndDate(LocalDate endDate) {
    this.endDate = endDate;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(example = "000183ac-2288-4564-a76b-119f4694be98", value = "")
  public UUID getId() {
    return id;
  }

  public CampaignData lineItem(String lineItem) {
    this.lineItem = lineItem;
    return this;
  }

   /**
   * lineItem
   * @return lineItem
  **/
  @ApiModelProperty(example = "banner click through", value = "lineItem")
  public String getLineItem() {
    return lineItem;
  }

  public void setLineItem(String lineItem) {
    this.lineItem = lineItem;
  }

  public CampaignData metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public CampaignData putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public CampaignData publisherCampaignName(String publisherCampaignName) {
    this.publisherCampaignName = publisherCampaignName;
    return this;
  }

   /**
   * publisherCampaignName
   * @return publisherCampaignName
  **/
  @ApiModelProperty(example = "Example Campaign Inc", value = "publisherCampaignName")
  public String getPublisherCampaignName() {
    return publisherCampaignName;
  }

  public void setPublisherCampaignName(String publisherCampaignName) {
    this.publisherCampaignName = publisherCampaignName;
  }

   /**
   * Get secondaryId
   * @return secondaryId
  **/
  @ApiModelProperty(example = "7289243787238", value = "")
  public String getSecondaryId() {
    return secondaryId;
  }

  public CampaignData startDate(LocalDate startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * startDate
   * @return startDate
  **/
  @ApiModelProperty(example = "2018-01-09", required = true, value = "startDate")
  public LocalDate getStartDate() {
    return startDate;
  }

  public void setStartDate(LocalDate startDate) {
    this.startDate = startDate;
  }

  public CampaignData totalClicks(Long totalClicks) {
    this.totalClicks = totalClicks;
    return this;
  }

   /**
   * clickThroughRate
   * @return totalClicks
  **/
  @ApiModelProperty(example = "10000", value = "clickThroughRate")
  public Long getTotalClicks() {
    return totalClicks;
  }

  public void setTotalClicks(Long totalClicks) {
    this.totalClicks = totalClicks;
  }

  public CampaignData totalImpressions(Long totalImpressions) {
    this.totalImpressions = totalImpressions;
    return this;
  }

   /**
   * totalImpressions
   * @return totalImpressions
  **/
  @ApiModelProperty(example = "100000", value = "totalImpressions")
  public Long getTotalImpressions() {
    return totalImpressions;
  }

  public void setTotalImpressions(Long totalImpressions) {
    this.totalImpressions = totalImpressions;
  }

   /**
   * Get updateDate
   * @return updateDate
  **/
  @ApiModelProperty(example = "2018-06-28T18:17:23.579+0000", value = "")
  public OffsetDateTime getUpdateDate() {
    return updateDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignData campaignData = (CampaignData) o;
    return Objects.equals(this.campaignId, campaignData.campaignId) &&
        Objects.equals(this.clickThroughRate, campaignData.clickThroughRate) &&
        Objects.equals(this.createDate, campaignData.createDate) &&
        Objects.equals(this.endDate, campaignData.endDate) &&
        Objects.equals(this.id, campaignData.id) &&
        Objects.equals(this.lineItem, campaignData.lineItem) &&
        Objects.equals(this.metadata, campaignData.metadata) &&
        Objects.equals(this.publisherCampaignName, campaignData.publisherCampaignName) &&
        Objects.equals(this.secondaryId, campaignData.secondaryId) &&
        Objects.equals(this.startDate, campaignData.startDate) &&
        Objects.equals(this.totalClicks, campaignData.totalClicks) &&
        Objects.equals(this.totalImpressions, campaignData.totalImpressions) &&
        Objects.equals(this.updateDate, campaignData.updateDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignId, clickThroughRate, createDate, endDate, id, lineItem, metadata, publisherCampaignName, secondaryId, startDate, totalClicks, totalImpressions, updateDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignData {\n");
    
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    clickThroughRate: ").append(toIndentedString(clickThroughRate)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lineItem: ").append(toIndentedString(lineItem)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    publisherCampaignName: ").append(toIndentedString(publisherCampaignName)).append("\n");
    sb.append("    secondaryId: ").append(toIndentedString(secondaryId)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    totalClicks: ").append(toIndentedString(totalClicks)).append("\n");
    sb.append("    totalImpressions: ").append(toIndentedString(totalImpressions)).append("\n");
    sb.append("    updateDate: ").append(toIndentedString(updateDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

