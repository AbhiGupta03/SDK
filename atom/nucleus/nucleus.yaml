swagger: '2.0'
info:
  description: Data model of Hydrogen Atom
  version: 1.7.0
  title: Hydrogen Nucleus API
  termsOfService: 'https://www.hydrogenplatform.com/legal/terms'
  contact:
    name: The Hydrogen Technology Corporation
    url: 'https://www.hydrogenplatform.com/contact'
    email: info@hydrogenplatform.com
host: 'sandbox.hydrogenplatform.com'
basePath: /
tags:
  - name: Account
    description: Account Controller
  - name: Accounting
    description: Accounting Controller
  - name: AggregationAccount
    description: AggregationAccount Controller
  - name: Allocation
    description: Allocation Controller
  - name: Application
    description: Application Controller
  - name: AuditLog
    description: AuditLog Controller
  - name: Benchmark
    description: Benchmark Controller
  - name: Budget
    description: Budget Controller
  - name: Bulk
    description: Bulk Controller
  - name: Card
    description: Card Controller
  - name: Client
    description: Client Controller
  - name: Customer
    description: Customer Controller
  - name: DecisionTree
    description: DecisionTree Controller
  - name: Document
    description: Document Controller
  - name: FAQ
    description: FAQ Controller
  - name: Feature
    description: Feature Controller
  - name: FinancialOffer
    description: Financial Offer Controller
  - name: Funding
    description: Funding Controller
  - name: Goal
    description: Goal Controller
  - name: Insurance
    description: Insurance Controller
  - name: Invoice
    description: Invoice Controller
  - name: Marketing
    description: Marketing Controller
  - name: Model
    description: Model Controller
  - name: Notification
    description: Notification Controller
  - name: Order
    description: Order Controller
  - name: Overflow
    description: Overflow Controller
  - name: Performance
    description: Performance Controller
  - name: Portfolio
    description: Portfolio Controller
  - name: Questionnaire
    description: Questionnaire Controller
  - name: Resource
    description: Resource Controller
  - name: RiskProfile
    description: Risk Profile Controller
  - name: Roundup
    description: Roundup Controller
  - name: Score
    description: Score Controller
  - name: Securities
    description: Securities Controller
  - name: Support
    description: Support Controller
  - name: Utils
    description: Utils Controller
  - name: Webhook
    description: Webhook Controller
paths:
  /account:
    get:
      tags:
        - Account
      summary: List all accounts
      description: Get information for all accounts for all clients defined for your firm.
      operationId: getAccountAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Account»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Account
      summary: Create an account
      description: Create an account under a client.
      operationId: createAccountUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: clientAccountRequest
          description: clientAccountRequest
          required: true
          schema:
            $ref: '#/definitions/Account'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Account'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}':
    get:
      tags:
        - Account
      summary: Retrieve an account
      description: Retrieve the information for a specific account associated with a client.
      operationId: getAccountUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Account'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Account
      summary: Update an account
      description: Update the information for an account.
      operationId: updateAccountUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: account
          description: account
          required: true
          schema:
            $ref: '#/definitions/Account'
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Account'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Account
      summary: Delete an account
      description: Permanently delete an account under a client.
      operationId: deleteAccountUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/account_overview':
    get:
      tags:
        - Account
      summary: List all Account overview
      operationId: getAccountOverviewUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountOverviewVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/asset_size':
    get:
      tags:
        - Account
      summary: List all account asset sizes
      description: Get a list of asset sizes by date for an account.
      operationId: getAccountAssetSizeAggAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: Account Id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: exclude_subledger
          in: query
          description: exclude_subledger
          required: false
          type: boolean
          default: false
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: sort_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in ()'
          required: false
          type: string
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AvailableDateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/holding':
    get:
      tags:
        - Account
      summary: List all account holdings
      description: Get information for all the securities that are currently being held by an account.
      operationId: getPortfolioHoldingAggAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        - name: end_date
          in: query
          description: 'end date '
          required: false
          type: string
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: start_date
          in: query
          description: 'start date '
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PortfolioHoldingAgg'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/order_bulk':
    post:
      tags:
        - Order
      summary: Bulk orders for an account
      description: Aggregates all orders on a given date for an account.
      operationId: createAccountOrderBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/TokenDateRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/order_buy_only':
    post:
      tags:
        - Order
      summary: Create buy-only account rebalance orders
      description: Create order records necessary to rebalance an account and all its portfolios according to the allocation(s) to which the account subscribes and models to which the portfolios subscribe.
      operationId: createAccountOrderBuyOnlyUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/order_rebalance':
    post:
      tags:
        - Order
      summary: Create account rebalance orders
      description: 'Create order records necessary to rebalance an account and all its portfolios according to the allocation(s) to which the account subscribes and models to which the portfolios subscribe. '
      operationId: createAccountOrderRebalanceUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/order_reconciliation':
    post:
      tags:
        - Order
      summary: Create account reconciliation order
      operationId: createAccountOrderReconciliation
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/OrderReconcileRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderReconcileReturnObject'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/order_sell_all':
    post:
      tags:
        - Order
      summary: Sell all account order
      description: Create order records necessary to entirely sell all the holdings within an account.
      operationId: createAccountOrderSellAllUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/order_sell_only':
    post:
      tags:
        - Order
      summary: Create sell-only account rebalance orders
      description: Create order records necessary to rebalance an account and all its portfolios according to the allocation(s) to which the account subscribes and models to which the portfolios subscribe.
      operationId: createAccountOrderSellOnlyUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/performance':
    get:
      tags:
        - Performance
      summary: Account Performance
      description: Get information on the performance of an account using IRR (Internal Rate of Return). You must provide the unique account_id.
      operationId: getAccountPerformanceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: Account Id -/account
          required: true
          type: string
          format: uuid
        - name: active_premium_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: annualized_return_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: benchmark_id
          in: query
          description: Client Benchmark or Tenant Benchmark id -/benchmark
          required: false
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: hist_factor
          in: query
          description: 'Histogram factor- (statId: 39, default: 5)'
          required: false
          type: number
          format: double
        - name: mar_down_side_deviation
          in: query
          description: 'minimum acceptable return for downside deviation - (statId: 58, default: 0) '
          required: false
          type: number
          format: double
        - name: max_percentile_monte_carlo
          in: query
          description: 'max percentile for monte carlo, i.entity. 80 - (statId: 62, default: 95)'
          required: false
          type: number
          format: double
        - name: mean_percentile_monte_carlo
          in: query
          description: 'mean percentile for monte carlo i.entity. 50- (statId: 62, default: 50)'
          required: false
          type: number
          format: double
        - name: min_percentile_monte_carlo
          in: query
          description: 'min percentile for monte carlo i.entity. 20 - (statId: 62, default: 5)'
          required: false
          type: number
          format: double
        - name: moving_average_n_day
          in: query
          description: 'number of days for moving average n-day - (statId: 18, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_day_returns
          in: query
          description: 'number of days for Rolling n-day returns - (statId: 2, default: 7)  '
          required: false
          type: integer
          format: int32
        - name: n_path_monte_carlo
          in: query
          description: 'number of points for a simulation- (statId: 62, default: 100)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_max_drawdown
          in: query
          description: 'number of days for Rolling n-day max drawdown- (statId: 46, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_volatility
          in: query
          description: 'number of days for Rolling n-day volatility- (statId: 34, default: 7)'
          required: false
          type: integer
          format: int32
        - name: num_sim_monte_carlo
          in: query
          description: 'number of simulations - (statId: 62, default: 1000) '
          required: false
          type: integer
          format: int32
        - name: period_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () -Carries out stats on either daily, monthly, annually or quarterly dates (default: ''D'')'
          required: false
          type: string
        - name: risk_free_alpha
          in: query
          description: 'risk free val alpha - (statId: 52, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_sharpe
          in: query
          description: 'risk free val sharpe- (statId: 49, default: 0) '
          required: false
          type: number
          format: double
        - name: risk_free_sortino
          in: query
          description: 'risk free val sortino - (statId: 56, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_treynor
          in: query
          description: 'risk free val treynor- (statId: 51, default: 0) '
          required: false
          type: number
          format: double
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
        - name: stat
          in: query
          description: A stat type - /statistics
          required: false
          type: string
        - name: var_conf_interval
          in: query
          description: 'VaR Confidence Interval ( alpha ) i.entity 99, 95, etc - (statId: 40, default: 95)'
          required: false
          type: number
          format: double
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/subscribe':
    post:
      tags:
        - Account
      summary: Subscribe an account
      description: 'After creating an account, you may create portfolios for the account to track a client’s investment, savings, or insurance products.'
      operationId: subscribeAccountUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        - in: body
          name: allocRequest
          description: allocRequest
          required: true
          schema:
            $ref: '#/definitions/AccountAllocationMapping'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Portfolio'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account/{account_id}/transaction':
    get:
      tags:
        - Account
      summary: List all account transactions
      description: Get the information for all transactions for an account.
      operationId: getPortfolioTransactionAggAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: UUID account_id
          required: true
          type: string
          format: uuid
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: end_date
          in: query
          description: end_date
          required: false
          type: string
          default: 'null'
          format: date-time
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start_date
          required: false
          type: string
          default: 'null'
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /account_allocation:
    get:
      tags:
        - Account
      summary: List all account allocations
      description: Get information for all account-allocation mappings for all accounts defined for your firm.
      operationId: getAccountAllocationMappingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AccountAllocationMapping»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Account
      summary: Create an account allocation
      description: Create an account-allocation mapping for an account.
      operationId: createAccountAllocationMappingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: allocRequest
          description: allocRequest
          required: true
          schema:
            $ref: '#/definitions/AccountAllocationMapping'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountAllocationMapping'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account_allocation/{account_allocation_id}':
    get:
      tags:
        - Account
      summary: Retrieve an account allocation
      description: Retrieve the information for a specific account-allocation mapping for an account.
      operationId: getAccountAllocationMappingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_allocation_id
          in: path
          description: UUID account_allocation_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountAllocationMapping'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Account
      summary: Update an account allocation
      description: Update the information for an account-allocation mapping.
      operationId: updateAccountAllocationMappingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_allocation_id
          in: path
          description: UUID account_allocation_id
          required: true
          type: string
          format: uuid
          x-example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        - in: body
          name: account_allocation_mapping
          description: account_allocation_mapping
          required: false
          schema:
            $ref: '#/definitions/AccountAllocationMapping'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountAllocationMapping'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Account
      summary: Delete an account allocation
      description: Permanently delete an account-allocation mapping for an account.
      operationId: deleteAccountAllocationMappingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: account_allocation_id
          in: path
          description: UUID account_allocation_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /account_asset_size:
    get:
      tags:
        - Account
      summary: List all account asset sizes
      description: Get information for all account asset sizes
      operationId: getAccountAssetSizeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«VAccountAssetSize»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /account_permission:
    get:
      tags:
        - Account
      summary: List all account permission
      description: List all account permission
      operationId: getAllAccountPermissionUsingGET
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AccountPermissionVO»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Account
      summary: create an account permission
      description: create an account permission
      operationId: insertAccountAndRelatedPermissionUsingPOST
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aclClientPermissionVO
          description: aclClientPermissionVO
          required: true
          schema:
            $ref: '#/definitions/AclClientPermissionVO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountPermissionVO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account_permission/{account_id}':
    get:
      tags:
        - Account
      summary: Get an account permission
      description: Get an account permission
      operationId: getAccountPermissionUsingGET
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountPermissionVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Account
      summary: Update an account permission
      description: Update an account permission
      operationId: updateClientAccountPermissionUsingPUT
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
        - in: body
          name: aclClientPermissionVO
          description: aclClientPermissionVO
          required: true
          schema:
            $ref: '#/definitions/AclClientPermissionVO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountPermissionVO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Account
      summary: Delete an account permission
      description: Delete an account permission
      operationId: deleteAccountPermissionUsingDELETE
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: account_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountPermissionVO'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /account_status:
    get:
      tags:
        - Utils
      summary: List all account statuses
      description: Get the account status history information for all accounts.
      operationId: getAccountStatusAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AccountStatus»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create an account status
      description: Create an account status record for an account.
      operationId: createAccountStatusUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: accountStatusRequest
          description: accountStatusRequest
          required: true
          schema:
            $ref: '#/definitions/AccountStatus'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account_status/{account_status_id}':
    get:
      tags:
        - Utils
      summary: Retrieve an account status
      description: Retrieve the information for a specific account status record for an account.
      operationId: getAccountStatusUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_status_id
          in: path
          description: UUID account_status_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update an account status
      description: Update an account status record for an account.
      operationId: updateAccountStatusUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: account_status
          description: account_status
          required: true
          schema:
            $ref: '#/definitions/AccountStatus'
        - name: account_status_id
          in: path
          description: UUID account_status_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete an account status
      description: Permanently delete an account status record from an account’s history.
      operationId: deleteAccountStatusUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: account_status_id
          in: path
          description: UUID account_status_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /account_type:
    get:
      tags:
        - Account
      summary: List all account types
      description: List all account types defined for your firm.
      operationId: getAccountTypeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AccountType»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Account
      summary: Create an account type
      description: Create a new account type for your firm.
      operationId: createAccountTypeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: accountTypeRequest
          description: accountTypeRequest
          required: true
          schema:
            $ref: '#/definitions/AccountType'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountType'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/account_type/{account_type_id}':
    get:
      tags:
        - Account
      summary: Get an Account Type
      description: Get an account types defined for your firm.
      operationId: getAccountTypeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: accountTypeId
          in: path
          description: UUID account_type_id
          required: true
          type: string
          format: uuid
          x-example: 50d76212-0fcd-4d36-8633-e4a52cbcb79f
        - name: account_type_id
          in: path
          description: account_type_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountType'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Account
      summary: Update an account type
      description: Update the information for a possible account type defined for your firm.
      operationId: updateAccountTypeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: account_type
          description: account_type
          required: true
          schema:
            $ref: '#/definitions/AccountType'
        - name: account_type_id
          in: path
          description: UUID account_type_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AccountType'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Account
      summary: Delete an account type
      description: Permanently delete a possible account type defined for your firm.
      operationId: deleteAccountTypeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: accountTypeId
          in: path
          description: UUID account_type_id
          required: true
          type: string
          format: uuid
          x-example: 50d76212-0fcd-4d36-8633-e4a52cbcb79f
        - name: account_type_id
          in: path
          description: account_type_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /accounting:
    get:
      tags:
        - Accounting
      summary: List all accounting
      description: Get information for all accounting for all clients defined for your firm.
      operationId: getAccountingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Accounting»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Accounting
      summary: Create an accounting
      description: Store stats pulled from accounting vendors.
      operationId: createAccountingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: accounting
          description: accounting
          required: true
          schema:
            $ref: '#/definitions/Accounting'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Accounting'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/accounting/{accounting_id}':
    get:
      tags:
        - Accounting
      summary: Retrieve an accounting
      description: Retrieve the information for a specific accounting associated with a client.
      operationId: getAccountingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: accounting_id
          in: path
          description: UUID accounting_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Accounting'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Accounting
      summary: Update an accounting
      description: Update the information for an accounting.
      operationId: updateAccountingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: accounting
          description: accounting
          required: true
          schema:
            $ref: '#/definitions/Accounting'
        - name: accounting_id
          in: path
          description: UUID accounting_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Accounting'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Accounting
      summary: Delete an accounting
      description: Permanently delete an accounting.
      operationId: deleteAccountingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: accounting_id
          in: path
          description: UUID accounting_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /aggregation_account:
    get:
      tags:
        - AggregationAccount
      summary: List all aggregation accounts
      description: Get information for all aggregation accounts for all clients defined for your firm.
      operationId: getAggregationAccountAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AggregationAccount»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - AggregationAccount
      summary: Create an aggregation account
      description: Create an aggregation account under a client.
      operationId: createAggregationAccountUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccount
          description: aggregationAccount
          required: true
          schema:
            $ref: '#/definitions/AggregationAccount'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccount'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/aggregation_account/{aggregation_account_id}':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account
      description: Retrieve the information for a specific aggregation account associated with a client.
      operationId: getAggregationAccountUsingGet
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_id
          in: path
          description: UUID aggregation_account_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update an aggregation account
      description: Update the information for an aggregation account.
      operationId: updateAggregationAccountUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregation_account
          description: aggregation_account
          required: true
          schema:
            $ref: '#/definitions/AggregationAccount'
        - name: aggregation_account_id
          in: path
          description: UUID aggregation_account_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccount'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - AggregationAccount
      summary: Delete an aggregation account
      description: Permanently delete an aggregation account under a client.
      operationId: deleteAggregationAccountUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_id
          in: path
          description: UUID aggregation_account_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/aggregation_account/{aggregation_account_id}/aggregate_data':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account aggregate data
      description: Retrieve the information for a specific aggregation account associated with a client.
      operationId: getAggregationAccountAggregateDataUsingGet
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_id
          in: path
          description: UUID aggregation_account_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountAggregateDataVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /aggregation_account_balance:
    get:
      tags:
        - AggregationAccount
      summary: List all aggregation account balances
      description: Get all of the balance records for all aggregation accounts defined for your firm.
      operationId: getAggregationAccountBalanceAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AggregationAccountBalance»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - AggregationAccount
      summary: Create an aggregation account balance
      description: Create a balance record under an aggregation account.
      operationId: createAggregationAccountBalanceUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountBalance
          description: aggregationAccountBalance
          required: true
          schema:
            $ref: '#/definitions/AggregationAccountBalance'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountBalance'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/aggregation_account_balance/{aggregation_account_balance_id}':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account balance
      description: Retrieve the information for a specific balance record for an aggregation account.
      operationId: getAggregationAccountBalanceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_balance_id
          in: path
          description: UUID aggregation_account_balance_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountBalance'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update an aggregation account balance
      description: Update a balance record for an aggregation account.
      operationId: updateAggregationAccountBalanceUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregation_account_balance
          description: aggregation_account_balance
          required: true
          schema:
            $ref: '#/definitions/AggregationAccountBalance'
        - name: aggregation_account_balance_id
          in: path
          description: UUID aggregation_account_balance_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountBalance'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - AggregationAccount
      summary: Delete an aggregation account balance
      description: Permanently delete a balance record for an aggregation account.
      operationId: deleteAggregationAccountBalanceUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_balance_id
          in: path
          description: UUID aggregation_account_balance_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /aggregation_account_holding:
    get:
      tags:
        - AggregationAccount
      summary: List all aggregation account holdings
      description: Get all of the holding records for all aggregation accounts defined for your firm.
      operationId: getAggregationAccountHoldingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AggregationAccountHolding»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - AggregationAccount
      summary: Create an aggregation account holding
      description: Create a holding record under an aggregation account.
      operationId: createAggregationAccountHoldingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountHolding
          description: aggregationAccountHolding
          required: true
          schema:
            $ref: '#/definitions/AggregationAccountHolding'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/aggregation_account_holding/{aggregation_account_holding_id}':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account holding
      description: Retrieve the information for a specific holding record for an aggregation account.
      operationId: getAggregationAccountHoldingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_holding_id
          in: path
          description: UUID aggregation_account_holding_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountHolding'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update an aggregation account holding
      description: Update a holding record for an aggregation account.
      operationId: updateAggregationAccountHoldingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregation_account_holding
          description: aggregation_account_holding
          required: true
          schema:
            $ref: '#/definitions/AggregationAccountHolding'
        - name: aggregation_account_holding_id
          in: path
          description: UUID aggregation_account_holding_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - AggregationAccount
      summary: Delete an aggregation account holding
      description: Permanently delete a holding record for an aggregation account.
      operationId: deleteAggregationAccountHoldingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_holding_id
          in: path
          description: UUID aggregation_account_holding_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /aggregation_account_transaction:
    get:
      tags:
        - AggregationAccount
      summary: List all aggregation account transactions
      description: Get all of the transaction records for all aggregation accounts defined for your firm.
      operationId: getAggregationAccountTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AggregationAccountTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - AggregationAccount
      summary: Create an aggregation account transaction
      description: Create a transaction record under an aggregation account.
      operationId: createAggregationAccountTransactionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountTransaction
          description: aggregationAccountTransaction
          required: true
          schema:
            $ref: '#/definitions/AggregationAccountTransaction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/aggregation_account_transaction/{aggregation_account_transaction_id}':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account transaction
      description: Retrieve the information for a specific transaction record for an aggregation account.
      operationId: getAggregationAccountTransactionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_transaction_id
          in: path
          description: UUID aggregation_account_transaction_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountTransaction'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update an aggregation account transaction
      description: Update a transaction record for an aggregation account.
      operationId: updateAggregationAccountTransactionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregation_account_transaction
          description: aggregation_account_transaction
          required: true
          schema:
            $ref: '#/definitions/AggregationAccountTransaction'
        - name: aggregation_account_transaction_id
          in: path
          description: UUID aggregation_account_transaction_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - AggregationAccount
      summary: Delete an aggregation account transaction
      description: Permanently delete a transaction record for an aggregation account.
      operationId: deleteAggregationAccountTransactionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: aggregation_account_transaction_id
          in: path
          description: UUID aggregation_account_transaction_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccountTransaction'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /allocation:
    get:
      tags:
        - Allocation
      summary: List all allocations
      description: Get details for all allocations defined for your firm.
      operationId: getAllocationAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Allocation»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Allocation
      summary: Create an allocation
      description: Create a new allocation for your firm.
      operationId: createAllocationUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: allocationRequest
          description: allocationRequest
          required: true
          schema:
            $ref: '#/definitions/Allocation'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Allocation'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/allocation/{allocation_id}':
    get:
      tags:
        - Allocation
      summary: Retrieve an allocation
      description: Retrieve the information for an allocation defined by your firm.
      operationId: getAllocationUsingGet
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Allocation'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Allocation
      summary: Update an allocation
      description: Update an allocation defined by your firm.
      operationId: updateAllocationUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: allocation
          description: allocation
          required: true
          schema:
            $ref: '#/definitions/Allocation'
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Allocation'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Allocation
      summary: Delete an allocation
      description: Permanently delete an allocation defined by your firm.
      operationId: deleteAllocationUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/allocation/{allocation_id}/aggregate_data':
    get:
      tags:
        - Allocation
      summary: List all Allocation aggregated data overview
      operationId: getAllocationAggregatedDataUsingGET
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: Allocation Id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AllocationAggregatedVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/allocation/{allocation_id}/asset_size':
    get:
      tags:
        - Allocation
      summary: List all allocation asset sizes
      description: Get a list of asset sizes by date for a specific allocation.
      operationId: getAssetsizeUsingGET
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: get_latest
          in: query
          description: get_latest
          required: false
          type: boolean
        - name: is_current_weight
          in: query
          description: is_current_weight
          required: false
          type: boolean
          default: true
        - name: sort_type
          in: query
          description: 'D (Daily), Q (quarterly), M (Monthly), Y (Annually) '
          required: false
          type: string
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/allocation/{allocation_id}/holding':
    get:
      tags:
        - Allocation
      summary: List all allocation holdings
      description: 'Get the information for all securities assigned to a specific allocation. '
      operationId: getAllHoldingsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
        - name: end_date
          in: query
          description: end_date
          required: false
          type: string
          default: 'null'
          format: date-time
        - name: start_date
          in: query
          description: start_date
          required: false
          type: string
          default: 'null'
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ModelHoldingAgg'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/allocation/{allocation_id}/performance':
    get:
      tags:
        - Performance
      summary: Allocation Performance
      description: Get information on the performance of an allocation using TWR (Time Weighted Return). You must provide the unique allocation_id.
      operationId: getAllocationPerformanceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: active_premium_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: allocation_id
          in: path
          description: Allocation Id -/allocation
          required: true
          type: string
          format: uuid
        - name: annualized_return_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: benchmark_id
          in: query
          description: Tenant Benchmark Id -/benchmark
          required: false
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: hist_factor
          in: query
          description: 'Histogram factor- (statId: 39, default: 5)'
          required: false
          type: number
          format: double
        - name: is_current_weight
          in: query
          description: is_current_weight
          required: false
          type: boolean
          default: true
        - name: mar_down_side_deviation
          in: query
          description: 'minimum acceptable return for downside deviation - (statId: 58, default: 0) '
          required: false
          type: number
          format: double
        - name: max_percentile_monte_carlo
          in: query
          description: 'max percentile for monte carlo, i.entity. 80 - (statId: 62, default: 95)'
          required: false
          type: number
          format: double
        - name: mean_percentile_monte_carlo
          in: query
          description: 'mean percentile for monte carlo i.entity. 50- (statId: 62, default: 50)'
          required: false
          type: number
          format: double
        - name: min_percentile_monte_carlo
          in: query
          description: 'min percentile for monte carlo i.entity. 20 - (statId: 62, default: 5)'
          required: false
          type: number
          format: double
        - name: moving_average_n_day
          in: query
          description: 'number of days for moving average n-day - (statId: 18, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_day_returns
          in: query
          description: 'number of days for Rolling n-day returns - (statId: 2, default: 7)  '
          required: false
          type: integer
          format: int32
        - name: n_path_monte_carlo
          in: query
          description: 'number of points for a simulation- (statId: 62, default: 100)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_max_drawdown
          in: query
          description: 'number of days for Rolling n-day max drawdown- (statId: 46, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_volatility
          in: query
          description: 'number of days for Rolling n-day volatility- (statId: 34, default: 7)'
          required: false
          type: integer
          format: int32
        - name: num_sim_monte_carlo
          in: query
          description: 'number of simulations - (statId: 62, default: 1000) '
          required: false
          type: integer
          format: int32
        - name: period_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () -Carries out stats on either daily, monthly, annually or quarterly dates (default: ''D'')'
          required: false
          type: string
        - name: risk_free_alpha
          in: query
          description: 'risk free val alpha - (statId: 52, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_sharpe
          in: query
          description: 'risk free val sharpe- (statId: 49, default: 0) '
          required: false
          type: number
          format: double
        - name: risk_free_sortino
          in: query
          description: 'risk free val sortino - (statId: 56, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_treynor
          in: query
          description: 'risk free val treynor- (statId: 51, default: 0) '
          required: false
          type: number
          format: double
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
        - name: stat
          in: query
          description: A stat type found under the Statistics banner
          required: false
          type: string
        - name: var_conf_interval
          in: query
          description: 'VaR Confidence Interval ( alpha ) i.entity 99, 95, etc - (statId: 40, default: 95)'
          required: false
          type: number
          format: double
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/allocation/{allocation_id}/transaction':
    get:
      tags:
        - Allocation
      summary: List all allocation transactions
      description: Get the information for all transactions made under an allocation to achieve the composition of the allocation.
      operationId: getAllTransactionsUsingGET
      produces:
        - '*/*'
      parameters:
        - name: allocation_id
          in: path
          description: UUID allocation_id
          required: true
          type: string
          format: uuid
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: end_date
          in: query
          description: end_date
          required: false
          type: string
          default: 'null'
          format: date-time
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start_date
          required: false
          type: string
          default: 'null'
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ModelTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /allocation_composition:
    get:
      tags:
        - Allocation
      summary: List all allocations compositions
      description: Get the allocation composition for all allocations.
      operationId: getAllocationCompositionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AllocationComposition»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Allocation
      summary: Create an allocation composition
      description: Create a new allocation composition record for an allocation.
      operationId: createAllocationCompositionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: allocRequest
          description: allocRequest
          required: true
          schema:
            $ref: '#/definitions/AllocationComposition'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AllocationComposition'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/allocation_composition/{allocation_composition_id}':
    get:
      tags:
        - Allocation
      summary: Retrieve an allocation composition
      description: Retrieve the information of an allocation composition record for an allocation.
      operationId: getAllocationCompositionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: allocation_composition_id
          in: path
          description: UUID allocation_composition_id
          required: true
          type: string
          format: uuid
          x-example: 2b74355b-00eb-460b-a504-822248e50621
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AllocationComposition'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Allocation
      summary: Update an allocation composition
      description: Update the information of an allocation composition record for an allocation.
      operationId: updateAllocationCompositionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: allocation_composition
          description: aggregation_composition
          required: true
          schema:
            $ref: '#/definitions/AllocationComposition'
        - name: allocation_composition_id
          in: path
          description: UUID allocation_composition_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AllocationComposition'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Allocation
      summary: Delete an allocation composition
      description: Permanently delete an allocation composition record for an allocation.
      operationId: deleteAllocationCompositionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: allocation_composition_id
          in: path
          description: UUID allocation_composition_id
          required: true
          type: string
          format: uuid
          x-example: 2b74355b-00eb-460b-a504-822248e50621
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /answer:
    get:
      tags:
        - Questionnaire
      summary: List all Answers
      description: Get information for all Answers
      operationId: getAnswerAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: label
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Answer»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Questionnaire
      summary: Create an answer
      description: Create a new answer for question.
      operationId: createAnswerUsingPost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: answer
          description: answer
          required: true
          schema:
            $ref: '#/definitions/Answer'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Answer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/answer/{answer_id}':
    get:
      tags:
        - Questionnaire
      summary: Retrieve an answer
      description: Retrieve the information for an answer for question
      operationId: getAnswerUsingGet
      produces:
        - application/json
      parameters:
        - name: answer_id
          in: path
          description: UUID answer_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Answer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Questionnaire
      summary: Update an answer
      description: Update a answer for question.
      operationId: updateAnswerUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: answer
          description: answer
          required: true
          schema:
            $ref: '#/definitions/Answer'
        - name: answer_id
          in: path
          description: UUID answer_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Answer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Questionnaire
      summary: Delete an answer
      description: Delete an answer for the question
      operationId: deleteAnswerUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: answer_id
          in: path
          description: UUID answer_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /application:
    get:
      tags:
        - Application
      summary: List all Application
      description: Get details for all Application.
      operationId: getApplicationAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Application»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Application
      summary: Create an application
      description: Create an application
      operationId: createApplicationUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: application
          description: application
          required: true
          schema:
            $ref: '#/definitions/Application'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Application'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/application/{application_id}':
    get:
      tags:
        - Application
      summary: Retrieve an Application
      description: Retrieve the information for an Application.
      operationId: getApplicationUsingGet
      produces:
        - '*/*'
      parameters:
        - name: application_id
          in: path
          description: UUID application_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Application'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Application
      summary: Update an Application
      description: Update the information for an Application
      operationId: updateApplicationUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: application
          description: application
          required: true
          schema:
            $ref: '#/definitions/Application'
        - name: application_id
          in: path
          description: UUID application_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Application'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Application
      summary: Delete an Application
      description: Permanently delete an Application.
      operationId: deleteApplicationUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: application_id
          in: path
          description: UUID application_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /audit_log:
    get:
      tags:
        - AuditLog
      summary: List all audit log
      description: Get details for all audit log.
      operationId: getAuditLogAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«AuditLog»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - AuditLog
      summary: Create a audit log
      description: Create a new audit log.
      operationId: createAuditLogUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: auditLog
          description: auditLog
          required: true
          schema:
            $ref: '#/definitions/AuditLog'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuditLog'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/audit_log/{audit_log_id}':
    get:
      tags:
        - AuditLog
      summary: Retrieve a audit log
      description: Retrieve the information for a audit log.
      operationId: getAuditLogUsingGet
      produces:
        - '*/*'
      parameters:
        - name: audit_log_id
          in: path
          description: UUID audit_log_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AuditLog'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /bank_link:
    get:
      tags:
        - Funding
      summary: List all bank links
      description: Get all bank links defined for all clients defined for your firm.
      operationId: getBankLinkAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«BankLink»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Funding
      summary: Create a bank link
      description: Create a new bank link for an account.
      operationId: createBankLinkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: bankLinkInfoRequest
          description: bankLinkInfoRequest
          required: true
          schema:
            $ref: '#/definitions/BankLink'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BankLink'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/bank_link/{bank_link_id}':
    get:
      tags:
        - Funding
      summary: Retrieve a bank link
      description: Retrieve the information for a bank link for an account.
      operationId: getBankLinkUsingGet
      produces:
        - '*/*'
      parameters:
        - name: bank_link_id
          in: path
          description: UUID bank_link_id
          required: true
          type: string
          format: uuid
          x-example: 4ff21db3-97ab-4bbd-9885-be6aec522c44
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BankLink'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Funding
      summary: Update a bank link
      description: Update the information for a bank link for an account.
      operationId: updateBankLinkUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: bank_link
          description: bank_link
          required: true
          schema:
            $ref: '#/definitions/BankLink'
        - name: bank_link_id
          in: path
          description: UUID bank_link_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BankLink'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Funding
      summary: Delete a bank link
      description: Permanently delete a bank link defined for an account.
      operationId: deleteBankLinkUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: bank_link_id
          in: path
          description: UUID bank_link_id
          required: true
          type: string
          format: uuid
          x-example: 4ff21db3-97ab-4bbd-9885-be6aec522c44
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /benchmark:
    get:
      tags:
        - Benchmark
      summary: List all benchmarks
      description: Get details for all benchmarks defined for your firm.
      operationId: getBenchmarkAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Benchmark»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Benchmark
      summary: Create a benchmark
      description: Create a new benchmark for your firm.
      operationId: createBenchmarkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: benchmark
          description: benchmark
          required: true
          schema:
            $ref: '#/definitions/Benchmark'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Benchmark'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/benchmark/{benchmark_id}':
    get:
      tags:
        - Benchmark
      summary: Retrieve a benchmark
      description: Retrieve the information for a benchmark.
      operationId: getBenchmarkUsingGet
      produces:
        - '*/*'
      parameters:
        - name: benchmark_id
          in: path
          description: UUID benchmark_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Benchmark'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Benchmark
      summary: Update a benchmark
      description: Updated the information for a benchmark.
      operationId: updateBenchmarkUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: benchmark
          description: benchmark
          required: true
          schema:
            $ref: '#/definitions/Benchmark'
        - name: benchmark_id
          in: path
          description: UUID benchmark_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Benchmark'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Benchmark
      summary: Delete a benchmark
      description: Permanently delete a benchmark.
      operationId: deleteBenchmarkUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: benchmark_id
          in: path
          description: UUID benchmark_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/benchmark/{benchmark_id}/asset_size':
    get:
      tags:
        - Benchmark
      summary: List all benchmark asset sizes
      description: Get a list of asset sizes by date for a benchmark.
      operationId: getBenchmarkAssetSizeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: benchmark_id
          in: path
          description: benchmark_id
          required: true
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end_date
          required: false
          type: string
          default: 'null'
          format: date-time
        - name: sort_type
          in: query
          description: sort_type
          required: false
          type: string
        - name: start_date
          in: query
          description: start_date
          required: false
          type: string
          default: 'null'
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/benchmark/{benchmark_id}/performance':
    get:
      tags:
        - Performance
      summary: Benchmark Performance
      description: Get information on the performance of a benchmark using TWR (Time Weighted Return). You must provide the unique benchmark_id.
      operationId: getBenchmarkPerformanceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: active_premium_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: annualized_return_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: benchmark_id
          in: path
          description: Benchmark Id - /benchmark
          required: true
          type: string
          format: uuid
        - name: comparison_benchmark_id
          in: query
          description: comparison_benchmark_id
          required: false
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: hist_factor
          in: query
          description: 'Histogram factor- (statId: 39, default: 5)'
          required: false
          type: number
          format: double
        - name: mar_down_side_deviation
          in: query
          description: 'minimum acceptable return for downside deviation - (statId: 58, default: 0) '
          required: false
          type: number
          format: double
        - name: max_percentile_monte_carlo
          in: query
          description: 'max percentile for monte carlo, i.entity. 80 - (statId: 62, default: 95)'
          required: false
          type: number
          format: double
        - name: mean_percentile_monte_carlo
          in: query
          description: 'mean percentile for monte carlo i.entity. 50- (statId: 62, default: 50)'
          required: false
          type: number
          format: double
        - name: min_percentile_monte_carlo
          in: query
          description: 'min percentile for monte carlo i.entity. 20 - (statId: 62, default: 5)'
          required: false
          type: number
          format: double
        - name: moving_average_n_day
          in: query
          description: 'number of days for moving average n-day - (statId: 18, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_day_returns
          in: query
          description: 'number of days for Rolling n-day returns - (statId: 2, default: 7)  '
          required: false
          type: integer
          format: int32
        - name: n_path_monte_carlo
          in: query
          description: 'number of points for a simulation- (statId: 62, default: 100)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_max_drawdown
          in: query
          description: 'number of days for Rolling n-day max drawdown- (statId: 46, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_volatility
          in: query
          description: 'number of days for Rolling n-day volatility- (statId: 34, default: 7)'
          required: false
          type: integer
          format: int32
        - name: num_sim_monte_carlo
          in: query
          description: 'number of simulations - (statId: 62, default: 1000) '
          required: false
          type: integer
          format: int32
        - name: period_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () -Carries out stats on either daily, monthly, annually or quarterly dates (default: ''D'')'
          required: false
          type: string
        - name: risk_free_alpha
          in: query
          description: 'risk free val alpha - (statId: 52, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_sharpe
          in: query
          description: 'risk free val sharpe- (statId: 49, default: 0) '
          required: false
          type: number
          format: double
        - name: risk_free_sortino
          in: query
          description: 'risk free val sortino - (statId: 56, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_treynor
          in: query
          description: 'risk free val treynor- (statId: 51, default: 0) '
          required: false
          type: number
          format: double
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
        - name: stat
          in: query
          description: Stat type - /statistics endpoint
          required: false
          type: string
        - name: var_conf_interval
          in: query
          description: 'VaR Confidence Interval ( alpha ) i.entity 99, 95, etc - (statId: 40, default: 95)'
          required: false
          type: number
          format: double
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /budget:
    get:
      tags:
        - Budget
      summary: List all budget requests
      description: Get the information for all budget requests.
      operationId: getBudgetAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Budget»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Budget
      summary: Create a budget request
      description: Create a new budget request.
      operationId: createBudgetUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: budgetRequest
          description: budgetRequest
          required: true
          schema:
            $ref: '#/definitions/Budget'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Budget'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/budget/{budget_id}':
    get:
      tags:
        - Budget
      summary: Retrieve a budget request
      description: Retrieve the information for a budget request.
      operationId: getBudgetUsingGet
      produces:
        - '*/*'
      parameters:
        - name: budget_id
          in: path
          description: UUID budget_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Budget'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Budget
      summary: Update a budget request
      description: Update the information for a budget request.
      operationId: updateBudgetUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: budget
          description: budget
          required: true
          schema:
            $ref: '#/definitions/Budget'
        - name: budget_id
          in: path
          description: UUID budget_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Budget'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Budget
      summary: Delete a budget request
      description: Permanently delete a budget request.
      operationId: deleteBudgetUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: budget_id
          in: path
          description: UUID budget_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/bulk/status/{id}':
    get:
      tags:
        - Bulk
      summary: Status of bulk transaction
      description: Get the status of bulk transaction.
      operationId: getBulkStatusUsingGet
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: UUID Bulk Transaction Id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BulkTransactionVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/bulk/{entity_uri}':
    post:
      tags:
        - Bulk
      summary: Create a bulk data
      description: Create a new bulk data for your firm.
      operationId: createBulkUsingPost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          description: data
          required: true
          schema:
            $ref: '#/definitions/JsonNode'
        - name: entity_uri
          in: path
          description: UUID entity_uri
          required: true
          type: string
          format: uuid
          x-example: model
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BulkTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Bulk
      summary: Update a bulk data
      description: Update a bulk data for your firm.
      operationId: updateBulkUsingPut
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          description: data
          required: true
          schema:
            $ref: '#/definitions/JsonNode'
        - name: entity_uri
          in: path
          description: UUID entity_uri
          required: true
          type: string
          format: uuid
          x-example: model
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BulkTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Bulk
      summary: Delete a bulk data
      description: Delete a bulk data for your firm.
      operationId: deleteBulkUsingDelete
      produces:
        - application/json
      parameters:
        - in: body
          name: data
          description: data
          required: true
          schema:
            $ref: '#/definitions/JsonNode'
        - name: entity_uri
          in: path
          description: UUID entity_uri
          required: true
          type: string
          format: uuid
          x-example: model
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/BulkTransaction'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /bulk_aggregation_account:
    post:
      tags:
        - AggregationAccount
      summary: Create a bulk aggregation account
      description: Create a bulk aggregation account under a client.
      operationId: createAggregationAccountBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountList
          description: aggregationAccountList
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccount'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccount'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update a bulk aggregation account
      description: Update a bulk aggregation account under a client.
      operationId: updateAggregationAccountBulkUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountList
          description: aggregationAccountList
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccount'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationAccount'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /bulk_aggregation_account_balance:
    post:
      tags:
        - AggregationAccount
      summary: Create a bulk aggregation account balance
      description: Create a balance records under an aggregation accounts.
      operationId: createAggregationAccountBalanceBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountBalance
          description: aggregationAccountBalance
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountBalance'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountBalance'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /bulk_aggregation_account_holding:
    post:
      tags:
        - AggregationAccount
      summary: Create a bulk aggregation account holding
      description: Create a bulk aggregation account holding.
      operationId: createAggregationAccountHoldingBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationTransaction
          description: aggregationTransaction
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountHolding'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - AggregationAccount
      summary: Update an bulk aggregation account holding
      description: Update a bulk holding record for an aggregation account.
      operationId: updateAggregationAccountHoldingBulkUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountHolding
          description: aggregationAccountHolding
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountHolding'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /bulk_aggregation_account_transaction:
    post:
      tags:
        - AggregationAccount
      summary: Create a bulk aggregation account transaction
      description: Create a bulk transaction record under an aggregation account.
      operationId: createAggregationAccountTransactionBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: aggregationAccountTransactions
          description: aggregationAccountTransactions
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountTransaction'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AggregationAccountTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /bulk_bank_link:
    put:
      tags:
        - Funding
      summary: Update list of bank link
      description: Update bank link list for an account.
      operationId: updateBankLinkBulkUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: bankLinkList
          description: bankLinkList
          required: true
          schema:
            type: array
            items:
              $ref: '#/definitions/BankLink'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/BankLink'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /campaign:
    get:
      tags:
        - Marketing
      summary: List all campaigns
      description: Get details for all campaigns defined for your firm.
      operationId: getCampaignAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Campaign»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Marketing
      summary: Create a campaign
      description: Create a new campaign for your firm.
      operationId: createCampaignUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: campaignRequest
          description: campaignRequest
          required: true
          schema:
            $ref: '#/definitions/Campaign'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Campaign'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/campaign/{campaign_id}':
    get:
      tags:
        - Marketing
      summary: Retrieve a campaign
      description: Retrieve the information for a campaign.
      operationId: getCampaignUsingGet
      produces:
        - '*/*'
      parameters:
        - name: campaign_id
          in: path
          description: Campaign Id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Campaign'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Marketing
      summary: Update a campaign
      description: Updated the information for a campaign
      operationId: updateCampaignUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: campaign
          description: campaign
          required: true
          schema:
            $ref: '#/definitions/Campaign'
        - name: campaign_id
          in: path
          description: UUID campaign_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Campaign'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Marketing
      summary: Delete a campaign
      description: Permanently delete a campaign
      operationId: deleteCampaignUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: campaign_id
          in: path
          description: Campaign Id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /campaign_data:
    get:
      tags:
        - Marketing
      summary: List all campaign data
      description: Get details for all campaign data defined for your firm.
      operationId: getCampaignDataAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«CampaignData»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Marketing
      summary: Create a campaign data record
      description: Create a new  campaign data record for your firm.
      operationId: createCampaignDataUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: campaignDataRequest
          description: campaignDataRequest
          required: true
          schema:
            $ref: '#/definitions/CampaignData'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignData'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/campaign_data/{campaign_data_id}':
    get:
      tags:
        - Marketing
      summary: Retrieve a campaign data record
      description: Retrieve the information for a campaign data record
      operationId: getCampaignDataUsingGet
      produces:
        - '*/*'
      parameters:
        - name: campaign_data_id
          in: path
          description: UUID campaign_data_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Marketing
      summary: Update a campaign data record
      description: Updated the information for a campaign data record
      operationId: updateCampaignDataUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: campaign_data
          description: campaign_data
          required: true
          schema:
            $ref: '#/definitions/CampaignPlan'
        - name: campaign_data_id
          in: path
          description: UUID campaign_data_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignData'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Marketing
      summary: Delete a campaign data record
      description: Permanently delete a campaign data record
      operationId: deleteCampaignDataUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: campaign_data_id
          in: path
          description: UUID campaign_data_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /campaign_plan:
    get:
      tags:
        - Marketing
      summary: List all campaign plans
      description: Get details for all campaign plans defined for your firm.
      operationId: getCampaignPlanAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«CampaignPlan»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Marketing
      summary: Create a campaign plan
      description: Create a new campaign plan for your firm.
      operationId: createCampaignPlanUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: campaignPlanRequest
          description: campaignPlanRequest
          required: true
          schema:
            $ref: '#/definitions/CampaignPlan'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignPlan'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/campaign_plan/{campaign_plan_id}':
    get:
      tags:
        - Marketing
      summary: Retrieve a campaign plan
      description: Retrieve the information for a campaign plan
      operationId: getCampaignPlanUsingGet
      produces:
        - '*/*'
      parameters:
        - name: campaign_plan_id
          in: path
          description: UUID campaign_plan_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignPlan'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Marketing
      summary: Update a campaign plan
      description: Updated the information for a campaign plan
      operationId: updateCampaignPlanUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: campaign_plan
          description: campaign_plan
          required: true
          schema:
            $ref: '#/definitions/CampaignPlan'
        - name: campaign_plan_id
          in: path
          description: UUID campaign_plan_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CampaignPlan'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Marketing
      summary: Delete a campaign plan
      description: Permanently delete a campaign plan
      operationId: deleteCampaignPlanUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: campaign_plan_id
          in: path
          description: UUID campaign_plan_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /card:
    get:
      tags:
        - Card
      summary: List all card requests
      description: Get the information for all card requests.
      operationId: getCardAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Card»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Card
      summary: Create a card request
      description: Create a new card request.
      operationId: createCardUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: Authorization
          in: header
          description: Authorization
          required: false
          type: string
        - in: body
          name: cardRequest
          description: cardRequest
          required: true
          schema:
            $ref: '#/definitions/Card'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Card'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/card/{card_id}':
    get:
      tags:
        - Card
      summary: Retrieve a card request
      description: Retrieve the information for a card request.
      operationId: getCardUsingGet
      produces:
        - '*/*'
      parameters:
        - name: card_id
          in: path
          description: UUID card_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Card'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Card
      summary: Update a card request
      description: Update the information for a card request.
      operationId: updateCardUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: card
          description: card
          required: true
          schema:
            $ref: '#/definitions/Card'
        - name: card_id
          in: path
          description: UUID card_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Card'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Card
      summary: Delete a card request
      description: Permanently delete a card request.
      operationId: deleteCardUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: card_id
          in: path
          description: UUID card_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /card_program:
    get:
      tags:
        - Card
      summary: List all cardProgram
      description: Get information for all cardProgram.
      operationId: getCardProgramAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«CardProgram»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Card
      summary: Create a cardProgram request
      description: Create a new cardProgram request.
      operationId: createCardProgramUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: cardProgramRequest
          description: cardProgramRequest
          required: true
          schema:
            $ref: '#/definitions/CardProgram'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CardProgram'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/card_program/{card_program_id}':
    get:
      tags:
        - Card
      summary: Retrieve an cardProgram
      description: Retrieve the information for a specific cardProgram.
      operationId: getCardProgramUsingGet
      produces:
        - '*/*'
      parameters:
        - name: card_program_id
          in: path
          description: UUID card_program_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CardProgram'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Card
      summary: Update an cardProgram
      description: Update the information for an cardProgram.
      operationId: updateCardProgramUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: card_program
          description: card_program
          required: true
          schema:
            $ref: '#/definitions/CardProgram'
        - name: card_program_id
          in: path
          description: UUID card_program_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CardProgram'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Card
      summary: Delete an cardProgram
      description: Permanently delete an cardProgram.
      operationId: deleteCardProgramUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: card_program_id
          in: path
          description: UUID card_program_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /chat:
    get:
      tags:
        - Support
      summary: List all open chats
      description: Get details for all open chat
      operationId: getChatAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ChatInfo»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Support
      summary: Create a Chat
      description: Create a Chat
      operationId: createChatUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: chatInfoRequest
          description: chatInfoRequest
          required: true
          schema:
            $ref: '#/definitions/ChatInfo'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChatInfo'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/chat/{chat_id}':
    get:
      tags:
        - Support
      summary: Retrieve a Chat
      description: Retrieve the information for a Chat
      operationId: getChatUsingGet
      produces:
        - '*/*'
      parameters:
        - name: chat_id
          in: path
          description: UUID chat_info_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChatInfo'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Support
      summary: Update a Chat
      description: Updated the information for a Chat
      operationId: updateChatUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: chat_id
          in: path
          description: UUID chat_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
        - in: body
          name: chat_info
          description: chat_info
          required: true
          schema:
            $ref: '#/definitions/ChatInfo'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ChatInfo'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Support
      summary: Delete a Chat
      description: Permanently delete a Chat
      operationId: deleteChatUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: chat_id
          in: path
          description: UUID chat_info_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /client:
    get:
      tags:
        - Client
      summary: List all clients
      description: Get details for all clients registered with your firm.
      operationId: getClientAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Client»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Client
      summary: Create a client
      description: 'Create a new client, or register a new user, with your firm.'
      operationId: createClientUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: clientRequest
          description: clientRequest
          required: true
          schema:
            $ref: '#/definitions/Client'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Client'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /client/total_clients:
    get:
      tags:
        - Client
      summary: total clients
      operationId: getTotalClientsUsingGet
      produces:
        - '*/*'
      parameters:
        - name: as_of_date
          in: query
          description: as_of_date
          required: false
          type: string
          default: '#{new java.util.Date()}'
          format: date-time
        - name: client_id
          in: query
          description: client_id
          required: false
          type: string
        - name: end_date
          in: query
          description: end_date
          required: false
          type: string
          format: date-time
        - name: show_history
          in: query
          description: show_history
          required: false
          type: boolean
          default: false
        - name: start_date
          in: query
          description: start_date
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientAnalyticsResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client/{client_id}':
    get:
      tags:
        - Client
      summary: Retrieve a client
      description: Retrieve the information for a client registered with your firm.
      operationId: getClientUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Client'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Client
      summary: Update a client
      description: Update the information for a client registered with your firm.
      operationId: updateClientUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: client
          description: client
          required: true
          schema:
            $ref: '#/definitions/Client'
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Client'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Client
      summary: Delete a client
      description: Permanently delete a client registered with your firm. Turns the client's is_active  = 0
      operationId: deleteClientUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/client/{client_id}/account_overview':
    get:
      tags:
        - Client
      summary: List all client Account overview
      operationId: getClientAccountOverviewUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientAccountVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client/{client_id}/advisor_overview':
    get:
      tags:
        - Client
      summary: Advisor overview
      operationId: getClientAdvisorOverviewUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: show_clients
          in: query
          description: show_clients
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AdvisorOverviewVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client/{client_id}/aggregation_account_overview':
    get:
      tags:
        - AggregationAccount
      summary: Retrieve an aggregation account aggregate data
      description: Retrieve the information for a specific aggregation account with aggregate data for a client.
      operationId: getAggregationAccountOverviewUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/AggregationDataForClientParentResponseVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client/{client_id}/asset_size':
    get:
      tags:
        - Client
      summary: List all client asset sizes
      description: Get a list of asset sizes per date for a client.
      operationId: getClientAssetSizeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          default: 'null'
          format: date
        - name: exclude_subledger
          in: query
          description: exclude_subledger
          required: false
          type: boolean
          default: false
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: sort_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in ()'
          required: false
          type: string
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          default: 'null'
          format: date
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AvailableDateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client/{client_id}/goal_overview':
    get:
      tags:
        - Client
      summary: 'Retrieve client''s goal details '
      description: Retrieve client's goal details
      operationId: getClientGoalOverviewUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
        - name: portfolio_goal
          in: query
          description: portfolio_goal
          required: false
          type: boolean
          default: false
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/VClientGoalViewData'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client/{client_id}/holding':
    get:
      tags:
        - Client
      summary: List all client holdings
      description: Get the information for all the securities that are currently being held by a client registered with your firm.
      operationId: getClientHoldingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: end_date
          in: query
          description: end date - yyyy-mm-dd
          required: false
          type: string
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: start_date
          in: query
          description: start date - yyyy-mm-dd
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PortfolioHoldingAgg'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client/{client_id}/order_bulk':
    post:
      tags:
        - Order
      summary: Bulk orders for a client
      description: Aggregates all orders on a given date for a client
      operationId: createClientOrderBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: path
          description: client_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/TokenDateRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client/{client_id}/performance':
    get:
      tags:
        - Performance
      summary: Client Performance
      description: Get information on the performance of a client using IRR (Internal Rate of Return). You must provide the unique client_id.
      operationId: getClientPerformanceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: active_premium_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: annualized_return_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: benchmark_id
          in: query
          description: Client Benchmark or Tenant Benchmark id -/benchmark
          required: false
          type: string
          format: uuid
        - name: client_id
          in: path
          description: Client Id -/client
          required: true
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: hist_factor
          in: query
          description: 'Histogram factor- (statId: 39, default: 5)'
          required: false
          type: number
          format: double
        - name: mar_down_side_deviation
          in: query
          description: 'minimum acceptable return for downside deviation - (statId: 58, default: 0) '
          required: false
          type: number
          format: double
        - name: max_percentile_monte_carlo
          in: query
          description: 'max percentile for monte carlo, i.entity. 80 - (statId: 62, default: 95)'
          required: false
          type: number
          format: double
        - name: mean_percentile_monte_carlo
          in: query
          description: 'mean percentile for monte carlo i.entity. 50- (statId: 62, default: 50)'
          required: false
          type: number
          format: double
        - name: min_percentile_monte_carlo
          in: query
          description: 'min percentile for monte carlo i.entity. 20 - (statId: 62, default: 5)'
          required: false
          type: number
          format: double
        - name: moving_average_n_day
          in: query
          description: 'number of days for moving average n-day - (statId: 18, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_day_returns
          in: query
          description: 'number of days for Rolling n-day returns - (statId: 2, default: 7)  '
          required: false
          type: integer
          format: int32
        - name: n_path_monte_carlo
          in: query
          description: 'number of points for a simulation- (statId: 62, default: 100)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_max_drawdown
          in: query
          description: 'number of days for Rolling n-day max drawdown- (statId: 46, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_volatility
          in: query
          description: 'number of days for Rolling n-day volatility- (statId: 34, default: 7)'
          required: false
          type: integer
          format: int32
        - name: num_sim_monte_carlo
          in: query
          description: 'number of simulations - (statId: 62, default: 1000) '
          required: false
          type: integer
          format: int32
        - name: period_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () -Carries out stats on either daily, monthly, annually or quarterly dates (default: ''D'')'
          required: false
          type: string
        - name: risk_free_alpha
          in: query
          description: 'risk free val alpha - (statId: 52, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_sharpe
          in: query
          description: 'risk free val sharpe- (statId: 49, default: 0) '
          required: false
          type: number
          format: double
        - name: risk_free_sortino
          in: query
          description: 'risk free val sortino - (statId: 56, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_treynor
          in: query
          description: 'risk free val treynor- (statId: 51, default: 0) '
          required: false
          type: number
          format: double
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
        - name: stat
          in: query
          description: A stat type -- /statistics
          required: false
          type: string
        - name: var_conf_interval
          in: query
          description: 'VaR Confidence Interval ( alpha ) i.entity 99, 95, etc - (statId: 40, default: 95)'
          required: false
          type: number
          format: double
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client/{client_id}/transaction':
    get:
      tags:
        - Client
      summary: List all client transactions
      description: Get the information for all transactions under a client registered with your firm.
      operationId: getClientTransactionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: client_id
          in: path
          description: UUID client_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        - name: end_date
          in: query
          description: end_date
          required: false
          type: string
          default: 'null'
          format: date-time
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start_date
          required: false
          type: string
          default: 'null'
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /client_campaign:
    get:
      tags:
        - Marketing
      summary: List all clients/ips under a campaign
      description: Get details for all clients/ips under a campaign
      operationId: getClientCampaignAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ClientCampaignMapping»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Marketing
      summary: Mark a client signing up through a campaign
      description: 'We are adding a campaign association to a clientId or ip.  We create this association because we are trying to measure how affective a campaign is in directing traffic to our website.  '
      operationId: createClientCampaignUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: campaignMappingRequest
          description: campaignMappingRequest
          required: true
          schema:
            $ref: '#/definitions/ClientCampaignMapping'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientCampaignMapping'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client_campaign/{client_campaign_id}':
    get:
      tags:
        - Marketing
      summary: Retrieve a clients/ips pair under a campaign
      description: Retrieve the information for a clients/ips pair under a campaign
      operationId: getClientCampaignUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_campaign_id
          in: path
          description: UUID client_campaign_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientCampaignMapping'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Marketing
      summary: Update a clients/ips pair under a campaign
      description: Updated the information for clients/ips pair under a campaign
      operationId: updateClientCampaignUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: client_campaign_id
          in: path
          description: UUID client_campaign_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
        - in: body
          name: jsonNode
          description: jsonNode
          required: true
          schema:
            $ref: '#/definitions/JsonNode'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientCampaignMapping'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Marketing
      summary: Delete a clients/ips pair under a campaign
      description: Permanently delete a clients/ips pair under a campaign
      operationId: deleteClientCampaignUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: client_campaign_id
          in: path
          description: UUID client_campaign_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /client_hydro:
    get:
      tags:
        - Client
      summary: List all client-hydro relationship
      description: Get information for all client-hydro relationships for all clients defined for your firm.
      operationId: getClientHydroAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ClientHydro»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Client
      summary: Create a client-hydro relationship
      description: Create an client-hydro relationship under a client.
      operationId: createClientHydroUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: clientHydro
          description: clientHydro
          required: true
          schema:
            $ref: '#/definitions/ClientHydro'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientHydro'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client_hydro/{client_hydro_id}':
    get:
      tags:
        - Client
      summary: Retrieve a client-hydro relationship
      description: Retrieve the information for a specific client-hydro relationship.
      operationId: getClientHydroUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_hydro_id
          in: path
          description: UUID client_hydro_id
          required: true
          type: string
          format: uuid
          x-example: d787cf19-d11c-49f2-abf3-f5fec1b101d4
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientHydro'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Client
      summary: Update a client-hydro relationship
      description: Update the information for a client-hydro relationship.
      operationId: updateClientHydroUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: client_hydro
          description: client_hydro
          required: true
          schema:
            $ref: '#/definitions/ClientHydro'
        - name: client_hydro_id
          in: path
          description: UUID client_hydro_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientHydro'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Client
      summary: Delete a client-hydro relationship
      description: Permanently delete a client-hydro relationship for a Hydro ID and a client.
      operationId: deleteClientHydroUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: client_hydro_id
          in: path
          description: UUID client_hydro_id
          required: true
          type: string
          format: uuid
          x-example: d787cf19-d11c-49f2-abf3-f5fec1b101d4
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /client_response:
    get:
      tags:
        - Questionnaire
      summary: List all client responses
      description: Get all the client responses for questions as part of a questionnaire defined by your firm.
      operationId: getClientResponseAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ClientResponse»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Questionnaire
      summary: Create a client response
      description: Create a new client response for a question as part of a questionnaires.
      operationId: createClientResponseUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: clientResponse
          description: clientResponse
          required: true
          schema:
            $ref: '#/definitions/ClientResponse'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client_response/{client_response_id}':
    get:
      tags:
        - Questionnaire
      summary: Retrieve a client response
      description: Retrieve the information for a client response for a client.
      operationId: getClientResponseUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_response_id
          in: path
          description: UUID client_response_id
          required: true
          type: string
          format: uuid
          x-example: 7960419c-c098-4450-8cc5-866b7385230b
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientResponse'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Questionnaire
      summary: Update a client response
      description: Update a client response for a client.
      operationId: updateClientResponseUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: client_response
          description: client_response
          required: true
          schema:
            $ref: '#/definitions/ClientResponse'
        - name: client_response_id
          in: path
          description: UUID client_response_id
          required: true
          type: string
          format: uuid
          x-example: 7960419c-c098-4450-8cc5-866b7385230b
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientResponse'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Questionnaire
      summary: Delete a client response
      description: Permanently delete a client response for a client.
      operationId: deleteClientResponseUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: client_response_id
          in: path
          description: UUID client_response_id
          required: true
          type: string
          format: uuid
          x-example: 7960419c-c098-4450-8cc5-866b7385230b
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /client_status:
    get:
      tags:
        - Client
      summary: List all client statuses
      description: Get the client status history information for all clients.
      operationId: getClientStatusAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ClientStatus»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Client
      summary: Create an client status
      description: Create an client status record for an client.
      operationId: createClientStatusUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: clientStatusRequest
          description: clientStatusRequest
          required: true
          schema:
            $ref: '#/definitions/ClientStatus'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/client_status/{client_status_id}':
    get:
      tags:
        - Client
      summary: Retrieve an client status
      description: Retrieve the information for a specific client status record for an client.
      operationId: getClientStatusUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_status_id
          in: path
          description: UUID client_status_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Client
      summary: Update an client status
      description: Update an client status record for an client.
      operationId: updateClientStatusUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: client_status
          description: client_status
          required: true
          schema:
            $ref: '#/definitions/ClientStatus'
        - name: client_status_id
          in: path
          description: UUID client_status_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ClientStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Client
      summary: Delete an client status
      description: Permanently delete an client status record from an client’s history.
      operationId: deleteClientStatusUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: client_status_id
          in: path
          description: UUID client_status_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /consultation:
    get:
      tags:
        - Support
      summary: List all CIO Consultation
      description: Get details for all CIO Consultation
      operationId: getConsultationAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Consultation»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Support
      summary: Create a CIO Consultation
      description: Create a new CIO Consultation
      operationId: createConsultationUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: cioConsultationRequest
          description: cioConsultationRequest
          required: true
          schema:
            $ref: '#/definitions/Consultation'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Consultation'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/consultation/{consultation_id}':
    get:
      tags:
        - Support
      summary: Retrieve a CIO Consultation
      description: Retrieve the information for a CIO Consultation
      operationId: getConsultationUsingGet
      produces:
        - '*/*'
      parameters:
        - name: consultation_id
          in: path
          description: UUID consultation_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Consultation'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Support
      summary: Update a CIO Consultation
      description: Updated the information CIO Consultation
      operationId: updateConsultationUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: consultation
          description: consultation
          required: true
          schema:
            $ref: '#/definitions/Consultation'
        - name: consultation_id
          in: path
          description: UUID consultation_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Consultation'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Support
      summary: Delete a CIO Consultation
      description: Permanently delete a CIO Consultation
      operationId: deleteConsultationUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: consultation_id
          in: path
          description: UUID consultation_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /customer:
    get:
      tags:
        - Customer
      summary: List all customer
      description: 'List all customer. '
      operationId: getCustomerAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Customer»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Customer
      summary: Create a customer
      description: 'Create a new customer, with your firm.'
      operationId: createCustomerUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: customer
          description: customer
          required: true
          schema:
            $ref: '#/definitions/Customer'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/customer/{customer_id}':
    get:
      tags:
        - Customer
      summary: Retrieve a customer
      description: 'Retrieve a customer. '
      operationId: getCustomerUsingGet
      produces:
        - '*/*'
      parameters:
        - name: customer_id
          in: path
          description: UUID customer_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Customer
      summary: Update a customer
      description: 'Update a customer. '
      operationId: updateCustomerUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: customer
          description: customer
          required: true
          schema:
            $ref: '#/definitions/Customer'
        - name: customer_id
          in: path
          description: UUID customer_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Customer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Customer
      summary: Delete a customer
      description: 'Delete a customer. '
      operationId: deleteCustomerUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: customer_id
          in: path
          description: UUID customer_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /customer_revenue:
    get:
      tags:
        - Customer
      summary: List all customer revenue
      description: 'List all customer revenue. '
      operationId: getCustomerRevenueAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«CustomerRevenue»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Customer
      summary: Create a customer revenue
      description: 'Create a new customer revenue, with your firm.'
      operationId: createCustomerRevenueUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: customerRevenue
          description: customerRevenue
          required: true
          schema:
            $ref: '#/definitions/CustomerRevenue'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerRevenue'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/customer_revenue/{customer_revenue_id}':
    get:
      tags:
        - Customer
      summary: Retrieve a customer revenue
      description: 'Retrieve a customer revenue. '
      operationId: getCustomerRevenueUsingGet
      produces:
        - application/json
      parameters:
        - name: customer_revenue_id
          in: path
          description: UUID customer_revenue_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerRevenue'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Customer
      summary: Update a customer revenue
      description: 'Update a customer revenue. '
      operationId: updateCustomerRevenueUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: customer_revenue
          description: customer_revenue
          required: true
          schema:
            $ref: '#/definitions/CustomerRevenue'
        - name: customer_revenue_id
          in: path
          description: UUID customer_revenue_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CustomerRevenue'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Customer
      summary: Delete a customer revenue
      description: 'Delete a customer revenue. '
      operationId: deleteCustomerRevenueUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: customer_revenue_id
          in: path
          description: UUID customer_revenue_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /decision_tree:
    get:
      tags:
        - DecisionTree
      summary: List all decision tree
      description: Get the information for all decision trees defined for your firm.
      operationId: getDecisionTreeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«DecisionTree»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - DecisionTree
      summary: Create a decision tree
      description: Create a new decision tree for your firm.
      operationId: createDecisionTreeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: decisionTree
          description: decisionTree
          required: true
          schema:
            $ref: '#/definitions/DecisionTree'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DecisionTree'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/decision_tree/{decision_tree_id}':
    get:
      tags:
        - DecisionTree
      summary: Retrieve a decision tree
      description: Retrieve the information for a decision tree.
      operationId: getDecisionTreeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: decision_tree_id
          in: path
          description: UUID decision_tree_id
          required: true
          type: string
          format: uuid
          x-example: 28021071-bece-400b-a0f6-23fb13adfcd3
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DecisionTree'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - DecisionTree
      summary: Update a decision tree
      description: Updated the information for a decision tree.
      operationId: updateDecisionTreeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: decision_tree
          description: decision_tree
          required: true
          schema:
            $ref: '#/definitions/DecisionTree'
        - name: decision_tree_id
          in: path
          description: UUID decision_tree_id
          required: true
          type: string
          format: uuid
          x-example: 28021071-bece-400b-a0f6-23fb13adfcd3
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DecisionTree'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - DecisionTree
      summary: Delete a decision tree
      description: Permanently delete a decision tree.
      operationId: deleteDecisionTreeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: decision_tree_id
          in: path
          description: UUID decision_tree_id
          required: true
          type: string
          format: uuid
          x-example: 28021071-bece-400b-a0f6-23fb13adfcd3
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /decision_tree_result:
    post:
      tags:
        - DecisionTree
      summary: Decision tree result
      description: 'Decision tree result. '
      operationId: createDecisionTreeResultUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: decisionTreeCO
          description: decisionTreeCO
          required: true
          schema:
            $ref: '#/definitions/DecisionTreeCO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DecisionTreeResultVO'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /deposit:
    get:
      tags:
        - Funding
      summary: List all deposit requests
      description: Get the information for all deposit requests for all clients.
      operationId: getDepositAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«DailyDeposit»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Funding
      summary: Create a deposit request
      description: Create a new deposit request for an account.
      operationId: createDepositUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dailyDepositRequest
          description: dailyDepositRequest
          required: true
          schema:
            $ref: '#/definitions/DailyDeposit'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DailyDeposit'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/deposit/{deposit_id}':
    get:
      tags:
        - Funding
      summary: Retrieve a deposit request
      description: Retrieve the information for a deposit request for an account.
      operationId: getDepositUsingGet
      produces:
        - '*/*'
      parameters:
        - name: deposit_id
          in: path
          description: UUID deposit_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DailyDeposit'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Funding
      summary: Update a deposit request
      description: Update the information for a deposit request for an account.
      operationId: updateDepositUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: deposit
          description: deposit
          required: true
          schema:
            $ref: '#/definitions/DailyDeposit'
        - name: deposit_id
          in: path
          description: UUID deposit_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DailyDeposit'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Funding
      summary: Delete a deposit request
      description: Permanently delete a deposit request for an account.
      operationId: deleteDepositUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: deposit_id
          in: path
          description: UUID deposit_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /document:
    get:
      tags:
        - Document
      summary: List all Documents
      description: 'Get the information for all Documents '
      operationId: getDocumentAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Document»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Document
      summary: Create a Document
      description: Create a new Document for your firm.
      operationId: createDocumentUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: documentRequest
          description: documentRequest
          required: true
          schema:
            $ref: '#/definitions/Document'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Document'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/document/{document_id}':
    get:
      tags:
        - Document
      summary: Retrieve a Tenant Document by Document Id
      description: Retrieve the information for a Tenant Document by Document Id
      operationId: getDocumentUsingGet
      produces:
        - '*/*'
      parameters:
        - name: document_id
          in: path
          description: UUID document_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Document'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Document
      summary: Update a Tenant Document
      description: Updated the information for a Tenant Documents
      operationId: updateDocumentUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: document
          description: document
          required: true
          schema:
            $ref: '#/definitions/Document'
        - name: document_id
          in: path
          description: UUID document_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Document'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Document
      summary: Delete a tenant document by Id
      description: Permanently delete a tenant document by Id
      operationId: deleteDocumentUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: document_id
          in: path
          description: UUID document_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /faq:
    get:
      tags:
        - FAQ
      summary: List all FAQ
      description: Get the information for all FAQ
      operationId: getFaqAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Faq»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - FAQ
      summary: Create a FAQ
      description: Create a new FAQ
      operationId: createFaqUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: faqRequest
          description: faqRequest
          required: true
          schema:
            $ref: '#/definitions/Faq'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Faq'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/faq/{faq_id}':
    get:
      tags:
        - FAQ
      summary: Retrieve a FAQ
      description: Retrieve the information for a FAQ
      operationId: getFaqUsingGet
      produces:
        - '*/*'
      parameters:
        - name: faq_id
          in: path
          description: UUID faq_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Faq'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - FAQ
      summary: Update a FAQ
      description: Update the information for a FAQ
      operationId: updateFaqUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: faq
          description: faq
          required: true
          schema:
            $ref: '#/definitions/Faq'
        - name: faq_id
          in: path
          description: UUID faq_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Faq'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - FAQ
      summary: Delete a FAQ
      description: Permanently delete a FAQ
      operationId: deleteFaqUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: faq_id
          in: path
          description: UUID faq_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /feature:
    get:
      tags:
        - Feature
      summary: List all Feature
      description: Get details for all features.
      operationId: getFeatureAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Feature»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Feature
      summary: Create a  Feature
      description: Create a new feature.
      operationId: createFeatureUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: feature
          description: feature
          required: true
          schema:
            $ref: '#/definitions/Feature'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Feature'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/feature/{feature_id}':
    get:
      tags:
        - Feature
      summary: Retrieve a Feature
      description: Retrieve the information for a Feature.
      operationId: getFeatureUsingGet
      produces:
        - '*/*'
      parameters:
        - name: feature_id
          in: path
          description: UUID feature_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Feature'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Feature
      summary: Update a Feature
      description: Update the information for a Feature registered with your firm.
      operationId: updateFeatureUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: feature
          description: feature
          required: true
          schema:
            $ref: '#/definitions/Feature'
        - name: feature_id
          in: path
          description: UUID feature_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Feature'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Feature
      summary: Delete a Feature
      description: Permanently delete a  feature registered with your firm.
      operationId: deleteFeatureUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: feature_id
          in: path
          description: UUID feature_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /feature_track:
    get:
      tags:
        - Feature
      summary: List all Feature track
      description: Get details for all feature track.
      operationId: getFeatureTrackAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«FeatureTrack»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Feature
      summary: Create a Feature Track
      description: Create a new feature track.
      operationId: createFeatureTrackUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: featureTrack
          description: featureTrack
          required: true
          schema:
            $ref: '#/definitions/FeatureTrack'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeatureTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/feature_track/{feature_track_id}':
    get:
      tags:
        - Feature
      summary: Retrieve a Feature track
      description: Retrieve the information for a Feature track.
      operationId: getFeatureTrackUsingGet
      produces:
        - '*/*'
      parameters:
        - name: feature_track_id
          in: path
          description: UUID feature_track_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeatureTrack'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Feature
      summary: Update a Feature Track
      description: Update the information for a Feature track registered with your firm.
      operationId: updateFeatureTrackUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: feature_track
          description: feature_track
          required: true
          schema:
            $ref: '#/definitions/FeatureTrack'
        - name: feature_track_id
          in: path
          description: UUID feature_track_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FeatureTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Feature
      summary: Delete a Feature Track
      description: Permanently delete a feature track registered with your firm.
      operationId: deleteFeatureTrackUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: feature_track_id
          in: path
          description: UUID feature_track_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /financial_offer:
    get:
      tags:
        - FinancialOffer
      summary: List all comparison requests
      description: Get the information for all comparison requests.
      operationId: getFinancialOfferAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«FinancialOffer»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - FinancialOffer
      summary: Create a comparison request
      description: Create a new comparison request.
      operationId: createFinancialOfferUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: financialOffer
          description: financialOffer
          required: true
          schema:
            $ref: '#/definitions/FinancialOffer'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FinancialOffer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/financial_offer/{financial_offer_id}':
    get:
      tags:
        - FinancialOffer
      summary: Retrieve a comparison request
      description: Retrieve the information for a comparison request.
      operationId: getFinancialOfferUsingGet
      produces:
        - '*/*'
      parameters:
        - name: financial_offer
          in: path
          description: UUID financial_offer_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
        - name: financial_offer_id
          in: path
          description: financial_offer_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FinancialOffer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - FinancialOffer
      summary: Update a comparison request
      description: Update the information for a comparison request.
      operationId: updateFinancialOfferUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: financial_offer
          description: financial_offer
          required: true
          schema:
            $ref: '#/definitions/FinancialOffer'
        - name: financial_offer_id
          in: path
          description: UUID financial_offer_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/FinancialOffer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - FinancialOffer
      summary: Delete a comparison request
      description: Permanently delete a comparison request.
      operationId: deleteFinancialOfferUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: financial_offer
          in: path
          description: UUID financial_offer_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
        - name: financial_offer_id
          in: path
          description: financial_offer_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /funding:
    get:
      tags:
        - Funding
      summary: 'List all funding requests '
      description: Get the information for all funding requests defined for your firm.
      operationId: getFundingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Funding»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Funding
      summary: Create a funding request
      description: 'Create a new funding request for an account. '
      operationId: createFundingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: fundingRequest
          description: fundingRequest
          required: true
          schema:
            $ref: '#/definitions/Funding'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Funding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/funding/{funding_id}':
    get:
      tags:
        - Funding
      summary: Retrieve a funding request
      description: Retrieve the information for a funding request for an account.
      operationId: getFundingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: funding_id
          in: path
          description: UUID funding_id
          required: true
          type: string
          format: uuid
          x-example: 708689ce-b0fd-4062-9954-6c8dd82707cf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Funding'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Funding
      summary: Update a funding request
      description: Update the information for a funding request for an account.
      operationId: updateFundingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: funding
          description: funding
          required: true
          schema:
            $ref: '#/definitions/Funding'
        - name: funding_id
          in: path
          description: UUID funding_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Funding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Funding
      summary: Delete a funding request
      description: Permanently delete a funding request defined for an account.
      operationId: deleteFundingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: funding_id
          in: path
          description: UUID funding_id
          required: true
          type: string
          format: uuid
          x-example: 708689ce-b0fd-4062-9954-6c8dd82707cf
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /goal:
    get:
      tags:
        - Goal
      summary: List all goals
      description: Get the details for all goals defined by your firm.
      operationId: getGoalAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Goal»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Goal
      summary: Create a goal
      description: Create a new goal for your firm that clients can customize for themselves.
      operationId: createGoalUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: goalRequest
          description: goalRequest
          required: true
          schema:
            $ref: '#/definitions/Goal'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Goal'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/goal/{goal_id}':
    get:
      tags:
        - Goal
      summary: Retrieve a goal
      description: Retrieve the information for a goal defined for your firm.
      operationId: getGoalUsingGet
      produces:
        - '*/*'
      parameters:
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Goal'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Goal
      summary: Update a goal
      description: Update a goal defined for your firm.
      operationId: updateGoalUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: goal
          description: goal
          required: true
          schema:
            $ref: '#/definitions/Goal'
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Goal'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Goal
      summary: Delete a goal
      description: Permanently delete a goal for your firm.
      operationId: deleteGoalUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/goal/{goal_id}/asset_size':
    get:
      tags:
        - Goal
      summary: List goal asset sizes
      description: Get a list of asset sizes per date for a goal for a specified client.
      operationId: getGoalAssetSizeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: query
          description: client_id
          required: true
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end_date
          required: false
          type: string
          format: date-time
        - name: get_latest
          in: query
          description: get_latest
          required: false
          type: boolean
          default: false
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
        - name: portfolio_goal
          in: query
          description: portfolio_goal
          required: false
          type: boolean
          default: false
        - name: sort_type
          in: query
          description: sort_type
          required: false
          type: string
        - name: start_date
          in: query
          description: start_date
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/AvailableDateDoubleVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/goal/{goal_id}/holding':
    get:
      tags:
        - Goal
      summary: List goal holdings
      description: Get the information for all the securities that are currently being held in portfolios associated with a particular goal.
      operationId: getGoalHoldingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: client_id
          in: query
          description: client_id
          required: true
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end_date
          required: false
          type: string
          format: date-time
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
        - name: portfolio_goal
          in: query
          description: portfolio_goal
          required: false
          type: boolean
          default: false
        - name: start_date
          in: query
          description: start_date
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PortfolioHoldingAgg'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/goal/{goal_id}/performance':
    get:
      tags:
        - Performance
      summary: Goal Performance
      description: Get information on the performance of a goal using IRR (Internal Rate of Return). You must provide the unique goal_id.
      operationId: getGoalPerformanceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: active_premium_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: annualized_return_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: benchmark_id
          in: query
          description: Client Benchmark or Tenant Benchmark id -/benchmark
          required: false
          type: string
          format: uuid
        - name: client_id
          in: path
          description: Client associated with the account - /client
          required: true
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          default: 'null'
          format: date
        - name: goal_id
          in: path
          description: Goal Id - /account
          required: true
          type: string
          format: uuid
        - name: hist_factor
          in: query
          description: 'Histogram factor- (statId: 39, default: 5)'
          required: false
          type: number
          format: double
        - name: mar_down_side_deviation
          in: query
          description: 'minimum acceptable return for downside deviation - (statId: 58, default: 0) '
          required: false
          type: number
          format: double
        - name: max_percentile_monte_carlo
          in: query
          description: 'max percentile for monte carlo, i.entity. 80 - (statId: 62, default: 95)'
          required: false
          type: number
          format: double
        - name: mean_percentile_monte_carlo
          in: query
          description: 'mean percentile for monte carlo i.entity. 50- (statId: 62, default: 50)'
          required: false
          type: number
          format: double
        - name: min_percentile_monte_carlo
          in: query
          description: 'min percentile for monte carlo i.entity. 20 - (statId: 62, default: 5)'
          required: false
          type: number
          format: double
        - name: moving_average_n_day
          in: query
          description: 'number of days for moving average n-day - (statId: 18, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_day_returns
          in: query
          description: 'number of days for Rolling n-day returns - (statId: 2, default: 7)  '
          required: false
          type: integer
          format: int32
        - name: n_path_monte_carlo
          in: query
          description: 'number of points for a simulation- (statId: 62, default: 100)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_max_drawdown
          in: query
          description: 'number of days for Rolling n-day max drawdown- (statId: 46, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_volatility
          in: query
          description: 'number of days for Rolling n-day volatility- (statId: 34, default: 7)'
          required: false
          type: integer
          format: int32
        - name: num_sim_monte_carlo
          in: query
          description: 'number of simulations - (statId: 62, default: 1000) '
          required: false
          type: integer
          format: int32
        - name: period_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () -Carries out stats on either daily, monthly, annually or quarterly dates (default: ''D'')'
          required: false
          type: string
        - name: portfolio_goal
          in: query
          description: portfolio_goal
          required: false
          type: boolean
          default: false
        - name: risk_free_alpha
          in: query
          description: 'risk free val alpha - (statId: 52, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_sharpe
          in: query
          description: 'risk free val sharpe- (statId: 49, default: 0) '
          required: false
          type: number
          format: double
        - name: risk_free_sortino
          in: query
          description: 'risk free val sortino - (statId: 56, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_treynor
          in: query
          description: 'risk free val treynor- (statId: 51, default: 0) '
          required: false
          type: number
          format: double
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          default: 'null'
          format: date
        - name: stat
          in: query
          description: A stat type - /statistics
          required: false
          type: string
        - name: var_conf_interval
          in: query
          description: 'VaR Confidence Interval ( alpha ) i.entity 99, 95, etc - (statId: 40, default: 95)'
          required: false
          type: number
          format: double
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/goal/{goal_id}/transaction':
    get:
      tags:
        - Goal
      summary: List goal transactions
      description: Get the information for all transactions under portfolios associated with a particular goal.
      operationId: getGoalTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: client_id
          in: query
          description: client_id
          required: true
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end_date
          required: false
          type: string
          format: date-time
        - name: goal_id
          in: path
          description: UUID goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: portfolio_goal
          in: query
          description: portfolio_goal
          required: false
          type: boolean
          default: false
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: start_date
          required: false
          type: string
          format: date-time
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /goal_track:
    get:
      tags:
        - Goal
      summary: List all goal track records
      description: Get information for all goal track records stored for your firm.
      operationId: getGoalTrackAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: end_date
          in: query
          description: 'end date '
          required: false
          type: string
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: get_latest
          in: query
          description: true or false
          required: false
          type: boolean
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
        - name: start_date
          in: query
          description: 'start date '
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«GoalTrack»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Goal
      summary: Create a goal track record
      description: Create a goal track record for a goal under a client.
      operationId: createGoalTrackUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: goalTrack
          description: goalTrack
          required: true
          schema:
            $ref: '#/definitions/GoalTrack'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GoalTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/goal_track/{goal_track_id}':
    get:
      tags:
        - Goal
      summary: Retrieve a goal track record
      description: Retrieve the information for a specific goal track record for a goal under a client.
      operationId: getGoalTrackUsingGet
      produces:
        - '*/*'
      parameters:
        - name: goalTrackId
          in: path
          description: UUID goal_track_id
          required: true
          type: string
          format: uuid
          x-example: 4e1c4f70-8611-44fa-bac5-f9f390c16852
        - name: goal_track_id
          in: path
          description: goal_track_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GoalTrack'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Goal
      summary: Update a goal track record
      description: Update the information for a goal track record.
      operationId: updateGoalTrackUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: goal_track
          description: goal_track
          required: true
          schema:
            $ref: '#/definitions/GoalTrack'
        - name: goal_track_id
          in: path
          description: UUID goal_track_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/GoalTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Goal
      summary: Delete a goal track record
      description: Permanently delete an goal track record for a goal under a client.
      operationId: deleteGoalTrackUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: goalTrackId
          in: path
          description: UUID goal_track_id
          required: true
          type: string
          format: uuid
          x-example: 4e1c4f70-8611-44fa-bac5-f9f390c16852
        - name: goal_track_id
          in: path
          description: goal_track_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /insurance_coverage:
    get:
      tags:
        - Insurance
      summary: Get all insurance coverage request
      description: Get all new insurance coverage.
      operationId: getInsuranceCoverageAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«InsuranceCoverage»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Insurance
      summary: Create a insurance coverage request
      description: Create a new insurance coverage.
      operationId: createInsuranceCoverageUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: insuranceCoverage
          description: insuranceCoverage
          required: true
          schema:
            $ref: '#/definitions/InsuranceCoverage'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InsuranceCoverage'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/insurance_coverage/{insurance_coverage_id}':
    get:
      tags:
        - Insurance
      summary: Get a insurance coverage request
      description: Get a new insurance coverage.
      operationId: getInsuranceCoverageUsingGet
      produces:
        - '*/*'
      parameters:
        - name: insurance_coverage_id
          in: path
          description: UUID insurance_coverage_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InsuranceCoverage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Insurance
      summary: Update a insurance coverage request
      description: Update a new insurance coverage.
      operationId: updateInsuranceCoverageUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: insurance_coverage
          description: insurance_coverage
          required: true
          schema:
            $ref: '#/definitions/InsuranceCoverage'
        - name: insurance_coverage_id
          in: path
          description: UUID insurance_coverage_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InsuranceCoverage'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Insurance
      summary: Delete an insurance coverage request
      description: Delete an  insurance coverage.
      operationId: deleteInsuranceCoverageUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: insurance_coverage_id
          in: path
          description: UUID insurance_coverage_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /insurance_discount:
    get:
      tags:
        - Insurance
      summary: Get all insurance discount request
      description: Get all new insurance discount.
      operationId: getInsuranceDiscountAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«InsuranceDiscount»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Insurance
      summary: Create a insurance discount request
      description: Create a new insurance discount.
      operationId: createInsuranceDiscountUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: insuranceDiscount
          description: insuranceDiscount
          required: true
          schema:
            $ref: '#/definitions/InsuranceDiscount'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InsuranceDiscount'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/insurance_discount/{insurance_discount_id}':
    get:
      tags:
        - Insurance
      summary: Get a insurance discount request
      description: Get a new insurance discount.
      operationId: getInsuranceDiscountUsingGet
      produces:
        - '*/*'
      parameters:
        - name: insurance_discount_id
          in: path
          description: ' UUID insurance_discount_id'
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InsuranceDiscount'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Insurance
      summary: 'Update an insurance discount '
      description: Update an new insurance .
      operationId: updateInsuranceDiscountUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: insurance_discount
          description: insurance_discount
          required: true
          schema:
            $ref: '#/definitions/InsuranceDiscount'
        - name: insurance_discount_id
          in: path
          description: UUID insurance_discount_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InsuranceDiscount'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Insurance
      summary: Delete an insurance discount request
      description: Delete an  insurance discount.
      operationId: deleteInsuranceDiscountUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: insurance_discount_id
          in: path
          description: UUID insurance_discount_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /insurance_quote:
    get:
      tags:
        - Insurance
      summary: List all insuranceQuote requests
      description: Get the information for all insuranceQuote requests.
      operationId: getInsuranceQuoteAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«InsuranceQuote»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Insurance
      summary: Create a insuranceQuote request
      description: Create a new insuranceQuote request.
      operationId: createInsuranceQuoteUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: insuranceQuote
          description: insuranceQuote
          required: true
          schema:
            $ref: '#/definitions/InsuranceQuote'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InsuranceQuote'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/insurance_quote/{insurance_quote_id}':
    get:
      tags:
        - Insurance
      summary: Retrieve a insuranceQuote request
      description: Retrieve the information for a insuranceQuote request.
      operationId: getInsuranceQuoteUsingGet
      produces:
        - '*/*'
      parameters:
        - name: insurance_quote
          in: path
          description: UUID insurance_quote_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
        - name: insurance_quote_id
          in: path
          description: insurance_quote_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InsuranceQuote'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Insurance
      summary: Update a insuranceQuote request
      description: Update the information for a insuranceQuote request.
      operationId: updateInsuranceQuoteUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: insurance_quote
          description: insurance_quote
          required: true
          schema:
            $ref: '#/definitions/InsuranceQuote'
        - name: insurance_quote_id
          in: path
          description: UUID insurance_quote_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InsuranceQuote'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Insurance
      summary: Delete a insuranceQuote request
      description: Permanently delete a insuranceQuote request.
      operationId: deleteInsuranceQuoteUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: insurance_quote
          in: path
          description: UUID insurance_quote_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
        - name: insurance_quote_id
          in: path
          description: insurance_quote_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /invoice:
    get:
      tags:
        - Invoice
      summary: List all invoice
      description: 'List all invoice. '
      operationId: getInvoiceAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Invoice»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Invoice
      summary: Create a invoice
      description: 'Create a new invoice, with your firm.'
      operationId: createInvoiceUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: invoice
          description: invoice
          required: true
          schema:
            $ref: '#/definitions/Invoice'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Invoice'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/invoice/{invoice_id}':
    get:
      tags:
        - Invoice
      summary: Retrieve a invoice
      description: 'Retrieve a invoice. '
      operationId: getInvoiceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: invoice_id
          in: path
          description: UUID invoice_idd
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Invoice'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Invoice
      summary: Update a invoice
      description: 'Update a invoice. '
      operationId: updateInvoiceUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: invoice
          description: invoice
          required: true
          schema:
            $ref: '#/definitions/Invoice'
        - name: invoice_id
          in: path
          description: UUID invoice_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Invoice'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Invoice
      summary: Delete a invoice
      description: 'Delete a invoice. '
      operationId: deleteInvoiceUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: invoice_id
          in: path
          description: UUID invoice_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /invoice_payment:
    get:
      tags:
        - Invoice
      summary: List all invoicePayment
      description: 'List all invoicePayment. '
      operationId: getInvoicePaymentAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«InvoicePayment»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Invoice
      summary: Create a invoicePayment
      description: 'Create a new invoicePayment, for tracking invoice status.'
      operationId: createInvoicePaymentUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: invoicePayment
          description: invoicePayment
          required: true
          schema:
            $ref: '#/definitions/InvoicePayment'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InvoicePayment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/invoice_payment/{invoice_payment_id}':
    get:
      tags:
        - Invoice
      summary: Retrieve a invoicePayment
      description: 'Retrieve a invoicePayment. '
      operationId: getInvoicePaymentUsingGet
      produces:
        - '*/*'
      parameters:
        - name: invoice_payment_id
          in: path
          description: UUID invoice_payment_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InvoicePayment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Invoice
      summary: Update a invoicePayment
      description: 'Update a invoicePayment. '
      operationId: updateInvoicePaymentUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: invoice_payment
          description: invoice_payment
          required: true
          schema:
            $ref: '#/definitions/InvoicePayment'
        - name: invoice_payment_id
          in: path
          description: UUID invoice_payment_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/InvoicePayment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Invoice
      summary: Delete a invoicePayment
      description: 'Delete a invoicePayment. '
      operationId: deleteInvoicePaymentUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: invoice_payment_id
          in: path
          description: UUID invoice_payment_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /model:
    get:
      tags:
        - Model
      summary: List all models
      description: Get details for all models defined for your firm to which portfolios can subscribe.
      operationId: getModelAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Model»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Model
      summary: Create a model
      description: Create a new model for your firm to which a portfolios can later subscribe.
      operationId: createModelUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: modelInfoRequest
          description: modelInfoRequest
          required: true
          schema:
            $ref: '#/definitions/Model'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Model'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/model/{model_id}':
    get:
      tags:
        - Model
      summary: Retrieve a model
      description: Get the information for a model for your firm.
      operationId: getModelUsingGet
      produces:
        - '*/*'
      parameters:
        - name: model_id
          in: path
          description: UUID model_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Model'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Model
      summary: Update a model
      description: Update a model for your firm.
      operationId: updateModelUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: model
          description: model
          required: true
          schema:
            $ref: '#/definitions/Model'
        - name: model_id
          in: path
          description: UUID model_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Model'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Model
      summary: Delete a model
      description: Permanently delete a model for your firm.
      operationId: deleteModelUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: model_id
          in: path
          description: UUID model_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/model/{model_id}/model_change':
    post:
      tags:
        - Model
      summary: Change a model composition
      description: Model composition changes represent a change in a model’s holdings.
      operationId: createModelChangeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: changeRequest
          description: changeRequest
          required: true
          schema:
            $ref: '#/definitions/OrderReconcileRequest'
        - name: model_id
          in: path
          description: UUID model_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ModelTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/model/{model_id}/performance':
    get:
      tags:
        - Performance
      summary: Model Performance
      description: Get information on the performance of a model using TWR (Time Weighted Return). You must provide the unique model_id.
      operationId: getModelPerformanceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: active_premium_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: annualized_return_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: benchmark_id
          in: query
          description: Tenant Benchmark Id -/benchmark
          required: false
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: hist_factor
          in: query
          description: 'Histogram factor- (statId: 39, default: 5)'
          required: false
          type: number
          format: double
        - name: mar_down_side_deviation
          in: query
          description: 'minimum acceptable return for downside deviation - (statId: 58, default: 0) '
          required: false
          type: number
          format: double
        - name: max_percentile_monte_carlo
          in: query
          description: 'max percentile for monte carlo, i.entity. 80 - (statId: 62, default: 95)'
          required: false
          type: number
          format: double
        - name: mean_percentile_monte_carlo
          in: query
          description: 'mean percentile for monte carlo i.entity. 50- (statId: 62, default: 50)'
          required: false
          type: number
          format: double
        - name: min_percentile_monte_carlo
          in: query
          description: 'min percentile for monte carlo i.entity. 20 - (statId: 62, default: 5)'
          required: false
          type: number
          format: double
        - name: model_id
          in: path
          description: Model Id - /model
          required: true
          type: string
          format: uuid
        - name: moving_average_n_day
          in: query
          description: 'number of days for moving average n-day - (statId: 18, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_day_returns
          in: query
          description: 'number of days for Rolling n-day returns - (statId: 2, default: 7)  '
          required: false
          type: integer
          format: int32
        - name: n_path_monte_carlo
          in: query
          description: 'number of points for a simulation- (statId: 62, default: 100)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_max_drawdown
          in: query
          description: 'number of days for Rolling n-day max drawdown- (statId: 46, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_volatility
          in: query
          description: 'number of days for Rolling n-day volatility- (statId: 34, default: 7)'
          required: false
          type: integer
          format: int32
        - name: num_sim_monte_carlo
          in: query
          description: 'number of simulations - (statId: 62, default: 1000) '
          required: false
          type: integer
          format: int32
        - name: period_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () -Carries out stats on either daily, monthly, annually or quarterly dates (default: ''D'')'
          required: false
          type: string
        - name: risk_free_alpha
          in: query
          description: 'risk free val alpha - (statId: 52, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_sharpe
          in: query
          description: 'risk free val sharpe- (statId: 49, default: 0) '
          required: false
          type: number
          format: double
        - name: risk_free_sortino
          in: query
          description: 'risk free val sortino - (statId: 56, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_treynor
          in: query
          description: 'risk free val treynor- (statId: 51, default: 0) '
          required: false
          type: number
          format: double
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
        - name: stat
          in: query
          description: Stat Type
          required: false
          type: string
        - name: var_conf_interval
          in: query
          description: 'VaR Confidence Interval ( alpha ) i.entity 99, 95, etc - (statId: 40, default: 95)'
          required: false
          type: number
          format: double
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /model_asset_size:
    get:
      tags:
        - Model
      summary: List all model asset sizes
      description: Get a list of asset sizes per date for all models defined for your firm.
      operationId: getModelAssetSizeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ModelAssetSize»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Model
      summary: Create a model asset size
      description: Create a new asset size record for a model.
      operationId: createModelAssetSizeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/ModelAssetSize'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAssetSize'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/model_asset_size/{model_asset_size_id}':
    get:
      tags:
        - Model
      summary: Retrieve a model asset size
      description: Retrieve the information for a model asset size record for a model.
      operationId: getModelAssetSizeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: model_asset_size_id
          in: path
          description: UUID model_asset_size_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAssetSize'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Model
      summary: Update a model asset size
      description: Update a model asset size record for a model.
      operationId: updateModelAssetSizeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: model_asset_size
          description: model_asset_size
          required: true
          schema:
            $ref: '#/definitions/ModelAssetSize'
        - name: model_asset_size_id
          in: path
          description: UUID model_asset_size_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelAssetSize'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Model
      summary: Delete a model asset size
      description: 'Permanently delete a model asset size record for a model. '
      operationId: deleteModelAssetSizeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: model_asset_size_id
          in: path
          description: UUID model_asset_size_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /model_comment:
    get:
      tags:
        - Model
      summary: List all model commentary
      description: List all comments for all models defined by your firm.
      operationId: getModelCommentAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ModelComment»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Model
      summary: Create a model commentary
      description: Create a new comment for a model available for your firm.
      operationId: createModelCommentUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: modelCommentRequest
          description: modelCommentRequest
          required: true
          schema:
            $ref: '#/definitions/ModelComment'
      responses:
        '200':
          description: OK
          schema:
            type: integer
            format: int64
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/model_comment/{model_comment_id}':
    get:
      tags:
        - Model
      summary: Retrieve a model commentary
      description: Retrieve the information for a model comment for a model.
      operationId: getModelCommentUsingGet
      produces:
        - '*/*'
      parameters:
        - name: model_comment_id
          in: path
          description: UUID model_comment_id
          required: true
          type: string
          format: uuid
          x-example: 8d97c85c-8cbf-4ac1-a5df-f9d2bb6a77e0
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelComment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Model
      summary: Update a model commentary
      description: Update a model comment for a model.
      operationId: updateModelCommentUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: model_comment
          description: model_comment
          required: true
          schema:
            $ref: '#/definitions/ModelComment'
        - name: model_comment_id
          in: path
          description: UUID model_comment_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelComment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Model
      summary: Delete a model commentary
      description: Permanently delete a model comment for a model
      operationId: deleteModelCommentUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: model_comment_id
          in: path
          description: UUID model_comment_id
          required: true
          type: string
          format: uuid
          x-example: 8d97c85c-8cbf-4ac1-a5df-f9d2bb6a77e0
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /model_holding:
    get:
      tags:
        - Model
      summary: List all model holdings
      description: Get all model holding records for all models defined for your firm.
      operationId: getModelHoldingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ModelHolding»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Model
      summary: Create a model holding
      description: Create a new model holding record for a specific model and date.
      operationId: createModelHoldingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: modelHoldingRequest
          description: modelHoldingRequest
          required: true
          schema:
            $ref: '#/definitions/ModelHolding'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/model_holding/{model_holding_id}':
    get:
      tags:
        - Model
      summary: Retrieve a model holding
      description: Retrieve the information for a model holding record for a model.
      operationId: getModelHoldingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: model_holding_id
          in: path
          description: UUID model_holding_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelHolding'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Model
      summary: Update a model holding
      description: Update a model holding record for a model.
      operationId: updateModelHoldingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: model_holding
          description: model_holding
          required: true
          schema:
            $ref: '#/definitions/ModelHolding'
        - name: model_holding_id
          in: path
          description: UUID model_holding_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Model
      summary: Delete a model holding
      description: Permanently delete a model holding record for a model.
      operationId: deleteModelHoldingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: model_holding_id
          in: path
          description: UUID model_holding_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /model_transaction:
    get:
      tags:
        - Model
      summary: List all model transactions
      description: 'Get details for all transaction records for all models defined by your firm. '
      operationId: getModelTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ModelTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Model
      summary: Create a model transaction
      description: Create a new transaction record for a security under a model for a specific date.
      operationId: createModelTransactionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: modelTransactionRequest
          description: modelTransactionRequest
          required: true
          schema:
            $ref: '#/definitions/ModelTransaction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/model_transaction/{model_transaction_id}':
    get:
      tags:
        - Model
      summary: Retrieve a model transaction
      description: Retrieve the information for a model transaction for a model.
      operationId: getModelTransactionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: model_transaction_id
          in: path
          description: UUID model_transaction_id
          required: true
          type: string
          format: uuid
          x-example: e7cf805b-4307-41e9-8b58-90b6359fa900
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelTransaction'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Model
      summary: Update a model transaction
      description: Update a model transaction for a model.
      operationId: updateModelTransactionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: model_transaction
          description: model_transaction
          required: true
          schema:
            $ref: '#/definitions/ModelTransaction'
        - name: model_transaction_id
          in: path
          description: UUID model_transaction_id
          required: true
          type: string
          format: uuid
          x-example: b4c033db-9d05-4a33-8e28-40650d454487
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ModelTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Model
      summary: Delete a model transaction
      description: Permanently delete a model transaction for a model.
      operationId: deleteModelTransactionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: model_transaction_id
          in: path
          description: UUID model_transaction_id
          required: true
          type: string
          format: uuid
          x-example: e7cf805b-4307-41e9-8b58-90b6359fa900
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /node:
    get:
      tags:
        - DecisionTree
      summary: List all nodes
      description: List all nodes that are defined for your firm.
      operationId: getNodeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Node»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - DecisionTree
      summary: Create a node
      description: Create a new node for your firm that can be used in a decision tree and mapped to other nodes.
      operationId: createNodeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: node
          description: node
          required: true
          schema:
            $ref: '#/definitions/Node'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/node/{node_id}':
    get:
      tags:
        - DecisionTree
      summary: Retrieve a node
      description: Retrieve the information for a node.
      operationId: getNodeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: node_id
          in: path
          description: UUID node_id
          required: true
          type: string
          format: uuid
          x-example: 05b9f2e6-aabc-44b5-8e02-f1ab216ebd62
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - DecisionTree
      summary: Update a node
      description: Updated the information for a node.
      operationId: updateNodeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: jsonNode
          description: jsonNode
          required: true
          schema:
            $ref: '#/definitions/JsonNode'
        - name: node_id
          in: path
          description: UUID node_id
          required: true
          type: string
          format: uuid
          x-example: 28021071-bece-400b-a0f6-23fb13adfcd3
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Node'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - DecisionTree
      summary: Delete a node
      description: Permanently delete a node.
      operationId: deleteNodeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: node_id
          in: path
          description: UUID node_id
          required: true
          type: string
          format: uuid
          x-example: 05b9f2e6-aabc-44b5-8e02-f1ab216ebd62
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DecisionTree'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /node_relationship:
    get:
      tags:
        - DecisionTree
      summary: List all node relationships
      description: Get the information for all the node relationships defined for your firm.
      operationId: getNodeRelationshipAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«NodeRelationship»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - DecisionTree
      summary: Create a node relationship
      description: Create a new node relationship for your firm.
      operationId: createNodeRelationshipUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: node
          description: node
          required: true
          schema:
            $ref: '#/definitions/NodeRelationship'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeRelationship'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/node_relationship/{node_relationship_id}':
    get:
      tags:
        - DecisionTree
      summary: Retrieve a node relationship
      description: Retrieve the information for a node relationship.
      operationId: getNodeRelationshipUsingGet
      produces:
        - '*/*'
      parameters:
        - name: node_relationship_id
          in: path
          description: UUID node_relationship_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeRelationship'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - DecisionTree
      summary: Update a node relationship
      description: Update the information for a node relationship.
      operationId: updateNodeRelationshipUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: jsonNode
          description: jsonNode
          required: true
          schema:
            $ref: '#/definitions/JsonNode'
        - name: node_relationship_id
          in: path
          description: UUID node_relationship_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeRelationship'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - DecisionTree
      summary: Delete a node relationship
      description: Permanently delete a node relationship.
      operationId: deleteNodeRelationshipUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: node_relationship_id
          in: path
          description: UUID node_relationship_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NodeRelationship'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /notification:
    get:
      tags:
        - Notification
      summary: Get All Notification
      description: 'Get All Notification. '
      operationId: getNotificationAllUsingGet
      produces:
        - application/json
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Notification»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Notification
      summary: Create a Notification
      description: 'Create a new Notification. '
      operationId: createNotificationUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notification
          description: notification
          required: true
          schema:
            $ref: '#/definitions/Notification'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Notification'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/notification/{notification_id}':
    get:
      tags:
        - Notification
      summary: Get a Notification
      description: 'Get a Notification. '
      operationId: getNotificationUsingGet
      produces:
        - application/json
      parameters:
        - name: notification_id
          in: path
          description: notification_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Notification'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Notification
      summary: Update a Notification
      description: 'Update a Notification. '
      operationId: updateNotificationUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notification
          description: notification
          required: true
          schema:
            $ref: '#/definitions/Notification'
        - name: notification_id
          in: path
          description: UUID notification_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Notification'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Notification
      summary: Delete a Notification
      description: 'Permanently Delete a Notification. '
      operationId: deleteNotificationUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: notification_id
          in: path
          description: UUID notification_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /notification_client:
    get:
      tags:
        - Notification
      summary: List all Notification Client
      description: 'List all Notification Client. '
      operationId: getNotificationClientAllUsingGet
      produces:
        - application/json
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«NotificationClient»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Notification
      summary: Create a Notification Client
      description: 'Create a new Notification Client. '
      operationId: createNotificationClientUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notificationClient
          description: notificationClient
          required: true
          schema:
            $ref: '#/definitions/NotificationClient'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationClient'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/notification_client/{notification_client_id}':
    get:
      tags:
        - Notification
      summary: Retrieve a Notification Client
      description: 'Retrieve a  Notification Client. '
      operationId: getNotificationClientUsingGet
      produces:
        - '*/*'
      parameters:
        - name: notification_client_id
          in: path
          description: notification_client_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationClient'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Notification
      summary: Update a Notification Client
      description: 'Update a  Notification Client. '
      operationId: updateNotificationClientUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notification_client
          description: notification_client
          required: true
          schema:
            $ref: '#/definitions/NotificationClient'
        - name: notification_client_id
          in: path
          description: UUID notification_client_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationClient'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Notification
      summary: Delete a Notification Client
      description: Permanently Delete Notification Client.
      operationId: deleteNotificationClientUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: notification_client_id
          in: path
          description: notification_client_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /notification_setting:
    get:
      tags:
        - Notification
      summary: List all Notification Setting
      description: 'List all Notification Setting. '
      operationId: getNotificationSettingAllUsingGet
      produces:
        - application/json
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«NotificationSetting»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Notification
      summary: Create a Notification Setting
      description: 'Create a new Notification Setting. '
      operationId: createNotificationSettingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notificationSetting
          description: notificationSetting
          required: true
          schema:
            $ref: '#/definitions/NotificationSetting'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationSetting'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/notification_setting/{notification_setting_id}':
    get:
      tags:
        - Notification
      summary: Retrieve a Notification Setting
      description: 'Retrieve a  Notification Setting. '
      operationId: getNotificationSettingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: notification_setting_id
          in: path
          description: notification_setting_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationSetting'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Notification
      summary: Update a Notification Setting
      description: 'Update a  Notification Setting. '
      operationId: updateNotificationSettingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: notification_setting
          description: notification_setting
          required: true
          schema:
            $ref: '#/definitions/NotificationSetting'
        - name: notification_setting_id
          in: path
          description: UUID notification_setting_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/NotificationSetting'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Notification
      summary: Delete a Notification Setting
      description: 'Permanently Delete Notification Setting. '
      operationId: deleteNotificationSettingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: notification_setting_id
          in: path
          description: notification_setting_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /order:
    get:
      tags:
        - Order
      summary: List all order records
      description: Get the information for all order records defined for your firm.
      operationId: getOrderAllUsingGet_1
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Order»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Order
      summary: Create an order record
      description: Create an order record defined for your firm.
      operationId: getOrderAllUsingGet
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: orderInfoRequest
          description: orderInfoRequest
          required: true
          schema:
            $ref: '#/definitions/Order'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/order/{order_id}':
    get:
      tags:
        - Order
      summary: Retrieve an order record
      description: Retrieve the information for an order record.
      operationId: getOrderUsingGet
      produces:
        - '*/*'
      parameters:
        - name: order_id
          in: path
          description: UUID order_id
          required: true
          type: string
          format: uuid
          x-example: 67190064-0731-4b29-b2a7-4a35eb8e7afe
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Order
      summary: Update an order record
      description: Update the information for an order record.
      operationId: updateOrderUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: order
          description: order
          required: true
          schema:
            $ref: '#/definitions/Order'
        - name: order_id
          in: path
          description: UUID order_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Order'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Order
      summary: Delete an order record
      description: Permanently delete an order record.
      operationId: deleteOrderUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: order_id
          in: path
          description: UUID order_id
          required: true
          type: string
          format: uuid
          x-example: 67190064-0731-4b29-b2a7-4a35eb8e7afe
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /order_bulk:
    get:
      tags:
        - Order
      summary: List all bulk orders
      description: Get the information for all bulk order records.
      operationId: getOrderBulkAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: true
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: order_bulk_id
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Order»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Order
      summary: Bulk orders for your firm
      description: Aggregates all orders on a given date for your firm.
      operationId: createOrderBulkUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/TokenDateRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Order'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /order_status:
    get:
      tags:
        - Order
      summary: List all order statuses
      description: Get the information for all order statuses defined for your firm.
      operationId: getOrderStatusAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«OrderStatus»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Order
      summary: Create an order status
      description: Create an order status for your firm.
      operationId: createOrderStatusUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: orderStatusRequest
          description: orderStatusRequest
          required: true
          schema:
            $ref: '#/definitions/OrderStatus'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/order_status/{order_status_id}':
    get:
      tags:
        - Order
      summary: Retrieve an order status
      description: Retrieve the information for an order status defined for your firm.
      operationId: getOrderStatusUsingGet
      produces:
        - '*/*'
      parameters:
        - name: order_status_id
          in: path
          description: UUID order_status_id
          required: true
          type: string
          format: uuid
          x-example: 9b515c67-3791-400f-9da4-9dc69eb992ac
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderStatus'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Order
      summary: Update an order status
      description: Update the information for an order status defined for your firm.
      operationId: updateOrderStatusUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: order_status
          description: order_status
          required: true
          schema:
            $ref: '#/definitions/OrderStatus'
        - name: order_status_id
          in: path
          description: UUID order_status_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderStatus'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Order
      summary: Delete an order status
      description: Permanently delete an order status defined for your firm.
      operationId: deleteOrderStatusUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: order_status_id
          in: path
          description: UUID order_status_id
          required: true
          type: string
          format: uuid
          x-example: 9b515c67-3791-400f-9da4-9dc69eb992ac
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /order_track:
    get:
      tags:
        - Order
      summary: List all order tracking records
      description: Get the information for all order tracking record for all order records.
      operationId: getOrderTrackAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«OrderTrack»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Order
      summary: Create an order tracking record
      description: Create a new order tracking record for an order.
      operationId: createOrderTrackUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: orderTrackRequest
          description: orderTrackRequest
          required: true
          schema:
            $ref: '#/definitions/OrderTrack'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/order_track/{order_track_id}':
    get:
      tags:
        - Order
      summary: Retrieve an order tracking record
      description: Retrieve the information for an order tracking record for an order.
      operationId: getOrderTrackUsingGet
      produces:
        - '*/*'
      parameters:
        - name: order_track_id
          in: path
          description: UUID order_track_id
          required: true
          type: string
          format: uuid
          x-example: ef93ce1c-b50e-4856-803a-db5332be93b0
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderTrack'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Order
      summary: Update an order tracking record
      description: Update the information for an order tracking record for an order.
      operationId: updateOrderTrackUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: order_track
          description: order_track
          required: true
          schema:
            $ref: '#/definitions/OrderTrack'
        - name: order_track_id
          in: path
          description: UUID order_track_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderTrack'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Order
      summary: Delete an order tracking record
      description: Permanently delete an order tracking record for an order.
      operationId: deleteOrderTrackUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: order_track_id
          in: path
          description: UUID order_track_id
          required: true
          type: string
          format: uuid
          x-example: ef93ce1c-b50e-4856-803a-db5332be93b0
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /overflow:
    get:
      tags:
        - Overflow
      summary: List all overflow objects
      description: Get details for all overflow.
      operationId: getOverflowAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Overflow»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Overflow
      summary: Create a Overflow request
      description: Create a new Overflow request.
      operationId: createOverflowUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: overflowVO
          description: overflowVO
          required: true
          schema:
            $ref: '#/definitions/Overflow'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Overflow'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/overflow/{overflow_id}':
    get:
      tags:
        - Overflow
      summary: Retrieve a Overflow object
      description: Retrieve the information for a Overflow.
      operationId: getOverflowUsingGet
      produces:
        - '*/*'
      parameters:
        - name: overflow_id
          in: path
          description: UUID overflow_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Overflow'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /overflow_setting:
    get:
      tags:
        - Overflow
      summary: List all overflow settings
      description: Get details for all overflow setting.
      operationId: getOverflowSettingsAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«OverflowSettings»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Overflow
      summary: Create a Overflow Settings request
      description: Create a new Overflow Settings request.
      operationId: createOverflowSettingsUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: overflowSettings
          description: overflowSettings
          required: true
          schema:
            $ref: '#/definitions/OverflowSettings'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OverflowSettings'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/overflow_setting/{overflow_settings_id}':
    get:
      tags:
        - Overflow
      summary: Retrieve a Overflow Setting
      description: Retrieve the information for a Overflow Settings.
      operationId: getOverflowSettingsUsingGet
      produces:
        - '*/*'
      parameters:
        - name: overflow_settings_id
          in: path
          description: UUID overflow_settings_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OverflowSettings'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Overflow
      summary: Update a overflow settings
      description: Update the information for a overflow setting registered with your firm.
      operationId: updateOverflowSettingsUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: overflow_settings
          description: overflow_settings
          required: true
          schema:
            $ref: '#/definitions/OverflowSettings'
        - name: overflow_settings_id
          in: path
          description: UUID overflow_settings_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OverflowSettings'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Overflow
      summary: Delete a overflow settings
      description: Permanently delete a  overflow settings registered with your firm.
      operationId: deleteOverflowSettingsUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: overflow_settings_id
          in: path
          description: UUID overflow_settings_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /portfolio:
    get:
      tags:
        - Portfolio
      summary: List all portfolios
      description: 'Get the information for all portfolios assigned to all of your firm’s accounts. '
      operationId: getPortfolioAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Portfolio»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create a portfolio
      description: Create a new portfolio for an account.
      operationId: createPortfolioUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioRequest
          description: portfolioRequest
          required: true
          schema:
            $ref: '#/definitions/Portfolio'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Portfolio'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio/{portfolio_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio
      description: Retrieve a portfolio for an account.
      operationId: getPortfolioUsingGet
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: UUID portfolio_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Portfolio'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update a portfolio
      description: Update a portfolio for an account.
      operationId: updatePortfolioUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio
          description: portfolio
          required: true
          schema:
            $ref: '#/definitions/Portfolio'
        - name: portfolio_id
          in: path
          description: UUID portfolio_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Portfolio'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete a portfolio
      description: Permanently delete a portfolio for an account.
      operationId: deletePortfolioUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: UUID portfolio_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/portfolio/{portfolio_id}/aggregate_data':
    get:
      tags:
        - Portfolio
      summary: Retrieve an portfolio aggregate data
      description: Retrieve the information for a securities associated with a portfolio.
      operationId: getPortfolioAggregatedDataUsingGet
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: Portfolio Id
          required: true
          type: string
          format: uuid
          x-example: f96fad3e-a8cf-4915-bc0c-da4d9693ab83
        - name: show_asset_class
          in: query
          description: true or false
          required: false
          type: boolean
          default: true
        - name: show_category
          in: query
          description: true or false
          required: false
          type: boolean
          default: true
        - name: show_industry
          in: query
          description: true or false
          required: false
          type: boolean
          default: true
        - name: show_sector
          in: query
          description: true or false
          required: false
          type: boolean
          default: true
        - name: show_security_class
          in: query
          description: true or false
          required: false
          type: boolean
          default: true
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioAggregatedVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio/{portfolio_id}/order_buy_only':
    post:
      tags:
        - Order
      summary: Create buy-only portfolio rebalance orders
      description: 'Create order records necessary to rebalance a portfolio to the model to which it subscribes. However, these will only be buy transactions, and no securities will be sold.'
      operationId: createPortfolioOrderBuyOnlyUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: portfolio_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio/{portfolio_id}/order_rebalance':
    post:
      tags:
        - Order
      summary: Create portfolio rebalance orders
      description: Create order records necessary to rebalance a portfolio to the model to which it subscribes.
      operationId: createPortfolioOrderRebalanceUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: portfolio_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio/{portfolio_id}/order_reconciliation':
    post:
      tags:
        - Order
      summary: Create portfolio reconciliation order
      operationId: createPortfolioOrderReconciliation
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: portfolio_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/OrderReconcileRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OrderReconcileReturnObject'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio/{portfolio_id}/order_sell_all':
    post:
      tags:
        - Order
      summary: Sell all portfolio order
      description: Create order records necessary to entirely sell all the holdings within a portfolio.
      operationId: createPortfolioOrderSellAllUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: portfolio_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio/{portfolio_id}/order_sell_only':
    post:
      tags:
        - Order
      summary: Create sell-only portfolio rebalance orders
      description: Create order records necessary to rebalance a portfolio to the model to which it subscribes.
      operationId: createPortfolioOrderSellOnlyUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - name: portfolio_id
          in: path
          description: portfolio_id
          required: true
          type: string
          format: uuid
        - in: body
          name: req
          description: req
          required: true
          schema:
            $ref: '#/definitions/AccountPortfolioRebalanceRequest'
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/OrderVoClone'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio/{portfolio_id}/performance':
    get:
      tags:
        - Performance
      summary: Portfolio Performance
      description: Get information on the performance of a portfolio using IRR (Internal Rate of Return). You must provide the unique portfolio_id.
      operationId: getPortfolioPerformanceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: account_id
          in: path
          description: Account Id -/account
          required: true
          type: string
          format: uuid
        - name: active_premium_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: annualized_return_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: benchmark_id
          in: query
          description: Benchmark Id - benchmarkId or clientBenchmarkId -/benchmark
          required: false
          type: string
          format: uuid
        - name: client_id
          in: path
          description: Client Id -/client
          required: true
          type: string
          format: uuid
        - name: end_date
          in: query
          description: end date
          required: false
          type: string
          format: date
        - name: hist_factor
          in: query
          description: 'Histogram factor- (statId: 39, default: 5)'
          required: false
          type: number
          format: double
        - name: mar_down_side_deviation
          in: query
          description: 'minimum acceptable return for downside deviation - (statId: 58, default: 0) '
          required: false
          type: number
          format: double
        - name: max_percentile_monte_carlo
          in: query
          description: 'max percentile for monte carlo, i.entity. 80 - (statId: 62, default: 95)'
          required: false
          type: number
          format: double
        - name: mean_percentile_monte_carlo
          in: query
          description: 'mean percentile for monte carlo i.entity. 50- (statId: 62, default: 50)'
          required: false
          type: number
          format: double
        - name: min_percentile_monte_carlo
          in: query
          description: 'min percentile for monte carlo i.entity. 20 - (statId: 62, default: 5)'
          required: false
          type: number
          format: double
        - name: moving_average_n_day
          in: query
          description: 'number of days for moving average n-day - (statId: 18, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_day_returns
          in: query
          description: 'number of days for Rolling n-day returns - (statId: 2, default: 7)  '
          required: false
          type: integer
          format: int32
        - name: n_path_monte_carlo
          in: query
          description: 'number of points for a simulation- (statId: 62, default: 100)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_max_drawdown
          in: query
          description: 'number of days for Rolling n-day max drawdown- (statId: 46, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_volatility
          in: query
          description: 'number of days for Rolling n-day volatility- (statId: 34, default: 7)'
          required: false
          type: integer
          format: int32
        - name: num_sim_monte_carlo
          in: query
          description: 'number of simulations - (statId: 62, default: 1000) '
          required: false
          type: integer
          format: int32
        - name: period_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () -Carries out stats on either daily, monthly, annually or quarterly dates (default: ''D'')'
          required: false
          type: string
        - name: portfolio_id
          in: path
          description: portfolio_id
          required: true
          type: string
          format: uuid
        - name: portfolioid
          in: path
          description: Portfolio Id -/portoflio
          required: true
          type: string
          format: uuid
        - name: risk_free_alpha
          in: query
          description: 'risk free val alpha - (statId: 52, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_sharpe
          in: query
          description: 'risk free val sharpe- (statId: 49, default: 0) '
          required: false
          type: number
          format: double
        - name: risk_free_sortino
          in: query
          description: 'risk free val sortino - (statId: 56, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_treynor
          in: query
          description: 'risk free val treynor- (statId: 51, default: 0) '
          required: false
          type: number
          format: double
        - name: start_date
          in: query
          description: start date
          required: false
          type: string
          format: date
        - name: stat
          in: query
          description: A stat type - /statistics endpoint to get types
          required: false
          type: string
        - name: var_conf_interval
          in: query
          description: 'VaR Confidence Interval ( alpha ) i.entity 99, 95, etc - (statId: 40, default: 95)'
          required: false
          type: number
          format: double
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /portfolio_asset_size:
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio asset size
      description: 'Retrieve the information for a portfolio asset size record for a portfolio. '
      operationId: getPortfolioAssetSizeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioAssetSizeLog»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create a portfolio asset size
      description: Create a new asset size record for a portfolio.
      operationId: createPortfolioAssetSizeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioAssetSizeLogRequest
          description: portfolioAssetSizeLogRequest
          required: true
          schema:
            $ref: '#/definitions/PortfolioAssetSizeLog'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioAssetSizeLog'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio_asset_size/{portfolio_asset_size_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio asset size
      description: Retrieve the information for a portfolio asset size record for a portfolio.
      operationId: getPortfolioAssetSizeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: portfolio_asset_size_id
          in: path
          description: portfolio_asset_size_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioAssetSize'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update a portfolio asset size
      description: Update the information for a portfolio asset size record for a portfolio.
      operationId: updatePortfolioAssetSizeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio_asset_size
          description: portfolio_asset_size
          required: true
          schema:
            $ref: '#/definitions/PortfolioAssetSizeLog'
        - name: portfolio_asset_size_id
          in: path
          description: UUID portfolio_asset_size_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioAssetSize'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete a portfolio asset size
      description: Permanently delete a portfolio asset size record for a portfolio.
      operationId: deletePortfolioAssetSizeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_asset_size_id
          in: path
          description: UUID portfolio_asset_size_id
          required: true
          type: string
          format: uuid
          x-example: 01b252d3-1412-477f-8d29-6e2ff6e54c81
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /portfolio_comment:
    get:
      tags:
        - Portfolio
      summary: List all portfolio commentary
      description: List all comments for all portfolios defined for your firm.
      operationId: getPortfolioCommentAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioComment»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create a portfolio commentary
      description: Create a new comment for a portfolio defined for your firm.
      operationId: createPortfolioCommentUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioComment
          description: portfolioComment
          required: true
          schema:
            $ref: '#/definitions/PortfolioComment'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioComment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio_comment/{portfolio_comment_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio commentary
      description: Retrieve the information for a portfolio comment for a portfolio.
      operationId: getPortfolioCommentUsingGet
      produces:
        - '*/*'
      parameters:
        - name: portfolio_comment_id
          in: path
          description: UUID portfolio_comment_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioComment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update a portfolio comment
      description: Update the information for a portfolio comment for a portfolio.
      operationId: updatePortfolioCommentUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio_comment
          description: portfolio_comment
          required: true
          schema:
            $ref: '#/definitions/PortfolioComment'
        - name: portfolio_comment_id
          in: path
          description: UUID portfolio_comment_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioComment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete a portfolio commentary
      description: Permanently delete a portfolio comment for a portfolio.
      operationId: deletePortfolioCommentUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_comment_id
          in: path
          description: UUID portfolio_comment_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /portfolio_goal:
    get:
      tags:
        - Portfolio
      summary: List all portfolio goals
      description: Get information for all portfolio-goal mappings defined for your firm.
      operationId: getPortfolioGoalAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioGoal»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create an portfolio goal
      description: Create an portfolio goal.
      operationId: createPortfolioGoalUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioGoal
          description: portfolioGoal
          required: true
          schema:
            $ref: '#/definitions/PortfolioGoal'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioGoal'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio_goal/{portfolio_goal_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve an portfolio goal
      description: Retrieve the information for a specific portfolio-goal mapping.
      operationId: getPortfolioGoalUsingGet
      produces:
        - '*/*'
      parameters:
        - name: portfolio_goal_id
          in: path
          description: UUID portfolio_goal_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioGoal'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update an portfolio goal
      description: Update the information for an portfolio-goal mapping.
      operationId: updatePortfolioGoalUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio_goal
          description: portfolio_goal
          required: true
          schema:
            $ref: '#/definitions/PortfolioGoal'
        - name: portfolio_goal_id
          in: path
          description: UUID portfolio_goal_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioGoal'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete an portfolio goal
      description: Permanently delete an portfolio-goal mapping.
      operationId: deletePortfolioGoalUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_goal_id
          in: path
          description: UUID portfolio_goal_id
          required: true
          type: string
          format: uuid
          x-example: 04907eaa-3f33-49be-a35b-378cdf639fba
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /portfolio_holding:
    get:
      tags:
        - Portfolio
      summary: List all portfolio holdings
      description: Get the information for all holding records for all portfolios defined for your firm.
      operationId: getPortfolioHoldingAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioHolding'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create a portfolio holding
      description: Create a new holding record for a portfolio.
      operationId: createPortfolioHoldingUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioHoldinLogRequest
          description: portfolioHoldinLogRequest
          required: true
          schema:
            $ref: '#/definitions/PortfolioHoldingLog'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioHoldingLog'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio_holding/{portfolio_holding_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio holding
      description: Retrieve the information for a portfolio holding record for a portfolio.
      operationId: getPortfolioHoldingUsingGet
      produces:
        - '*/*'
      parameters:
        - name: portfolio_holding_id
          in: path
          description: UUID portfolio_holding_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioHolding'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update a portfolio holding
      description: Update the information for a portfolio holding record for a portfolio.
      operationId: updatePortfolioHoldingUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio_holding
          description: portfolio_holding
          required: true
          schema:
            $ref: '#/definitions/PortfolioHoldingLog'
        - name: portfolio_holding_id
          in: path
          description: UUID portfolio_holding_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioHolding'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete a portfolio holding
      description: Permanently delete a portfolio holding record for a portfolio.
      operationId: deletePortfolioHoldingUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_holding_id
          in: path
          description: UUID portfolio_holding_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /portfolio_transaction:
    get:
      tags:
        - Portfolio
      summary: List all portfolio transactions
      description: Get the information for all transaction records for all portfolios defined for your firm.
      operationId: getPortfolioTransactionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«PortfolioTransaction»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Portfolio
      summary: Create a portfolio transaction
      description: Create a new transaction record for a portfolio.
      operationId: createPortfolioTransactionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolioTransactionRequest
          description: portfolioTransactionRequest
          required: true
          schema:
            $ref: '#/definitions/PortfolioTransaction'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/portfolio_transaction/{portfolio_transaction_id}':
    get:
      tags:
        - Portfolio
      summary: Retrieve a portfolio transaction
      description: 'Retrieve the information for a portfolio transaction record for a portfolio. '
      operationId: getPortfolioTransactionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: portfolio_transaction_id
          in: path
          description: UUID portfolio_transaction_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioTransaction'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Portfolio
      summary: Update a portfolio transaction
      description: Update the information for a portfolio transaction record for a portfolio.
      operationId: updatePortfolioTransactionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: portfolio_transaction
          description: portfolio_transaction
          required: true
          schema:
            $ref: '#/definitions/PortfolioTransaction'
        - name: portfolio_transaction_id
          in: path
          description: UUID portfolio_transaction_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PortfolioTransaction'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Portfolio
      summary: Delete a portfolio transaction
      description: Permanently delete a portfolio transaction record for a portfolio.
      operationId: deletePortfolioTransactionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: portfolio_transaction_id
          in: path
          description: UUID portfolio_transaction_id
          required: true
          type: string
          format: uuid
          x-example: 099961da-7f41-4309-950f-2b51689a0033
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /question:
    get:
      tags:
        - Questionnaire
      summary: List all Questions
      description: Get information for all Questions
      operationId: getQuestionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: order_index
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Question»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Questionnaire
      summary: Create a question
      description: Create a new question for questionnaire.
      operationId: createQuestionUsingPost
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: question
          description: question
          required: true
          schema:
            $ref: '#/definitions/Question'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Question'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/question/{question_id}':
    get:
      tags:
        - Questionnaire
      summary: Retrieve a question
      description: Retrieve the information for a question for questionnaire
      operationId: getQuestionUsingGet
      produces:
        - application/json
      parameters:
        - name: question_id
          in: path
          description: UUID question_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Question'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Questionnaire
      summary: Update a question.
      description: Update a question for questionnaire.
      operationId: updateQuestionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: question
          description: question
          required: true
          schema:
            $ref: '#/definitions/Question'
        - name: question_id
          in: path
          description: UUID question_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Question'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Questionnaire
      summary: Delete a question
      description: Delete an answer for the question
      operationId: deleteQuestionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: question_id
          in: path
          description: UUID question_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /questionnaire:
    get:
      tags:
        - Questionnaire
      summary: List all questionnaires
      description: Get the information for all questionnaires defined for your firm.
      operationId: getQuestionnaireAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Questionnaire»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Questionnaire
      summary: Create a questionnaire
      description: Create a new questionnaire for your firm.
      operationId: createQuestionnaireUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: questionnaire
          description: questionnaire
          required: true
          schema:
            $ref: '#/definitions/Questionnaire'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Questionnaire'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/questionnaire/{questionnaire_id}':
    get:
      tags:
        - Questionnaire
      summary: Retrieve a questionnaire
      description: Retrieve the information for a questionnaire for your firm.
      operationId: getQuestionnaireUsingGet
      produces:
        - '*/*'
      parameters:
        - name: questionnaire_id
          in: path
          description: UUID questionnaire_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Questionnaire'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Questionnaire
      summary: Update a questionnaire
      description: Update a questionnaire for your firm.
      operationId: updateQuestionnaireUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: questionnaire
          description: questionnaire
          required: true
          schema:
            $ref: '#/definitions/Questionnaire'
        - name: questionnaire_id
          in: path
          description: UUID questionnaire_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Questionnaire'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Questionnaire
      summary: Delete a questionnaire
      description: Permanently delete a questionnaire for your firm.
      operationId: deleteQuestionnaireUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: questionnaire_id
          in: path
          description: UUID questionnaire_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /resource/country:
    get:
      tags:
        - Resource
      summary: Get All Countries
      description: 'Get All Countries. '
      operationId: getAllCountryUsingGet
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Country'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /resource/currency:
    get:
      tags:
        - Resource
      summary: Get All Currencies
      description: 'Get All Currencies. '
      operationId: getAllCurrencyUsingGet
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Currency'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /resource/state:
    get:
      tags:
        - Resource
      summary: List all state resource
      description: Get the information for all possible state resource.
      operationId: getAllStatesUsingGet
      produces:
        - application/json
      parameters:
        - name: country_code
          in: query
          description: country_code
          required: false
          type: string
          default: US
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/State'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /resource/statistic:
    get:
      tags:
        - Resource
      summary: List all statistic resource
      description: Get the information for all possible statistic resource.
      operationId: getAllStatisticsUsingGet
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
            additionalProperties:
              type: array
              items:
                $ref: '#/definitions/StatisticResourceVO'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /risk_profile:
    get:
      tags:
        - RiskProfile
      summary: Get All Risk Profile
      description: 'Get All Risk Profile. '
      operationId: getRiskProfileAllUsingGet
      produces:
        - application/json
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«RiskProfile»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - RiskProfile
      summary: Create a Risk Profile
      description: 'Create a new Risk Profile. '
      operationId: createRiskProfileUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: riskProfile
          description: riskProfile
          required: true
          schema:
            $ref: '#/definitions/RiskProfile'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RiskProfile'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/risk_profile/{risk_profile_id}':
    get:
      tags:
        - RiskProfile
      summary: Get a Risk Profile
      description: 'Get a Risk Profile. '
      operationId: getRiskProfileUsingGet
      produces:
        - application/json
      parameters:
        - name: risk_profile_id
          in: path
          description: UUID risk_profile_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RiskProfile'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - RiskProfile
      summary: Update a Risk Profile
      description: 'Update a Risk Profile. '
      operationId: updateRiskProfileUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: risk_profile
          description: risk_profile
          required: true
          schema:
            $ref: '#/definitions/RiskProfile'
        - name: risk_profile_id
          in: path
          description: UUID risk_profile_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RiskProfile'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - RiskProfile
      summary: Delete a Risk Profile
      description: Permanently Delete a Risk Profile.
      operationId: deleteRiskProfileUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: risk_profile_id
          in: path
          description: UUID risk_profile_id
          required: true
          type: string
          format: uuid
          x-example: 1a2bb85f-c1b4-41d5-9bf3-e23cce54b71c
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /roundup:
    get:
      tags:
        - Roundup
      summary: List all roundups
      description: Get details for all roundups.
      operationId: getRoundupAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Roundup»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Roundup
      summary: Create a roundup
      description: Create a new roundup with your firm.
      operationId: createRoundupUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: roundupCO
          description: roundupCO
          required: true
          schema:
            $ref: '#/definitions/RoundupCO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Roundup'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/roundup/{roundup_id}':
    get:
      tags:
        - Roundup
      summary: Retrieve a Roundup
      description: Retrieve the information for a Roundup.
      operationId: getRoundupUsingGet
      produces:
        - '*/*'
      parameters:
        - name: roundup_id
          in: path
          description: UUID roundup_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Roundup'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /roundup_setting:
    get:
      tags:
        - Roundup
      summary: List all roundup settings
      description: Get details for all roundup setting with your firm.
      operationId: getRoundupSettingsAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«RoundupSettings»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Roundup
      summary: Create a Roundup Settings
      description: Create a Roundup Settings for Roundup amount with your firm.
      operationId: createRoundupSettingsUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: roundupSettings
          description: roundupSettings
          required: true
          schema:
            $ref: '#/definitions/RoundupSettings'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoundupSettings'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/roundup_setting/{roundup_setting_id}':
    get:
      tags:
        - Roundup
      summary: Retrieve a Roundup Setting
      description: Retrieve the information for a Roundup Settings with your firm.
      operationId: getRoundupSettingsUsingGet
      produces:
        - '*/*'
      parameters:
        - name: roundup_setting_id
          in: path
          description: UUID roundup_setting_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoundupSettings'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Roundup
      summary: Update a roundup settings
      description: Update the information for a roundup setting registered with your firm.
      operationId: updateRoundupSettingsUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: roundup_setting
          description: roundup_setting
          required: true
          schema:
            $ref: '#/definitions/RoundupSettings'
        - name: roundup_setting_id
          in: path
          description: UUID roundup_setting_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/RoundupSettings'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Roundup
      summary: Delete a roundup settings
      description: Permanently delete a  roundup settings registered with your firm.
      operationId: deleteRoundupSettingsUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: roundup_setting_id
          in: path
          description: UUID roundup_setting_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /sales:
    get:
      tags:
        - Support
      summary: List all sales inquiries
      description: Get all sales inquiries defined for your firm.
      operationId: getSaleAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Sale»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Support
      summary: Create a sales inquiry
      description: Create a new sales inquiry for your firm.
      operationId: createSaleUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: saleRequest
          description: saleRequest
          required: true
          schema:
            $ref: '#/definitions/Sale'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Sale'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/sales/{sales_id}':
    get:
      tags:
        - Support
      summary: Retrieve a sales record
      description: Retrieve the information for a sales record
      operationId: getSaleUsingGet
      produces:
        - '*/*'
      parameters:
        - name: sales_id
          in: path
          description: UUID sales_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Sale'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Support
      summary: Update a sales inquiry
      description: 'Update the information for a sales inquiry. '
      operationId: updateSaleUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: sales
          description: sales
          required: true
          schema:
            $ref: '#/definitions/Sale'
        - name: sales_id
          in: path
          description: UUID sales_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Sale'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Support
      summary: Delete a sales inquiry
      description: Permanently delete a sales inquiry.
      operationId: deleteSaleUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: sales_id
          in: path
          description: UUID sales_id
          required: true
          type: string
          format: uuid
          x-example: 29fa5156-cd89-4056-9125-ce2428b05f11
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /score:
    get:
      tags:
        - Score
      summary: List all scores
      description: Get information for all scores stored for your firm.
      operationId: getScoreAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Score»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Score
      summary: Create a score
      description: 'Create a score for a client, account, goal, portfolio, allocation, model, benchmark or security.'
      operationId: createScoreUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: score
          description: score
          required: true
          schema:
            $ref: '#/definitions/Score'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Score'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/score/{score_id}':
    get:
      tags:
        - Score
      summary: Retrieve a score
      description: 'Retrieve the information for a specific score associated with a client, account, goal, portfolio, allocation, model, benchmark or security.'
      operationId: createScoreUsingPost_1
      produces:
        - '*/*'
      parameters:
        - name: score_id
          in: path
          description: UUID score_id
          required: true
          type: string
          format: uuid
          x-example: 739ecd39-e1ae-4a0b-b266-dd3ddc616163
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Score'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Score
      summary: Update a score
      description: Update the information for a score.
      operationId: updateScoreUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: score
          description: score
          required: true
          schema:
            $ref: '#/definitions/Score'
        - name: score_id
          in: path
          description: UUID score_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Score'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Score
      summary: Delete a score
      description: Permanently delete a score
      operationId: deleteScoreUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: score_id
          in: path
          description: UUID score_id
          required: true
          type: string
          format: uuid
          x-example: 739ecd39-e1ae-4a0b-b266-dd3ddc616163
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /security:
    get:
      tags:
        - Securities
      summary: List all securities
      description: Get details for all securities defined for your firm.
      operationId: getSecurityAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Security»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Securities
      summary: Create a security
      description: Create a new security for your firm.
      operationId: createSecurityUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: securitiesInfoRequest
          description: securitiesInfoRequest
          required: true
          schema:
            $ref: '#/definitions/Security'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Security'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/security/{security_id}':
    get:
      tags:
        - Securities
      summary: Retrieve a security
      description: Retrieve the information for a security defined for your firm.
      operationId: getSecurityUsingGet
      produces:
        - '*/*'
      parameters:
        - name: security_id
          in: path
          description: UUID security_id
          required: true
          type: string
          format: uuid
          x-example: 739ecd39-e1ae-4a0b-b266-dd3ddc616163
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Security'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Securities
      summary: Update a security
      description: Update a security for your firm.
      operationId: updateSecurityUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: security
          description: security
          required: true
          schema:
            $ref: '#/definitions/Security'
        - name: security_id
          in: path
          description: UUID security_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Security'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Securities
      summary: Delete a security
      description: Permanently delete a security for your firm.
      operationId: deleteSecurityUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: security_id
          in: path
          description: UUID security_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  '/security/{security_id}/performance':
    get:
      tags:
        - Performance
      summary: Security Performance
      description: Get performance statistics for a security using TWR (Time Weighted Return). You must provide the unique security_id
      operationId: getSecurityPerformanceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: active_premium_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: annualized_return_period
          in: query
          description: 'Q (quarterly), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () - (statId: 19, default: ''D'')'
          required: false
          type: string
        - name: benchTicker
          in: query
          description: 'Bench Ticker for security - (default: ^GSPC) '
          required: false
          type: string
        - name: benchmark_id
          in: query
          description: benchmark_id
          required: false
          type: string
          format: uuid
        - name: end_date
          in: query
          description: Ending parameter for time window
          required: false
          type: string
          format: date
        - name: hist_factor
          in: query
          description: 'Histogram factor- (statId: 39, default: 5)'
          required: false
          type: number
          format: double
        - name: mar_down_side_deviation
          in: query
          description: 'minimum acceptable return for downside deviation - (statId: 58, default: 0) '
          required: false
          type: number
          format: double
        - name: max_percentile_monte_carlo
          in: query
          description: 'max percentile for monte carlo, i.entity. 80 - (statId: 62, default: 95)'
          required: false
          type: number
          format: double
        - name: mean_percentile_monte_carlo
          in: query
          description: 'mean percentile for monte carlo i.entity. 50- (statId: 62, default: 50)'
          required: false
          type: number
          format: double
        - name: min_percentile_monte_carlo
          in: query
          description: 'min percentile for monte carlo i.entity. 20 - (statId: 62, default: 5)'
          required: false
          type: number
          format: double
        - name: moving_average_n_day
          in: query
          description: 'number of days for moving average n-day - (statId: 18, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_day_returns
          in: query
          description: 'number of days for Rolling n-day returns - (statId: 2, default: 7)  '
          required: false
          type: integer
          format: int32
        - name: n_path_monte_carlo
          in: query
          description: 'number of points for a simulation- (statId: 62, default: 100)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_max_drawdown
          in: query
          description: 'number of days for Rolling n-day max drawdown- (statId: 46, default: 7)'
          required: false
          type: integer
          format: int32
        - name: n_rolling_volatility
          in: query
          description: 'number of days for Rolling n-day volatility- (statId: 34, default: 7)'
          required: false
          type: integer
          format: int32
        - name: num_sim_monte_carlo
          in: query
          description: 'number of simulations - (statId: 62, default: 1000) '
          required: false
          type: integer
          format: int32
        - name: period_type
          in: query
          description: ' Quarter (Q), Monthly (M) , Annually (Y), Daily (D) --caps matter, codes in () -Carries out stats on either daily, monthly, annually or quarterly dates (default: ''D'')'
          required: false
          type: string
        - name: risk_free_alpha
          in: query
          description: 'risk free val alpha - (statId: 52, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_sharpe
          in: query
          description: 'risk free val sharpe- (statId: 49, default: 0) '
          required: false
          type: number
          format: double
        - name: risk_free_sortino
          in: query
          description: 'risk free val sortino - (statId: 56, default: 0)'
          required: false
          type: number
          format: double
        - name: risk_free_treynor
          in: query
          description: 'risk free val treynor- (statId: 51, default: 0) '
          required: false
          type: number
          format: double
        - name: security_id
          in: path
          description: security_id
          required: true
          type: string
          format: uuid
        - name: start_date
          in: query
          description: Starting parameter for time window
          required: false
          type: string
          format: date
        - name: stat
          in: query
          description: A stat type - /statistics endpoint
          required: false
          type: string
        - name: ticker
          in: query
          description: Ticker for security
          required: false
          type: string
        - name: var_conf_interval
          in: query
          description: 'VaR Confidence Interval ( alpha ) i.entity 99, 95, etc - (statId: 40, default: 95)'
          required: false
          type: number
          format: double
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  /security_exclusion:
    get:
      tags:
        - Securities
      summary: List all security exclusions
      description: Get details for all security exclusions defined for your firm.
      operationId: getSecurityExclusionAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: security_exclusion_id
          in: path
          description: UUID security_exclusion_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«SecurityExclusion»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Securities
      summary: Create a security exclusion
      description: Create a new security exclusion for a specific account or portfolio.
      operationId: createSecurityExclusionUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: securityExclusionRequest
          description: securityExclusionRequest
          required: true
          schema:
            $ref: '#/definitions/SecurityExclusion'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityExclusion'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/security_exclusion/{security_exclusion_id}':
    get:
      tags:
        - Securities
      summary: Retrieve a security exclusion
      description: Retrieve the information for a security exclusion.
      operationId: getSecurityExclusionUsingGet
      produces:
        - '*/*'
      parameters:
        - name: security_exclusion_id
          in: path
          description: security exclusion id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityExclusion'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Securities
      summary: Update a security exclusion
      description: Update the information for a security exclusion.
      operationId: updateSecurityExclusionUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: security_exclusion
          description: security_exclusion
          required: true
          schema:
            $ref: '#/definitions/SecurityExclusion'
        - name: security_exclusion_id
          in: path
          description: UUID security_exclusion_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityExclusion'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Securities
      summary: Delete a security exclusion
      description: Permanently delete a security exclusion
      operationId: deleteSecurityExclusionUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: security_exclusion_id
          in: path
          description: UUID security_exclusion_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /security_price:
    get:
      tags:
        - Securities
      summary: List all security prices
      description: Get prices for all securities defined for your firm.
      operationId: getSecurityPriceAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«SecurityPrice»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Securities
      summary: Create a security price
      description: Create a new price for a security defined for your firm.
      operationId: createSecurityPriceUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: securityPriceRequest
          description: securityPriceRequest
          required: true
          schema:
            $ref: '#/definitions/SecurityPrice'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityPrice'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/security_price/{security_price_id}':
    get:
      tags:
        - Securities
      summary: Retrieve a security price
      description: Retrieve the information for a security price for a security.
      operationId: getSecurityPriceUsingGet
      produces:
        - '*/*'
      parameters:
        - name: security_price_id
          in: path
          description: UUID security_price_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityPrice'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Securities
      summary: Update a security price
      description: Update a security price for a security.
      operationId: updateSecurityPriceUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: security_price
          description: security_price
          required: true
          schema:
            $ref: '#/definitions/SecurityPrice'
        - name: security_price_id
          in: path
          description: UUID security_price_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SecurityPrice'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Securities
      summary: Delete a security price
      description: Permanently delete a security price from a security.
      operationId: deleteSecurityPriceUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: security_price_id
          in: path
          description: UUID security_price_id
          required: true
          type: string
          format: uuid
          x-example: 739ecd39-e1ae-4a0b-b266-dd3ddc616163
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /stage:
    get:
      tags:
        - Utils
      summary: List all account stages
      description: Get the information for all possible account stages.
      operationId: getStageAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Stage»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create an account stage
      description: Create a new account stage
      operationId: createStageUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: stageRequest
          description: stageRequest
          required: true
          schema:
            $ref: '#/definitions/Stage'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stage'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/stage/{stage_id}':
    get:
      tags:
        - Utils
      summary: Retrieve an account stage
      description: Retrieve the information for a specific account stage.
      operationId: getStageUsingGet
      produces:
        - '*/*'
      parameters:
        - name: stage_id
          in: path
          description: UUID stage_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update an account stage
      description: Update the information for an account stage.
      operationId: updateStageUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: stage
          description: stage
          required: true
          schema:
            $ref: '#/definitions/Stage'
        - name: stage_id
          in: path
          description: UUID stage_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stage'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete an account stage
      description: Permanently delete an account stage.
      operationId: deleteStageUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: stage_id
          in: path
          description: UUID stage_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /support_ticket:
    get:
      tags:
        - Support
      summary: List all support tickets
      description: Get the information for all support tickets defined for your firm.
      operationId: getSupportTicketAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«SupportTicket»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Support
      summary: Create a support ticket
      description: Create a new support ticket for your firm.
      operationId: createSupportTicketUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: supportTicketRequest
          description: supportTicketRequest
          required: true
          schema:
            $ref: '#/definitions/SupportTicket'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SupportTicket'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/support_ticket/{support_ticket_id}':
    get:
      tags:
        - Support
      summary: Retrieve a support ticket
      description: Retrieve the information for a support ticket defined for your firm.
      operationId: getSupportTicketUsingGet
      produces:
        - '*/*'
      parameters:
        - name: support_ticket_id
          in: path
          description: UUID support_ticket_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SupportTicket'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Support
      summary: Update a support ticket
      description: Update the information for a support ticket defined for your firm.
      operationId: updateSupportTicketUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: support_ticket
          description: support_ticket
          required: true
          schema:
            $ref: '#/definitions/SupportTicket'
        - name: support_ticket_id
          in: path
          description: UUID support_ticket_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SupportTicket'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Support
      summary: Delete a support ticket
      description: Permanently delete a support ticket for your firm.
      operationId: deleteSupportTicketUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: support_ticket_id
          in: path
          description: UUID support_ticket_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /support_ticket_comment:
    get:
      tags:
        - Support
      summary: List all support ticket comments
      description: Get the information for all support ticket comments defined for your firm.
      operationId: getSupportTicketCommentAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«SupportTicketComment»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Support
      summary: Create a support ticket comment
      description: Create a new support ticket comment for a support ticket.
      operationId: createSupportTicketCommentUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: supportTickerCommentRequest
          description: supportTickerCommentRequest
          required: true
          schema:
            $ref: '#/definitions/SupportTicketComment'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SupportTicket'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/support_ticket_comment/{support_ticket_comment_id}':
    get:
      tags:
        - Support
      summary: Retrieve a support ticket comment
      description: Retrieve the information for a support ticket comment defined for a support ticket.
      operationId: getSupportTicketCommentUsingGet
      produces:
        - '*/*'
      parameters:
        - name: support_ticket_comment_id
          in: path
          description: UUID support_ticket_comment_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SupportTicketComment'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Support
      summary: Update a support ticket comment
      description: Update the information for a support ticket comments defined for a support ticket.
      operationId: updateSupportTicketCommentUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: support_ticket_comment
          description: support_ticket_comment
          required: true
          schema:
            $ref: '#/definitions/SupportTicketComment'
        - name: support_ticket_comment_id
          in: path
          description: UUID support_ticket_comment_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SupportTicketComment'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Support
      summary: Delete a support ticket comment
      description: Permanently delete a support ticket comment for a support ticket.
      operationId: deleteSupportTicketCommentUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: support_ticket_comment_id
          in: path
          description: UUID support_ticket_comment_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /transaction_code:
    get:
      tags:
        - Utils
      summary: List all transaction codes
      description: Get the information for all transaction codes defined by your firm.
      operationId: getTransactionCodeAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«TransactionCode»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Utils
      summary: Create a transaction code
      description: Create a new transaction code for your firm.
      operationId: createTransactionCodeUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: transactionRequest
          description: transactionRequest
          required: true
          schema:
            $ref: '#/definitions/TransactionCode'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionCode'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/transaction_code/{transaction_code_id}':
    get:
      tags:
        - Utils
      summary: Retrieve a transaction code
      description: Retrieve the information for a transaction code defined by your firm.
      operationId: getTransactionCodeUsingGet
      produces:
        - '*/*'
      parameters:
        - name: transaction_code_id
          in: path
          description: UUID transaction_code_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionCode'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Utils
      summary: Update a transaction code
      description: Update a transaction code for your firm.
      operationId: updateTransactionCodeUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: transaction_code
          description: transaction_code
          required: true
          schema:
            $ref: '#/definitions/TransactionCode'
        - name: transaction_code_id
          in: path
          description: UUID transaction_code_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/TransactionCode'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Utils
      summary: Delete a transaction code
      description: Permanently delete a transaction code for your firm.
      operationId: deleteTransactionCodeUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: transaction_code_id
          in: path
          description: UUID transaction_code_id
          required: true
          type: string
          format: uuid
          x-example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /transfer:
    get:
      tags:
        - Funding
      summary: List all transfer requests
      description: Get the information for all external account transfers defined for your firm.
      operationId: getTransferAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«ExternalAccountTransfer»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Funding
      summary: Create a transfer requests
      description: Create a new external account transfer for a client account.
      operationId: createTransferUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: externalAccountTransferRequest
          description: externalAccountTransferRequest
          required: true
          schema:
            $ref: '#/definitions/ExternalAccountTransfer'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ExternalAccountTransfer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/transfer/{transfer_id}':
    get:
      tags:
        - Funding
      summary: Retrieve a transfer request
      description: Retrieve the information for a external account transfer for an account.
      operationId: getTransferUsingGet
      produces:
        - '*/*'
      parameters:
        - name: external_account_transfer_id
          in: path
          description: UUID external_account_transfer_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
        - name: transfer_id
          in: path
          description: transfer_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ExternalAccountTransfer'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Funding
      summary: Update a transfer request
      description: 'Update the information for a external account transfer for a client account. '
      operationId: updateTransferUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: transfer
          description: transfer
          required: true
          schema:
            $ref: '#/definitions/ExternalAccountTransfer'
        - name: transfer_id
          in: path
          description: UUID external_account_transfer_id
          required: true
          type: string
          format: uuid
          x-example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ExternalAccountTransfer'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Funding
      summary: Delete a transfer request
      description: Permanently delete a external account transfer from a client account.
      operationId: deleteTransferUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: transfer
          in: path
          description: UUID external_account_transfer_id
          required: true
          type: string
          format: uuid
          x-example: 8397d8fd-e80d-48ea-bf79-81f32b12606e
        - name: transfer_id
          in: path
          description: transfer_id
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /webhook:
    get:
      tags:
        - Webhook
      summary: List all webhooks
      description: Get information for all webhooks defined for your firm.
      operationId: getWebhookAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«Webhook»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Webhook
      summary: Create a webhook
      description: One active webhook service is allowed at all times.
      operationId: createWebhookUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: webhookRequest
          description: webhookRequest
          required: true
          schema:
            $ref: '#/definitions/Webhook'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/webhook/{webhook_id}':
    get:
      tags:
        - Webhook
      summary: Retrieve a webhook
      description: Retrieve the information for a specific webhook. The webhook_id must be provided.
      operationId: getWebhookUsingGet
      produces:
        - '*/*'
      parameters:
        - name: webhook_id
          in: path
          description: UUID webhook_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Webhook
      summary: Update a webhook
      description: Update a webhook for your firm. The webhook_id must be provided
      operationId: updateWebhookUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: webhook
          description: webhook
          required: true
          schema:
            $ref: '#/definitions/Webhook'
        - name: webhook_id
          in: path
          description: UUID webhook_id
          required: true
          type: string
          format: uuid
          x-example: bab849d6-de96-4dc7-a5ea-19be45c52a4e
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Webhook'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Webhook
      summary: Delete a webhook
      description: Permanently delete a webhook for your firm. The webhook_id must be provided.
      operationId: deleteWebhookUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: webhook_id
          in: path
          description: UUID webhook_id
          required: true
          type: string
          format: uuid
          x-example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
  /withdrawal:
    get:
      tags:
        - Funding
      summary: List all withdrawal requests
      description: Get the information for all withdrawal requests for all clients.
      operationId: getWithdrawalAllUsingGet
      produces:
        - '*/*'
      parameters:
        - name: ascending
          in: query
          description: ascending
          required: false
          type: boolean
          default: false
        - name: filter
          in: query
          description: filter
          required: false
          type: string
        - name: order_by
          in: query
          description: order_by
          required: false
          type: string
          default: update_date
        - name: page
          in: query
          description: page
          required: false
          type: integer
          default: 0
          format: int32
        - name: size
          in: query
          description: size
          required: false
          type: integer
          default: 25
          format: int32
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Page«DailyWithdrawal»'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    post:
      tags:
        - Funding
      summary: Create a withdrawal request
      description: Create a new withdrawal request for an account.
      operationId: createWithdrawalUsingPost
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: dailyWithdrawalRequest
          description: dailyWithdrawalRequest
          required: true
          schema:
            $ref: '#/definitions/DailyWithdrawal'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DailyWithdrawal'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
  '/withdrawal/{withdrawal_id}':
    get:
      tags:
        - Funding
      summary: Retrieve a withdrawal request
      description: Retrieve the information for a withdrawal request for an account.
      operationId: getWithdrawalUsingGet
      produces:
        - '*/*'
      parameters:
        - name: withdrawal_id
          in: path
          description: UUID withdrawal_id
          required: true
          type: string
          format: uuid
          x-example: be07c93a-c0b0-4fb0-97e1-3a0f77b8c969
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DailyWithdrawal'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    put:
      tags:
        - Funding
      summary: Update a withdrawal request
      description: Update the information for a withdrawal request for an account.
      operationId: updateWithdrawalUsingPut
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - in: body
          name: withdrawal
          description: withdrawal
          required: true
          schema:
            $ref: '#/definitions/DailyWithdrawal'
        - name: withdrawal_id
          in: path
          description: UUID withdrawal_id
          required: true
          type: string
          format: uuid
          x-example: be07c93a-c0b0-4fb0-97e1-3a0f77b8c969
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/DailyWithdrawal'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
      security:
        - oauth2: []
      deprecated: false
    delete:
      tags:
        - Funding
      summary: Delete a withdrawal request
      description: Permanently delete a withdrawal request from an account.
      operationId: deleteWithdrawalUsingDelete
      produces:
        - '*/*'
      parameters:
        - name: withdrawal_id
          in: path
          description: UUID withdrawal_id
          required: true
          type: string
          format: uuid
          x-example: be07c93a-c0b0-4fb0-97e1-3a0f77b8c969
      responses:
        '200':
          description: OK
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
      security:
        - oauth2: []
      deprecated: false
securityDefinitions:
  oauth2:
    type: oauth2
    tokenUrl: 'https://dev.hydrogenplatform.com/authorization/v1/oauth/token'
    flow: application
definitions:
  Account:
    type: object
    required:
      - account_type_id
      - name
    properties:
      account_number:
        type: string
        example: true
        description: accountNumber
      account_type_id:
        type: string
        format: uuid
        example: 50d76212-0fcd-4d36-8633-e4a52cbcb79f
        description: accountTypeId
      clients:
        type: array
        items:
          $ref: '#/definitions/ClientAccountMapping'
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      discretionary:
        type: boolean
        example: true
        description: discretionary
      goals:
        type: array
        items:
          $ref: '#/definitions/GoalAccountMapping'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: isActive
      managed:
        type: boolean
        example: true
        description: managed
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: Taxable
        description: name
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Account
    description: Account Object
  AccountAdvisorVO:
    type: object
    properties:
      account_type:
        type: string
      accounts_managed:
        type: integer
        format: int32
      assets_managed:
        type: number
        format: double
      clients_managed:
        type: integer
        format: int32
    title: AccountAdvisorVO
  AccountAllocationMapping:
    type: object
    required:
      - account_id
      - allocation_id
      - current_weight
      - date
      - strategic_weight
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      allocation_id:
        type: string
        format: uuid
        example: f29d942a-7509-41be-8016-46743be0bcc8
        description: allocationId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      current_weight:
        type: number
        format: double
        example: 0.88
        description: currentWeight
      date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: date
      goal_id:
        type: string
        format: uuid
        example: 9a1c0a9f-c699-46a2-9710-8b2abe10526c
        description: goalId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      strategic_weight:
        type: number
        format: double
        example: 0.89
        description: strategicWeight
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: AccountAllocationMapping
    description: AccountAllocationMapping Object
  AccountClientsOverviewVO:
    type: object
    properties:
      client_account_association:
        type: string
      client_first_name:
        type: string
      client_id:
        type: string
        format: uuid
      client_last_name:
        type: string
    title: AccountClientsOverviewVO
  AccountHoldingVO:
    type: object
    properties:
      account_holding_date:
        type: string
        format: date-time
      amount:
        type: number
        format: double
      security_asset_class:
        type: string
      security_category:
        type: string
      security_id:
        type: string
        format: uuid
      security_industry:
        type: string
      security_name:
        type: string
      security_sector:
        type: string
      security_ticker:
        type: string
      shares:
        type: number
        format: double
      weight:
        type: number
        format: double
    title: AccountHoldingVO
  AccountMap:
    type: object
    required:
      - account_id
      - amount
    properties:
      account_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: accountId
      amount:
        type: integer
        format: int32
        example: 1
        description: amount
    title: AccountMap
  AccountOverviewVO:
    type: object
    properties:
      account_asset_size:
        type: number
        format: double
      account_asset_size_date:
        type: string
        format: date-time
      account_holdings:
        type: array
        items:
          $ref: '#/definitions/AccountHoldingVO'
      account_id:
        type: string
        format: uuid
      account_name:
        type: string
      account_type_id:
        type: string
        format: uuid
      account_type_name:
        type: string
      allocations:
        type: array
        items:
          $ref: '#/definitions/AllocationVO'
      clients:
        type: array
        items:
          $ref: '#/definitions/AccountClientsOverviewVO'
      deposits:
        type: array
        items:
          $ref: '#/definitions/DepositVO'
      withdrawals:
        type: array
        items:
          $ref: '#/definitions/WithdrawalVO'
    title: AccountOverviewVO
  AccountPermissionVO:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      clients:
        type: array
        description: PermissionVO
        items:
          $ref: '#/definitions/PermissionVO'
    title: AccountPermissionVO
    description: AccountPermissionVO Object
  AccountPortfolioRebalanceRequest:
    type: object
    properties:
      buy_threshold:
        type: number
        format: double
        example: 1
        description: buyThreshold
      buy_transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: buyTransactionCodeId
      cash_portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: cashPortfolioId
      cash_sec_id:
        type: string
        format: uuid
        example: 5276c9a5-5263-4aea-8027-327003738cef
        description: cashSecId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      commit_orders:
        type: boolean
        example: true
        description: commitOrders
      non_fractional:
        type: boolean
        example: true
        description: nonFractional
      port_threshold:
        type: number
        format: double
        example: 1
        description: portThreshold
      restrictions_on:
        type: boolean
        example: true
        description: restrictionsOn
      sell_threshold:
        type: number
        format: double
        example: 1
        description: sellThreshold
      sell_transaction_code_id:
        type: string
        format: uuid
        example: 7d8d41d0-ed4b-4ae2-acb3-e0baed2ff1cc
        description: sellTransactionCodeId
      tenant_id:
        type: string
        format: uuid
        example: 04907eaa-3f33-49be-a35b-378cdf639fba
        description: tenantId
      use_cash_available:
        type: boolean
        example: true
        description: useCashAvailable
      use_strategic:
        type: boolean
        example: false
        description: useStrategic
    title: AccountPortfolioRebalanceRequest
    description: AccountPortfolioRebalanceRequest Object
  AccountStatus:
    type: object
    required:
      - account_id
      - stage_id
      - status
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      comments:
        type: string
        example: invested
        description: comments
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      stage_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: stageId
      status:
        type: string
        example: complete
        description: status
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: AccountStatus
    description: ClientAccountLevelDetail Object
  AccountType:
    type: object
    required:
      - name
    properties:
      category:
        type: string
        example: taxable
        description: category
      code:
        type: string
        example: J
        description: code
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: isActive
      is_taxable:
        type: boolean
        example: true
        description: isTaxable
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: Joint
        description: name
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      short_name:
        type: string
        example: J
        description: shortName
      subcategory:
        type: string
        example: taxable
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: AccountType
    description: AccountType Object
  AccountVO:
    type: object
    properties:
      account_asset_size:
        type: number
        format: double
      account_asset_size_date:
        type: string
        format: date-time
      account_created_date:
        type: string
        format: date-time
      account_id:
        type: string
        format: uuid
      account_name:
        type: string
      account_secondary_id:
        type: string
      account_type:
        type: string
      account_updated_date:
        type: string
        format: date-time
    title: AccountVO
  Accounting:
    type: object
    required:
      - currency_code
      - stat_date
      - stat_name
      - stat_value
    properties:
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      period_type:
        type: string
        example: annual
        description: periodType
      period_year:
        type: integer
        format: int32
        example: 2020
        description: periodYear
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      stat_date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: statDate
      stat_name:
        type: string
        example: revenue
        description: statName
      stat_value:
        type: number
        format: double
        example: 12
        description: statValue
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Accounting
    description: Accounting Object
  AclClientPermissionVO:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      permission_type:
        type: string
        example: INQUIRY_ACCESS
        description: permissionType
        enum:
          - '[INQUIRY_ACCESS'
          - LIMITED_AUTHORITY
          - FULL_AUTHORITY
          - 'POWER_OF_ATTORNEY]'
    title: AclClientPermissionVO
  AdvisorOverviewVO:
    type: object
    properties:
      account_list:
        type: array
        items:
          $ref: '#/definitions/AccountAdvisorVO'
      client_list:
        type: array
        items:
          $ref: '#/definitions/ClientAdvisorOverviewVO'
      total_accounts_managed:
        type: integer
        format: int32
      total_assets_managed:
        type: number
        format: double
      total_clients_managed:
        type: integer
        format: int32
    title: AdvisorOverviewVO
  AggregateDataByCategoryForClientFromDbVO:
    type: object
    properties:
      account_holder:
        type: string
      account_name:
        type: string
      account_number:
        type: string
      aggregation_account_balance_id:
        type: string
        format: uuid
      aggregation_account_id:
        type: string
        format: uuid
      available_balance:
        type: string
      available_credit:
        type: string
      balance:
        type: string
      balance_time_stamp:
        type: string
        format: date-time
      category:
        type: string
      client_id:
        type: string
        format: uuid
      currency_code:
        type: string
      financial_offer_id:
        type: string
        format: uuid
      institution_name:
        type: string
      is_active:
        type: boolean
      is_asset:
        type: boolean
      mask:
        type: string
      metadata:
        type: object
        additionalProperties:
          type: string
      subcategory:
        type: string
    title: AggregateDataByCategoryForClientFromDbVO
  AggregationAccount:
    type: object
    required:
      - account_name
      - category
      - client_id
      - institution_name
    properties:
      account_holder:
        type: string
        description: accountHolder
      account_name:
        type: string
        example: Bank Gold Checking
        description: accountName
      account_number:
        type: string
        example: 566788991
        description: accountNumber
      bank_link_id:
        type: string
        format: uuid
        example: 02ec7d90-02fc-46c7-b201-def9b16ef65a
        description: bankLinkId
      category:
        type: string
        example: Bank Account
        description: category
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      financial_offer_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: financialOfferId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      institution_name:
        type: string
        example: Citywide Bank
        description: institutionName
      is_active:
        type: boolean
        example: true
        description: isActive
      is_asset:
        type: boolean
        example: true
        description: isAsset
      is_business:
        type: boolean
        example: false
        description: isBusiness
      is_investment:
        type: boolean
        example: false
        description: isInvestment
      is_link_verified:
        type: boolean
        example: true
        description: isLinkVerified
      mask:
        type: string
        description: mask
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      subcategory:
        type: string
        example: Checking Account
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: AggregationAccount
    description: Aggregation Account Object
  AggregationAccountAggregateDataVO:
    type: object
    properties:
      aggregation_account_balances:
        $ref: '#/definitions/AggregationAccountBalanceAggregateDataVO'
      aggregation_account_details:
        $ref: '#/definitions/AggregationAccountDetailsAggregateDataVO'
      aggregation_account_holdings:
        type: array
        items:
          $ref: '#/definitions/AggregationAccountHoldingAggregateDataVO'
      aggregation_account_id:
        type: string
        format: uuid
      aggregation_account_transactions:
        type: array
        items:
          $ref: '#/definitions/AggregationAccountTransactionAggregateDataVO'
    title: AggregationAccountAggregateDataVO
  AggregationAccountBalance:
    type: object
    required:
      - currency_code
    properties:
      aggregation_account_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: aggregationAccountId
      available_balance:
        type: string
        example: 10000
        description: availableBalance
      available_credit:
        type: string
        example: 10000
        description: availableCredit
      balance:
        type: string
        example: 9000
        description: balance
      balance_time_stamp:
        type: string
        format: date-time
        example: '2018-11-29T14:48:38.000+0000'
        description: balanceTimeStamp
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: isActive
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: AggregationAccountBalance
    description: Aggregation Account Balance Object
  AggregationAccountBalanceAggregateDataVO:
    type: object
    properties:
      aggregation_account_balance_id:
        type: string
        format: uuid
      available_balance:
        type: number
        format: double
      available_credit:
        type: number
        format: double
      balance:
        type: number
        format: double
      balance_time_stamp:
        type: string
        format: date-time
      create_date:
        type: string
        format: date-time
      currency_code:
        type: string
      secondary_id:
        type: string
      update_date:
        type: string
        format: date-time
    title: AggregationAccountBalanceAggregateDataVO
  AggregationAccountDetailsAggregateDataVO:
    type: object
    properties:
      account_holder:
        type: string
      account_name:
        type: string
      account_number:
        type: string
      asset:
        type: boolean
      category:
        type: string
      create_date:
        type: string
        format: date-time
      currency_code:
        type: string
      financial_offer_id:
        type: string
        format: uuid
      institution_name:
        type: string
      mask:
        type: string
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
      subcategory:
        type: string
      update_date:
        type: string
        format: date-time
    title: AggregationAccountDetailsAggregateDataVO
  AggregationAccountHolding:
    type: object
    required:
      - shares
      - ticker
      - ticker_name
    properties:
      aggregation_account_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: aggregationAccountId
      amount:
        type: number
        format: double
      asset_class:
        type: string
      cost_basis:
        type: number
        format: double
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
      cusip:
        type: string
      exchange:
        type: string
      holding_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: holdingDate
      holding_type:
        type: string
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      isin:
        type: string
        example: xyz
        description: isin
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      price:
        type: number
        format: double
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      shares:
        type: number
        format: double
      ticker:
        type: string
      ticker_name:
        type: string
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: AggregationAccountHolding
    description: Aggregation Account Holding Object
  AggregationAccountHoldingAggregateDataVO:
    type: object
    properties:
      aggregation_account_holding_id:
        type: string
        format: uuid
      amount:
        type: number
        format: double
      asset_class:
        type: string
      cost_basis:
        type: number
        format: double
      create_date:
        type: string
        format: date-time
      currency_code:
        type: string
      cusip:
        type: string
      exchange:
        type: string
      holding_date:
        type: string
        format: date-time
      holding_type:
        type: string
      metadata:
        type: object
        additionalProperties:
          type: string
      price:
        type: number
        format: double
      shares:
        type: number
        format: double
      ticker:
        type: string
      ticker_name:
        type: string
      update_date:
        type: string
        format: date-time
    title: AggregationAccountHoldingAggregateDataVO
  AggregationAccountTransaction:
    type: object
    required:
      - currency_code
      - transaction_date
    properties:
      aggregation_account_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: aggregationAccountId
      bank_credit:
        $ref: '#/definitions/BankCredit'
      cash:
        $ref: '#/definitions/Cash'
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      investment:
        $ref: '#/definitions/Investment'
      is_excluded_analysis:
        type: boolean
      is_recurring:
        type: boolean
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      status:
        type: string
        example: active
        description: status
      transaction_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: transactionDate
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: AggregationAccountTransaction
    description: Aggregation Account Transaction Object
  AggregationAccountTransactionAggregateDataVO:
    type: object
    properties:
      aggregation_account_transaction_id:
        type: string
        format: uuid
      bank_credit:
        $ref: '#/definitions/BankCredit'
      create_date:
        type: string
        format: date-time
      currency_code:
        type: string
      investment:
        $ref: '#/definitions/Investment'
      is_excluded_analysis:
        type: boolean
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
      status:
        type: string
      transaction_date:
        type: string
        format: date-time
      update_date:
        type: string
        format: date-time
    title: AggregationAccountTransactionAggregateDataVO
  AggregationAccountsMap:
    type: object
    required:
      - aggregation_account_id
      - amount
    properties:
      aggregation_account_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: aggregationAccountId
      amount:
        type: integer
        format: int32
        example: 1
        description: amount
    title: AggregationAccountsMap
  AggregationDataForClientByCategoryResponseVO:
    type: object
    properties:
      aggregation_account_details:
        type: array
        items:
          $ref: '#/definitions/AggregateDataByCategoryForClientFromDbVO'
      category:
        type: string
      total_available_balance:
        type: number
        format: double
      total_balance:
        type: number
        format: double
    title: AggregationDataForClientByCategoryResponseVO
  AggregationDataForClientParentResponseVO:
    type: object
    properties:
      by_category:
        type: array
        items:
          $ref: '#/definitions/AggregationDataForClientByCategoryResponseVO'
    title: AggregationDataForClientParentResponseVO
  Allocation:
    type: object
    required:
      - name
    properties:
      benchmark_id:
        type: string
        format: uuid
        example: f3c384dd-5895-4da8-a356-61f266269082
        description: benchmarkId
      category:
        type: string
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: Tech ETFs
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      inception_date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: inceptionDate
      is_active:
        type: boolean
        example: true
        description: isActive
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: Tech
        description: name
      node_map:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/AllocationNodeMap'
      performance:
        type: number
        format: double
        example: 0.9
        description: performance
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      volatility:
        type: number
        format: double
        example: 0.9
        description: volatility
    title: Allocation
    description: Allocation Object
  AllocationAggregatedVO:
    type: object
    properties:
      allocation_category:
        type: string
      allocation_compositions:
        type: array
        items:
          $ref: '#/definitions/AllocationCompositionAggregatedVO'
      allocation_description:
        type: string
      allocation_id:
        type: string
        format: uuid
      allocation_name:
        type: string
      allocation_secondary_id:
        type: string
    title: AllocationAggregatedVO
  AllocationComposition:
    type: object
    required:
      - allocation_id
      - current_weight
      - date
      - model_id
      - strategic_weight
    properties:
      allocation_id:
        type: string
        format: uuid
        example: 1c46902a-d39d-4eaf-9159-abaa473b2561
        description: allocationId
      core:
        type: boolean
        example: true
        description: core
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      current_weight:
        type: number
        format: double
        example: 0.88
        description: currentWeight
      date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      strategic_weight:
        type: number
        format: double
        example: 0.89
        description: strategicWeight
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: AllocationComposition
  AllocationCompositionAggregatedVO:
    type: object
    properties:
      allocation_composition_create_date:
        type: string
        format: date-time
      allocation_composition_date:
        type: string
        format: date-time
      allocation_composition_id:
        type: string
        format: uuid
      allocation_composition_update_date:
        type: string
        format: date-time
      model_category:
        type: string
      model_current_weight:
        type: number
        format: double
      model_description:
        type: string
      model_holdings:
        type: array
        items:
          $ref: '#/definitions/AllocationCompositionModelHoldingsVO'
      model_id:
        type: string
        format: uuid
      model_name:
        type: string
      model_secondary_id:
        type: string
      model_strategic_weight:
        type: number
        format: double
    title: AllocationCompositionAggregatedVO
  AllocationCompositionModelHoldingsVO:
    type: object
    properties:
      model_holding_date:
        type: string
        format: date-time
      model_holding_id:
        type: string
        format: uuid
      security_asset_class:
        type: string
      security_compositions:
        type: array
        items:
          $ref: '#/definitions/SecurityCompositionVO'
      security_countries:
        type: array
        items:
          $ref: '#/definitions/SecurityCountryVO'
      security_create_date:
        type: string
        format: date-time
      security_exchange:
        type: string
      security_id:
        type: string
        format: uuid
      security_industry:
        type: string
      security_name:
        type: string
      security_secondary_id:
        type: string
      security_sector:
        type: string
      security_security_class:
        type: string
      security_ticker:
        type: string
      security_update_date:
        type: string
        format: date-time
    title: AllocationCompositionModelHoldingsVO
  AllocationNodeMap:
    type: object
    required:
      - node_id
    properties:
      node_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: nodeId
    title: AllocationNodeMap
  AllocationVO:
    type: object
    properties:
      account_allocation_date:
        type: string
        format: date-time
      account_allocation_id:
        type: string
        format: uuid
      account_allocation_weight:
        type: number
        format: double
      allocation_category:
        type: string
      allocation_description:
        type: string
      allocation_id:
        type: string
        format: uuid
      allocation_name:
        type: string
      allocation_secondary_id:
        type: string
    title: AllocationVO
  Answer:
    type: object
    required:
      - value
    properties:
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      image:
        type: string
        example: image
        description: image
      is_default:
        type: boolean
        example: false
        description: isDefault
      label:
        type: string
        example: label
        description: label
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      order_index:
        type: string
        example: 1
        description: orderIndex
      question:
        $ref: '#/definitions/Question'
      question_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: questionId
      tooltip:
        type: string
      value:
        type: string
        example: 0-40
        description: value
      weight:
        type: number
        format: double
        example: 10
        description: weight
    title: Answer
  AnswerMap:
    type: object
    properties:
      answer_id:
        type: string
        format: uuid
    title: AnswerMap
  Application:
    type: object
    required:
      - name
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: description
        description: description
      device:
        type: string
        example: device
        description: device
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: name
        description: name
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Application
    description: Application
  AuditLog:
    type: object
    required:
      - request_url
      - response
    properties:
      account_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountIds
        items:
          type: string
          format: uuid
      aggregation_account_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: aggregationAccountIds
        items:
          type: string
          format: uuid
      allocation_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: allocationIds
        items:
          type: string
          format: uuid
      client_ids:
        type: array
        example:
          - 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientIds
        items:
          type: string
          format: uuid
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      goal_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: goalIds
        items:
          type: string
          format: uuid
      id:
        type: string
        format: uuid
        example: 1feae367-77be-4613-9cd0-f62fd5b3cff2
        description: id
        readOnly: true
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      model_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: modelIds
        items:
          type: string
          format: uuid
      portfolio_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: portfolioIds
        items:
          type: string
          format: uuid
      request:
        type: string
      request_url:
        type: string
        example: /sample.pdf
        description: requestUrl
      response:
        type: string
        description: response
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      security_ids:
        type: array
        example:
          - 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: securityIds
        items:
          type: string
          format: uuid
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: AuditLog
    description: AuditLog Object
  AvailableDateDoubleVO:
    type: object
    properties:
      additions:
        type: number
        format: double
        example: 0
        description: additions
      cash_flow:
        type: number
        format: double
        example: 20000
        description: cashFlow
      currency_code:
        type: string
        example: USD
        description: currencyCode
      date:
        type: string
        example: '2018-02-03'
        description: date
      value:
        type: number
        format: double
        example: 20000
        description: value
      value_available:
        type: number
        format: double
        example: 20000
        description: valueAvailable
    title: AvailableDateDoubleVO
    description: Available Date-Double Mapping Object
  BankCredit:
    type: object
    required:
      - amount
      - merchant
      - transaction_type
    properties:
      amount:
        type: number
        format: double
        example: 30.89
        description: amount
      category:
        type: string
        example: category
        description: category
      description:
        type: string
        example: description
        description: description
      location:
        $ref: '#/definitions/Location'
      memo:
        type: string
        example: memo
        description: memo
      merchant:
        type: string
        example: merchant
        description: merchant
      subcategory:
        type: string
        example: subcategory
        description: subcategory
      transaction_type:
        type: string
        example: Credit
        description: transactionType
    title: BankCredit
    description: BankCredit Object
  BankLink:
    type: object
    required:
      - bank_account_holder
      - bank_account_number
      - name
      - routing
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      available_balance:
        type: string
        example: available_balance
        description: availableBalance
      balance:
        type: string
        example: 1000.12
        description: balance
      bank_account_holder:
        type: string
        example: XYZ
        description: bankAccountHolder
      bank_account_name:
        type: string
        example: XYZ
        description: bankAccountName
      bank_account_number:
        type: string
        example: 566788991
        description: bankAccountNumber
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: isActive
      is_default:
        type: boolean
        example: false
        description: isDefault
      is_link_verified:
        type: boolean
        example: true
        description: isLinkVerified
      link_verified_date:
        type: string
        format: date-time
        example: '2017-11-01'
        description: linkVerifiedDate
      mask:
        type: string
        description: mask
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: xyz
        description: name
      routing:
        type: string
        example: 091000022
        description: routing
      routing_wire:
        type: string
        example: routing_wire
        description: routingWire
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      type:
        type: string
        example: saving
        description: type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: BankLink
    description: BankLink Object
  BankLinkMap:
    type: object
    required:
      - bank_link_id
      - weight
    properties:
      bank_link_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: bankLinkId
      weight:
        type: number
        format: float
        example: 1
        description: weight
    title: BankLinkMap
  Benchmark:
    type: object
    required:
      - name
    properties:
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      composition:
        type: array
        example: {}
        description: composition
        items:
          $ref: '#/definitions/BenchmarkComposition'
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: sample
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: isActive
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: XYZ
        description: name
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Benchmark
    description: Benchmark Object
  BenchmarkComposition:
    type: object
    required:
      - security_id
      - weight
    properties:
      security_id:
        type: string
        format: uuid
        description: securityId
      weight:
        type: number
        format: double
        description: weight
    title: BenchmarkComposition
  Budget:
    type: object
    required:
      - client_id
      - currency_code
      - frequency_unit
      - name
    properties:
      account_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: accountId
      aggregation_accounts:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/BudgetAggregationAccount'
      budget:
        type: array
        items:
          $ref: '#/definitions/BudgetObject'
      client_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      end_date:
        type: string
        format: date-time
        example: '2018-06-28'
        description: endDate
      frequency:
        type: integer
        format: int32
        example: 1
        description: frequency
      frequency_unit:
        type: string
        example: daily
        description: frequencyUnit
      goal_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: goalId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: Name
        description: name
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      start_date:
        type: string
        format: date-time
        example: '2018-06-28'
        description: startDate
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Budget
    description: Budget Object
  BudgetAggregationAccount:
    type: object
    required:
      - aggregation_account_id
    properties:
      aggregation_account_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: node_id
    title: BudgetAggregationAccount
  BudgetObject:
    type: object
    required:
      - category
      - value
    properties:
      category:
        type: string
        example: category
        description: category
      subcategory:
        type: string
        example: subcategory
        description: subcategory
      value:
        type: number
        format: double
        example: 100000
        description: value
    title: BudgetObject
    description: BudgetObject Object
  BulkTransaction:
    type: object
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      data:
        type: object
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      status:
        type: string
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: BulkTransaction
  BulkTransactionVO:
    type: object
    properties:
      error:
        type: object
      id:
        type: string
        format: uuid
      progress:
        type: object
      status:
        type: string
      success:
        type: object
    title: BulkTransactionVO
  Campaign:
    type: object
    required:
      - description
      - end_date
      - start_date
      - title
    properties:
      campaign_category:
        type: string
      campaign_plan_id:
        type: string
        format: uuid
        example: 8961182f-577d-451a-9ff1-1a8ef792efe2
        description: campaignPlanId
      cookie_code:
        type: string
        example: sample
        description: cookieCode
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: get users from example.com
        description: description
      end_date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: endDate
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_acquisition:
        type: boolean
        example: true
        description: isAcquisition
      is_active:
        type: boolean
        example: true
        description: isActive
      landing_page:
        type: string
        example: Onboarding
        description: landingPage
      metadata:
        type: object
        additionalProperties:
          type: string
      rate:
        type: number
        format: double
        example: 100
        description: rate
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      start_date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: startDate
      title:
        type: string
        example: Summer Onboarding
        description: title
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      utm_campaign:
        type: string
        example: Summer-Onboarding
        description: utmCampaign
      utm_content:
        type: string
        example: Want to save extra?
        description: utmContent
      utm_medium:
        type: string
        example: Social Media
        description: utmMedium
      utm_source:
        type: string
        example: Banner Add
        description: utmSource
      utm_term:
        type: string
        example: Sample Term
        description: utmTerm
    title: Campaign
    description: Campaign Object
  CampaignData:
    type: object
    required:
      - campaign_id
      - end_date
      - start_date
    properties:
      campaign_id:
        type: string
        format: uuid
        example: f572eedd-deab-4efd-9b30-9e74787cad44
        description: campaignId
      click_through_rate:
        type: number
        format: double
        example: 100
        description: clickThroughRate
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      end_date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: endDate
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      line_item:
        type: string
        example: banner click through
        description: lineItem
      metadata:
        type: object
        additionalProperties:
          type: string
      publisher_campaign_name:
        type: string
        example: Example Campaign Inc
        description: publisherCampaignName
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      start_date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: startDate
      total_clicks:
        type: integer
        format: int64
        example: 10000
        description: clickThroughRate
      total_impressions:
        type: integer
        format: int64
        example: 100000
        description: totalImpressions
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: CampaignData
    description: CampaignData Object
  CampaignPlan:
    type: object
    required:
      - description
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: Affiliate Marketing
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: isActive
      metadata:
        type: object
        additionalProperties:
          type: string
      plan_rates:
        type: array
        example: {}
        description: planRates
        items:
          $ref: '#/definitions/CampaignPlanRate'
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: CampaignPlan
    description: CampaignPlan Object
  CampaignPlanRate:
    type: object
    required:
      - max_asset
      - min_asset
      - rate
    properties:
      max_asset:
        type: number
        format: double
        example: 100
        description: maxAsset
      min_asset:
        type: number
        format: double
        example: 1
        description: maxAsset
      rate:
        type: number
        format: double
        example: 50
        description: maxAsset
    title: CampaignPlanRate
    description: CampaignPlanRate Object
  Card:
    type: object
    required:
      - card_holder_name
      - card_issuance
      - card_name
      - card_type
      - client_id
      - currency_code
      - institution_name
    properties:
      account_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: accountId
      address:
        type: array
        example: []
        readOnly: true
        items:
          $ref: '#/definitions/CardAddress'
      card_holder_name:
        type: string
        example: XYZ
        description: cardHolderName
      card_image:
        type: string
        example: /sample.png
        description: card_image
      card_issuance:
        type: string
        example: virtual
        description: cardIssuance
      card_name:
        type: string
        example: Visa
        description: cardName
      card_network:
        type: string
        example: Discover
        description: cardNetwork
      card_program_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: cardProgramId
      card_type:
        type: string
        example: credit
        description: cardType
      client_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      credit_limit:
        type: number
        format: double
        example: 10000000
        description: creditLimit
      currency_code:
        type: string
        example: USD
        description: currencyCode
      expiry_date:
        type: string
        format: date-time
        example: 06/28/2018
        description: expiryDate
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      institution_name:
        type: string
        example: XYZ
        description: institutionName
      is_active:
        type: boolean
        example: true
        description: is_active
      is_primary:
        type: boolean
        example: false
        description: is_primary
      is_reloadable:
        type: boolean
        example: false
        description: is_reloadable
      mask:
        type: string
        example: xyz
        description: mask
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      phone_number:
        type: string
        example: 222-222-2222
        description: phoneNumber
      portfolio_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: portfolioId
      prepaid_amount:
        type: number
        format: float
        example: 100
        description: prepaidAmount
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      spending_limit_atm:
        type: number
        format: double
        example: 100000
        description: spendingLimitAtm
      spending_limit_purchase:
        type: number
        format: double
        example: 100000
        description: spendingLimitPurchase
      status:
        type: string
        description: status
      transaction_limit:
        type: integer
        format: int32
        example: 100000
        description: transactionLimit
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Card
    description: Card Object
  CardAddress:
    type: object
    required:
      - address_line1
      - city
      - country
      - state
      - type
    properties:
      address_line1:
        type: string
        example: Apt 404B
        description: addressLine1
      address_line2:
        type: string
        example: Example Street
        description: addressLine2
      city:
        type: string
        example: New York
        description: city
      country:
        type: string
        example: US
        description: country
      postalcode:
        type: string
        example: 10001
        description: postalcode
      state:
        type: string
        example: CA
        description: state
      type:
        type: string
        example: Home
        description: type
    title: CardAddress
    description: CardAddress Object
  CardProgram:
    type: object
    required:
      - card_issuer
      - card_network
      - card_processor
      - card_type
      - issuing_bank
      - name
    properties:
      card_issuer:
        type: string
        example: visa
        description: cardIssuer
      card_network:
        type: string
        example: xyz
        description: cardNetwork
      card_processor:
        type: string
        example: xyz
        description: cardProcessor
      card_type:
        type: string
        example: credit
        description: cardType
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      code:
        type: string
        example: xyz
        description: code
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: XYZ
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      issuing_bank:
        type: string
        example: RBC
        description: issuingBank
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: Visa
        description: name
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: CardProgram
    description: CardProgram Object
  Cash:
    type: object
    required:
      - amount
      - transaction_type
    properties:
      amount:
        type: number
        format: double
        example: 30.89
        description: cashAmount
      name:
        type: string
        example: name
        description: cashName
      transaction_type:
        type: string
        example: deposit
        description: cashTransactionType
    title: Cash
    description: Cash Object
  CategoriesMap:
    type: object
    required:
      - amount
      - category
    properties:
      amount:
        type: integer
        format: int32
        example: 1
        description: amount
      category:
        type: string
        example: Debit
        description: category
    title: CategoriesMap
  ChatInfo:
    type: object
    required:
      - chat_log
    properties:
      assigned_to:
        type: string
        format: uuid
        example: 38eb9a3b-6e7d-4a36-ba8a-0e9e7b7c7a84
        description: assignedTo
      chat_log:
        type: string
        example: balance
        description: chatInfo
      comments:
        type: string
        example: Investing
        description: comments
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_notification:
        type: boolean
        example: true
        description: isNotification
      is_open:
        type: boolean
        example: true
        description: isOpen
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: ChatInfo
    description: ChatInfo Object
  Client:
    type: object
    required:
      - client_type
      - username
    properties:
      address:
        type: array
        items:
          $ref: '#/definitions/ClientAddress'
      citizenship_status:
        type: string
        example: xyz
        description: citizenshipStatus
      client_type:
        type: string
        example: admin
        description: clientTypeId
      country_of_citizenship:
        type: array
        example:
          - US
        description: countryOfCitizenship
        items:
          type: string
      country_of_residence:
        type: string
        example: US
        description: countryOfResidence
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      date_of_birth:
        type: string
        format: date-time
        example: '1900-01-01'
        description: dateOfBirth
      email:
        type: string
        example: sample@example.com
        description: email
      employment:
        $ref: '#/definitions/Employment'
      firm_name:
        type: string
        example: firm
        description: firmName
      first_name:
        type: string
        example: Joe
        description: firstName
      gender:
        type: string
        example: male
        description: gender
      hydro_id:
        type: string
        example: 10lm4nz
        description: hydroId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      identification_number:
        type: string
        example: 111-22-3333
        description: identificationNumber
      identification_number_type:
        type: string
        example: SSN
        description: identificationNumberType
      image:
        type: string
        example: /sample.png
        description: image
      income:
        type: integer
        format: int32
        example: 1
        description: income
      is_active:
        type: boolean
        example: true
        description: isActive
      is_verified:
        type: boolean
        example: true
        description: isVerified
      last_name:
        type: string
        example: Smith
        description: last_name
      liquid_net_worth:
        type: number
        format: double
        example: 10000
        description: liquidNetWorth
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      middle_name:
        type: string
        example: Joe
        description: middleName
      phone_number:
        type: string
        example: 222-222-2222
        description: phoneNumber
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      suffix:
        type: string
        example: xyz
        description: suffix
      title:
        type: string
        example: Mr.
        description: title
      total_net_worth:
        type: number
        format: double
        example: 10000
        description: totalNetWorth
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      username:
        type: string
        example: sample@example.com
        description: username
    title: Client
    description: Client Object
  ClientAccountAdvisorVO:
    type: object
    properties:
      account_assets:
        type: number
        format: double
      account_name:
        type: string
      account_type:
        type: string
      as_of_date:
        type: string
        format: date-time
    title: ClientAccountAdvisorVO
  ClientAccountMapping:
    type: object
    required:
      - client_account_association_type
      - client_id
    properties:
      client_account_association_type:
        type: string
        example: owner
        description: clientAccountAssociationType
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      signature_data:
        type: string
        example: _RtqHPsnMD
        readOnly: true
    title: ClientAccountMapping
    description: ClientAccountMapping Object
  ClientAccountVO:
    type: object
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/AccountVO'
      client_asset_size:
        type: number
        format: double
      client_asset_size_date:
        type: string
        format: date-time
      client_first_name:
        type: string
      client_id:
        type: string
        format: uuid
      client_last_name:
        type: string
      deposits:
        type: array
        items:
          $ref: '#/definitions/DepositAccountVO'
      withdrawals:
        type: array
        items:
          $ref: '#/definitions/WithdrawalAccountVO'
    title: ClientAccountVO
  ClientAddress:
    type: object
    required:
      - address_line1
      - city
      - country
      - state
      - type
    properties:
      address_line1:
        type: string
        example: Apt 404B
        description: addressLine1
      address_line2:
        type: string
        example: Example Street
        description: addressLine2
      city:
        type: string
        example: New York
        description: city
      country:
        type: string
        example: US
        description: country
      is_primary:
        type: boolean
        example: false
        description: ' is_primary'
      postalcode:
        type: string
        example: 10001
        description: postalcode
      state:
        type: string
        example: CA
        description: state
      type:
        type: string
        example: Home
        description: type
    title: ClientAddress
    description: ClientAddress Object
  ClientAdvisorOverviewVO:
    type: object
    properties:
      age:
        type: integer
        format: int32
      client_account_list:
        type: array
        items:
          $ref: '#/definitions/ClientAccountAdvisorVO'
      client_assets:
        $ref: '#/definitions/ClientAssetsAdvisorVO'
      client_id:
        type: string
        format: uuid
      date_of_birth:
        type: string
        format: date-time
      first_name:
        type: string
      gender:
        type: string
      income:
        type: integer
        format: int32
      last_name:
        type: string
    title: ClientAdvisorOverviewVO
  ClientAnalyticsHistory:
    type: object
    properties:
      date:
        type: string
        format: date-time
      total_nucleus_clients:
        type: integer
        format: int64
      total_nucleus_clients_active:
        type: integer
        format: int64
      total_nucleus_clients_inactive:
        type: integer
        format: int64
    title: ClientAnalyticsHistory
  ClientAnalyticsResponse:
    type: object
    properties:
      average_nucleus_clients_daily:
        type: string
      average_nucleus_clients_total:
        type: string
      client_id:
        type: string
      history:
        type: array
        items:
          $ref: '#/definitions/ClientAnalyticsHistory'
      tenants:
        type: array
        items:
          $ref: '#/definitions/ClientAnalyticsTenants'
      total_nucleus_clients:
        type: integer
        format: int64
      total_nucleus_clients_active:
        type: integer
        format: int64
      total_nucleus_clients_inactive:
        type: integer
        format: int64
    title: ClientAnalyticsResponse
  ClientAnalyticsTenants:
    type: object
    properties:
      client_id:
        type: string
      total_nucleus_clients:
        type: integer
        format: int64
      total_nucleus_clients_active:
        type: integer
        format: int64
      total_nucleus_clients_inactive:
        type: integer
        format: int64
    title: ClientAnalyticsTenants
  ClientAssetsAdvisorVO:
    type: object
    properties:
      as_of_date:
        type: string
        format: date-time
      total_assets:
        type: number
        format: double
    title: ClientAssetsAdvisorVO
  ClientCampaignMapping:
    type: object
    required:
      - campaign_id
    properties:
      campaign_id:
        type: string
        format: uuid
        example: f572eedd-deab-4efd-9b30-9e74787cad44
        description: campaignId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      ip:
        type: string
        example: 127.000.000
        description: ip
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: ClientCampaignMapping
    description: ClientCampaignMapping Object
  ClientHydro:
    type: object
    required:
      - client_id
      - hydro_id
    properties:
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      hydro_id:
        type: string
        example: 10lm4nz
        description: hydroId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_client_raindrop_enabled:
        type: boolean
      is_client_raindrop_linked:
        type: boolean
      is_hydro_id_verified:
        type: boolean
        example: false
        description: isHydroIdVerified
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: ClientHydro
    description: ClientHydro Object
  ClientResponse:
    type: object
    required:
      - answer_id
      - answer_value
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: account_id
      answer_id:
        type: string
        format: uuid
        example: cf9de92f-1c59-4188-93af-d7d5cefd0644
        description: answerId
      answer_value:
        type: string
        example: 1
        description: answerValue
      application_id:
        type: string
        example: dfhasio232fdas3324
        description: application_id
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: client_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: ClientResponse
    description: ClientResponse Object
  ClientStatus:
    type: object
    required:
      - client_id
      - stage_id
      - status
    properties:
      client_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: clientId
      comments:
        type: string
        example: invested
        description: comments
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      stage_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientLevelId
      status:
        type: string
        example: complete
        description: status
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: ClientStatus
    description: ClientStatus Object
  ClientViewGoalData:
    type: object
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/VAccountVO'
      accumulation_horizon:
        type: number
        format: double
      decumulation_horizon:
        type: number
        format: double
      goal_amount:
        type: number
        format: double
      goal_asset_size_by_goal:
        type: number
        format: double
      goal_asset_size_by_goal_date:
        type: string
        format: date-time
      goal_category:
        type: string
      goal_create_date:
        type: string
        format: date-time
      goal_id:
        type: string
        format: uuid
      goal_name:
        type: string
      goal_type:
        type: string
      goal_update_date:
        type: string
        format: date-time
      is_decumulation:
        type: boolean
      portfolios:
        type: array
        items:
          $ref: '#/definitions/VPortfolioVO'
    title: ClientViewGoalData
  Consultation:
    type: object
    properties:
      account_type_id:
        type: string
        format: uuid
        example: 50d76212-0fcd-4d36-8633-e4a52cbcb79f
        description: accountTypeId
      additional_questions:
        type: string
        example: What is my potential return?
        description: additionalQuestions
      assets:
        type: string
        example: 5000
        description: assets
      assigned:
        type: string
        example: admin
        description: assigned
      calendar:
        type: boolean
        example: true
        description: calendar
      category:
        type: string
        example: new account
        description: category
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      close_time:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: closeTime
      closed_by:
        type: string
        example: admin
        description: closedBy
      comments:
        type: string
        example: wants to open account
        description: comments
      completed:
        type: boolean
        example: true
        description: completed
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      email:
        type: string
        example: sample@email.com
        description: email
      firmname:
        type: string
        example: XYZ inc
        description: firmname
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      investment_allocation:
        type: string
        example: moderate
        description: investmentAllocation
      investment_location:
        type: string
        example: US
        description: investmentLocation
      investment_objectives:
        type: string
        example: long term growth
        description: investmentObjectives
      is_active:
        type: boolean
        example: true
        description: isActive
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: Sample Name
        description: name
      phone:
        type: string
        example: 111-111-1111
        description: phone
      reminded:
        type: boolean
        example: true
        description: reminded
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      source:
        type: string
        example: friend
        description: source
      time:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: time
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Consultation
    description: Consultation Object
  Country:
    type: object
    required:
      - alpha2_code
      - country
    properties:
      alpha2_code:
        type: string
        example: AE
        description: alpha_2_code
      alpha3_code:
        type: string
        example: ARE
        description: alpha_3_code
      country:
        type: string
        example: United Arab Emirates
        description: country
      latitude:
        type: number
        format: double
        example: 23.424076
        description: latitude
      longitude:
        type: number
        format: double
        example: 53.847818
        description: longitude
    title: Country
    description: Country Object
  Currency:
    type: object
    properties:
      alphabetic_code:
        type: string
        example: AWG
        description: alphabetic_code
      currency:
        type: string
        example: Azerbaijan Manat
        description: currency
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      numeric_code:
        type: string
        example: 944
        description: numeric_code
    title: Currency
    description: Currency Object
  Customer:
    type: object
    required:
      - company_name
    properties:
      address:
        type: array
        items:
          $ref: '#/definitions/CustomerAddress'
      client_id:
        type: string
        format: uuid
        example: 50d76212-0fcd-4d36-8633-e4a52cbcb79f
        description: clientId
      company_name:
        type: string
        example: hydrogen
        description: companyName
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: zgzIeci1iCzGYuqwNiFM
        description: description
      first_name:
        type: string
        example: firstname
        description: firstName
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      identification_number:
        type: string
        example: vAh1e9nuzp5NHmM6derx
        description: identificationNumber
      is_active:
        type: boolean
        example: true
        description: isActive
      last_name:
        type: string
        example: lastName
        description: lastName
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      status:
        type: string
        example: Completed
        description: status
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Customer
    description: Customer Object
  CustomerAddress:
    type: object
    required:
      - address_line1
      - city
      - country
      - state
      - type
    properties:
      address_line1:
        type: string
        example: Apt 404B
        description: addressLine1
      address_line2:
        type: string
        example: Example Street
        description: addressLine2
      city:
        type: string
        example: New York
        description: city
      country:
        type: string
        example: US
        description: country
      postalcode:
        type: string
        example: 10001
        description: postalcode
      state:
        type: string
        example: CA
        description: state
      type:
        type: string
        example: Home
        description: type
    title: CustomerAddress
    description: CustomerAddress Object
  CustomerRevenue:
    type: object
    required:
      - currency_code
      - customer_id
      - date
      - revenue
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currency_code
      customer_id:
        type: string
        format: uuid
        example: 50d76212-0fcd-4d36-8633-e4a52cbcb79f
        description: customerId
      date:
        type: string
        format: date-time
        example: '2020-03-18'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      revenue:
        type: number
        format: double
        example: 10
        description: revenue
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: CustomerRevenue
    description: Customer Revenue Object
  DailyDeposit:
    type: object
    required:
      - account_id
      - amount
      - funding_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      account_number:
        type: string
        example: 569347
        description: accountNumber
      amount:
        type: number
        format: double
        example: 1004
        description: amount
      comments:
        type: string
        example: Funded
        description: comments
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      direction:
        type: string
        example: Incoming
        description: direction
      funding_id:
        type: string
        format: uuid
        example: ea30e8b7-3946-46ed-975a-4870a57d119s
        description: fundingId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      invested_date:
        type: string
        format: date-time
        example: '2018-01-29'
        description: investedDate
      last_request_date:
        type: string
        format: date-time
        example: '2018-01-29'
        description: last_request_date
      metadata:
        type: object
        additionalProperties:
          type: string
      notes:
        type: string
        example: Sample
        description: notes
      portfolio_id:
        type: string
        format: uuid
        example: ea30e8b7-3946-46ed-975a-4870a57d119s
        description: portfolio_id
      received_date:
        type: string
        format: date-time
        example: '2018-01-29'
        description: receivedDate
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      status:
        type: string
        example: in process
        description: status
      status_time_stamp:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: statusTimeStamp
      type:
        type: string
        example: one-time
        description: type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: DailyDeposit
    description: DailyDeposit Object
  DailyWithdrawal:
    type: object
    required:
      - account_id
      - amount
      - withdrawal_date
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      account_number:
        type: string
        example: bKU8LQ6gI
        description: accountNumber
      amount:
        type: number
        format: double
        example: 100.5
        description: amount
      comments:
        type: string
        example: Funded
        description: comments
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      direction:
        type: string
        example: withdrawal
        description: direction
      fees:
        type: string
        example: 0
        description: fees
      funding_id:
        type: string
        format: uuid
        example: ea30e8b7-3946-46ed-975a-4870a57d119s
        description: fundingId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      last_request_date:
        type: string
        format: date-time
        example: '2018-01-29'
        description: lastRequestDate
      metadata:
        type: object
        additionalProperties:
          type: string
      notes:
        type: string
        example: Sample
        description: notes
      portfolio_id:
        type: string
        format: uuid
        example: ea30e8b7-3946-46ed-975a-4870a57d119s
        description: portfolio_id
      received_date:
        type: string
        format: date-time
        example: '2018-01-29'
        description: received_date
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      status:
        type: string
        example: in process
        description: status
      status_time_stamp:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: statusTimeStamp
      type:
        type: string
        example: Routine Withdrawal
        description: type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      withdrawal_date:
        type: string
        format: date-time
        example: '2018-01-29'
        description: withdrawalDate
    title: DailyWithdrawal
    description: DailyWithdrawal Object
  DateDoubleVO:
    type: object
    properties:
      additions:
        type: number
        format: double
        example: 0
        description: additions
      date:
        type: string
        example: '2018-02-03'
        description: date
      value:
        type: number
        format: double
        example: 20000
        description: value
    title: DateDoubleVO
    description: Date-Double Mapping Object
  DecisionTree:
    type: object
    required:
      - name
    properties:
      category:
        type: string
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: This tree allocates clients taxable portfolios.
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: tree1
        description: name
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      subcategory:
        type: string
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: DecisionTree
    description: DecisionTree Object
  DecisionTreeCO:
    type: object
    required:
      - answers
      - entity_type
    properties:
      answers:
        type: array
        items:
          $ref: '#/definitions/AnswerMap'
      entity_type:
        type: string
    title: DecisionTreeCO
  DecisionTreeResultVO:
    type: object
    properties:
      entity_id:
        type: array
        items:
          type: string
          format: uuid
      entity_type:
        type: string
    title: DecisionTreeResultVO
  DepositAccountVO:
    type: object
    properties:
      deposit_account_id:
        type: string
        format: uuid
      deposit_account_name:
        type: string
      deposit_amount:
        type: number
        format: double
      deposit_direction:
        type: string
      deposit_id:
        type: string
        format: uuid
      deposit_received_date:
        type: string
        format: date-time
    title: DepositAccountVO
  DepositVO:
    type: object
    properties:
      deposit_amount:
        type: number
        format: double
      deposit_direction:
        type: string
      deposit_id:
        type: string
        format: uuid
      deposit_received_date:
        type: string
        format: date-time
    title: DepositVO
  Document:
    type: object
    required:
      - doc_name
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      country_of_issue:
        type: string
        example: qwerwerewq==
        description: country_of_issue
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      doc_file:
        type: string
        example: qwerwerewq==
        description: doc_file
      doc_image_back:
        type: string
        example: qwerwerewq==
        description: doc_image_back
      doc_image_front:
        type: string
        example: qwerwerewq==
        description: doc_image_front
      doc_name:
        type: string
        example: Social Security Card
        description: doc_name
      doc_number:
        type: string
        example: 123456ffds
        description: doc_number
      doc_size:
        type: integer
        format: int64
        example: 1516
        description: doc_size
      doc_type:
        type: string
        example: client_document
        description: doc_type
      expiry_date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: expiry_date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      is_verified:
        type: boolean
        example: false
        description: is_verified
      issue_date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: issue_date
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      state_of_issue:
        type: string
        example: qwerwerewq==
        description: state_of_issue
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      url_path:
        type: string
        example: /sample.pdf
        description: url_path
    title: Document
    description: Document Object
  Employment:
    type: object
    properties:
      employer:
        type: string
        example: xyz
        description: employer
      employment_status:
        type: string
        example: student
        description: employmentStatus
      job_title:
        type: string
        example: xyz
        description: jobTitle
      occupation:
        type: string
        example: xyz
        description: occupation
    title: Employment
    description: Employment Object
  ExternalAccountTransfer:
    type: object
    required:
      - account_holder
      - account_id
      - account_number
      - account_type_id
      - firm_name
      - transfer_all_cash
      - transfer_date
    properties:
      account_holder:
        type: string
        example: John Smith
        description: External Account Transfer accountHolder
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: External Account Transfer account id
      account_number:
        type: string
        example: 5889632592
        description: External Account Transfer account number
      account_type_id:
        type: string
        format: uuid
        example: 50d76212-0fcd-4d36-8633-e4a52cbcb79f
        description: External Account Transfer account type id
      amount:
        type: number
        format: double
        example: 100
        description: External Account Transfer amount
      comment:
        type: string
        example: sample
        description: External Account Transfer comment
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      dtc_number:
        type: string
        example: 345928204
        description: External Account Transfer dtcNumber
      firm_name:
        type: string
        example: Vanguard
        description: External Account Transfer firm name
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        additionalProperties:
          type: string
      received_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      roth_five_year:
        type: integer
        format: int32
        example: 2
        description: External Account Transfer roth five year
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      status:
        type: string
        example: pending
        description: External Account Transfer status
      status_time_stamp:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      transfer_all_cash:
        type: boolean
        example: true
        description: External Account Transfer transfer all cash
      transfer_date:
        type: string
        format: date-time
        description: External Account Transfer account transfer date
      transfer_type:
        type: string
        example: WIRE
        description: External Account Transfer transfer type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: ExternalAccountTransfer
  FAQKeyword:
    type: object
    required:
      - keyword
      - priority
    properties:
      keyword:
        type: string
        example: goal
        description: keyword
      priority:
        type: integer
        format: int64
        example: 1
        description: priority
    title: FAQKeyword
  Faq:
    type: object
    required:
      - answer
      - question
    properties:
      answer:
        type: string
        example: Sample
        description: answer
      category:
        type: string
        example: Account Opening
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      faq_keywords:
        type: array
        items:
          $ref: '#/definitions/FAQKeyword'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: isActive
      is_featured:
        type: boolean
        example: true
        description: isFeatured
      metadata:
        type: object
        additionalProperties:
          type: string
      number:
        type: integer
        format: int32
        example: 1
        description: number
      question:
        type: string
        example: What types of accounts can I open and transfer?
        description: question
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      seo_name:
        type: string
        example: Taxable
        description: seoName
      subcategory:
        type: string
        example: Taxable
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Faq
    description: Faq Object
  Feature:
    type: object
    required:
      - feature_name
    properties:
      application_id:
        type: string
        format: uuid
        example: application_id
        description: application_id
      category:
        type: string
        example: setup
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      feature_name:
        type: string
        example: link account
        description: feature_name
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      page_name:
        type: string
        example: account
        description: page_name
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      subcategory:
        type: string
        example: link account
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Feature
    description: Track Feature Object
  FeatureTrack:
    type: object
    required:
      - client_id
      - feature_id
    properties:
      client_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: client_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      feature_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: feature_id
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      visit_time_stamp:
        type: string
        format: date-time
        example: '2018-11-29T14:48:38.000+0000'
        description: visit_time_stamp
    title: FeatureTrack
    description: Feature Track Object
  FinancialOffer:
    type: object
    required:
      - category
      - institution_name
      - name
      - offer_link
    properties:
      affiliate_rate:
        type: number
        format: double
        example: 0.88
        description: affiliateRate
      campaign_id:
        type: string
        format: uuid
        example: 24ada6e3-bbf9-4ef1-bb31-1fc7103b2301
        description: campaignId
      category:
        type: string
        example: category
        description: category
      client_review:
        type: string
        example: clientReview
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      description:
        type: string
        example: description
        description: description
      document_id:
        type: string
        example: documentId
      fee_amount:
        type: number
        format: double
        example: 100
        description: feeAmount
      fee_type:
        type: string
        example: feeType
      financial_rate:
        type: number
        format: double
        example: 0.88
        description: financialRate
      financial_rate_term:
        type: number
        format: double
        example: 0.88
        description: financialRateTerm
      financial_rate_term_unit:
        type: string
        example: financialRateTermUnit
        description: financialRateTermUnit
      financial_rate_type:
        type: string
        example: financialRateType
        description: financialRateType
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      image:
        type: string
        example: image
        description: image
      institution_name:
        type: string
        example: institution_name
        description: institution_name
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      minimum_contribution:
        type: number
        format: double
        example: minimumContribution
        description: minimumContribution
      minimum_contribution_term:
        type: number
        format: double
        example: 0.88
        description: minimumContributionTerm
      minimum_contribution_term_unit:
        type: string
        example: minimumContributionTermUnit
        description: minimumContributionTermUnit
      name:
        type: string
        example: Name
        description: name
      node_map:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/AllocationNodeMap'
      offer_link:
        type: string
        example: offerLink
        description: offerLink
      offer_term:
        type: number
        format: double
        example: offerTerm
        description: offerTerm
      offer_term_unit:
        type: string
        example: offerTermUnit
        description: offerTermUnit
      prerequisite:
        type: string
        example: 100
        description: prerequisite
      prerequisite_type:
        type: string
        example: prerequisite_type
      rating:
        type: string
        example: rating
        description: rating
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      subcategory:
        type: string
        example: subcategory
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: FinancialOffer
    description: Financial Offer Object
  Funding:
    type: object
    required:
      - account_id
      - frequency_unit
      - funding_status
      - funding_type
      - is_deposit
      - start_date
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      amount:
        type: number
        format: double
        example: 100
        description: amount
      bank_link_id:
        type: string
        format: uuid
        example: 02ec7d90-02fc-46c7-b201-def9b16ef65a
        description: bankLinkId
      card_id:
        type: string
        format: uuid
        example: 8ac40bd2-84a7-4896-804d-b837ef1df5f5
        description: cardId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      description:
        type: string
        example: Funding account
        description: description
      end_date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: endDate
      frequency:
        type: integer
        format: int32
        example: 1
        description: frequency
      frequency_unit:
        type: string
        example: one_time
        description: frequencyUnit
      funding_status:
        type: string
        example: request_received
        description: fundingStatus
      funding_type:
        type: string
        example: bank_transfer
        description: fundingType
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: isActive
      is_deposit:
        type: boolean
        example: true
        description: isDeposit
      last_request_date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: lastRequestDate
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      next_request_date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: nextRequestDate
      portfolio_id:
        type: string
        format: uuid
        example: ea30e8b7-3946-46ed-975a-4870a57d119s
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      start_date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: startDate
      support_ticket_id:
        type: string
        format: uuid
        example: 3551b26c-7080-4c4b-a8fc-9ce9360460ba
        description: supportTicketId
      transfer_id:
        type: string
        format: uuid
        example: 8ac40bd2-84a7-4896-804d-b837ef1df5f5
        description: transferId
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Funding
    description: Funding Object
  FundingRequestMap:
    type: object
    required:
      - funding_id
    properties:
      funding_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: funding_id
    title: FundingRequestMap
  Goal:
    type: object
    required:
      - name
    properties:
      accumulation_horizon:
        type: number
        format: double
      category:
        type: string
        example: retirement
        description: category
      client_id:
        type: string
        format: uuid
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      decumulation_horizon:
        type: number
        format: double
      goal_amount:
        type: number
        format: double
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      image:
        type: string
        example: image
        description: image
      is_active:
        type: boolean
        example: false
        description: isActive
      is_decumulation:
        type: boolean
        example: true
        description: isDecumulation
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: sample
        description: Goal name
      parent_goal_id:
        type: string
        format: uuid
        example: 9a1c0a9f-c699-46a2-9710-8b2abe10526c
        description: Goal Parent Goal Id
      questionnaire_id:
        type: string
        format: uuid
        example: 647c54c3-b649-477e-8cc7-eee56a120dd3
        description: questionnaire_id
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      type:
        type: string
        example: type
        description: type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Goal
  GoalAccountMapping:
    type: object
    required:
      - goal_id
    properties:
      accumulation_horizon:
        type: number
        format: double
        example: 15
        description: accumulationHorizon
      goal_amount:
        type: number
        format: double
        example: 100000
        description: goalAmount
      goal_id:
        type: string
        format: uuid
        example: 9a1c0a9f-c699-46a2-9710-8b2abe10526c
        description: goalId
    title: GoalAccountMapping
    description: GoalAccountMapping Object
  GoalTrack:
    type: object
    required:
      - goal_id
      - status_time_stamp
    properties:
      accounts:
        type: array
        items:
          $ref: '#/definitions/GoalTrackAccounts'
      accumulation_horizon:
        type: number
        format: double
        example: 10.2
        description: accumulationHorizon
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      current_investment:
        type: number
        format: double
        example: 10.2
        description: currentInvestment
      decumulation_horizon:
        type: number
        format: double
        example: 10.2
        description: decumulationHorizon
      goal_achievement_score:
        type: number
        format: double
        example: 0.9
        description: goalAchievementScore
      goal_amount:
        type: number
        format: double
        example: 0.9
        description: goalAmount
      goal_id:
        type: string
        format: uuid
        example: 9a1c0a9f-c699-46a2-9710-8b2abe10526c
        description: goalId
      goal_probability:
        type: number
        format: double
        example: 0.9
        description: goalProbability
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      on_track:
        type: boolean
        example: true
        description: onTrack
      progress:
        type: number
        format: double
        example: 10.2
        description: progress
      projection_balance:
        type: number
        format: double
        example: 0.9
        description: projectionBalance
      projection_date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: projectionDate
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      status_time_stamp:
        type: string
        format: date-time
        example: '2018-11-16T00:00:00.000+0000'
        description: statusTimeStamp
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: GoalTrack
    description: Goal Simulation Result Object
  GoalTrackAccounts:
    type: object
    required:
      - account_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: account_id
    title: GoalTrackAccounts
  InsuranceCoverage:
    type: object
    required:
      - coverage_amount
      - currency_code
      - name
    properties:
      category:
        type: string
        example: Insurance Type
        description: category
      coverage_amount:
        type: string
        example: 100
        description: coverageAmount
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      deductible:
        type: string
        example: deductible
        description: deductible
      description:
        type: string
        example: description
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: Name
        description: name
      node_map:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/AllocationNodeMap'
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      subcategory:
        type: string
        example: Insurance Subtype
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: InsuranceCoverage
    description: Insurance Coverage Object
  InsuranceCoverageMap:
    type: object
    required:
      - insurance_coverage_id
    properties:
      insurance_coverage_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: node_id
    title: InsuranceCoverageMap
  InsuranceDiscount:
    type: object
    required:
      - name
    properties:
      category:
        type: string
        example: insurance category
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      description:
        type: string
        example: description
        description: description
      discount_amount:
        type: number
        format: double
        example: 100
        description: discountAmount
      discount_percentage:
        type: number
        format: double
        example: 100
        description: discountPercentage
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: Name
        description: name
      node_map:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/AllocationNodeMap'
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      subcategory:
        type: string
        example: insurance subcategory
        description: subcategory
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: InsuranceDiscount
    description: Insurance Discount Object
  InsuranceDiscountMap:
    type: object
    required:
      - insurance_discount_id
    properties:
      insurance_discount_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: node_id
    title: InsuranceDiscountMap
  InsuranceQuote:
    type: object
    required:
      - currency_code
      - premium
      - premium_frequency_unit
    properties:
      coverages:
        type: array
        example: []
        readOnly: true
        items:
          $ref: '#/definitions/InsuranceCoverageMap'
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currencyCode
      discounts:
        type: array
        example: []
        readOnly: true
        items:
          $ref: '#/definitions/InsuranceDiscountMap'
      end_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      node_map:
        type: array
        example: []
        readOnly: true
        items:
          $ref: '#/definitions/AllocationNodeMap'
      premium:
        type: number
        format: double
        example: 0.88
        description: premium
      premium_duration:
        type: number
        format: double
        example: 0.88
        description: premiumDuration
      premium_frequency:
        type: integer
        format: int32
        example: 1
        description: premiumFrequency
      premium_frequency_unit:
        type: string
        example: daily
        description: premiumFrequencyUnit
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      start_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: InsuranceQuote
    description: Insurance Quote Object
  Investment:
    type: object
    required:
      - price
      - quantity
      - ticker
      - trade_signal
    properties:
      fee:
        type: number
        format: double
        example: 2345
        description: fee
      price:
        type: number
        format: double
        example: 23.9
        description: price
      quantity:
        type: number
        format: double
        example: 33.9
        description: quantity
      settle_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: settleDate
      ticker:
        type: string
        example: ticker
        description: ticker
      ticker_name:
        type: string
        example: tickerName
        description: tickerName
      trade_signal:
        type: string
        example: tradeSignal
        description: tradeSignal
      value:
        type: number
        format: double
        example: 2345
        description: value
    title: Investment
    description: Investment Object
  Invoice:
    type: object
    required:
      - currency_code
      - customer_id
      - due_date
      - invoice_date
      - invoice_name
      - invoice_number
      - payment_details
    properties:
      client_id:
        type: string
        format: uuid
        example: 5cc48294-5f28-41f2-8eb4-898e83932327
        description: client_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currency_code
      customer_id:
        type: string
        format: uuid
        example: 14566616-6846-4090-beae-5b1568b82370
        description: invoice_number
      description:
        type: string
        example: invoice description
        description: description
      division:
        type: string
        example: division
        description: division
      document_id:
        type: string
        format: uuid
        example: ffec4069-f3bd-46f0-bf62-c7c77b400e37
        description: document_id
      due_date:
        type: string
        format: date-time
        example: '2020-03-18T18:17:23.579+0000'
        description: due_date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      invoice_amount:
        type: number
        format: double
      invoice_date:
        type: string
        format: date-time
        example: '2020-03-18'
        description: invoice_date
      invoice_name:
        type: string
        example: Uber invoice
        description: invoice_name
      invoice_number:
        type: string
        example: 2334889
        description: invoice_number
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      payment_details:
        type: string
        example: payment_details
        description: payment_details
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      status:
        type: string
        example: '2020-03-18T18:17:23.579+0000'
        description: status
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Invoice
    description: Invoice Object
  InvoicePayment:
    type: object
    required:
      - invoice_id
      - payment_amount
      - payment_date
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      invoice_id:
        type: string
        format: uuid
        example: 14566616-6846-4090-beae-5b1568b82370
        description: invoiceId
      payment_amount:
        type: number
        format: float
        example: 100
        description: paymentAmount
      payment_date:
        type: string
        format: date-time
        example: '2020-03-18T18:17:23.579+0000'
        description: paymentDate
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: InvoicePayment
    description: InvoicePayment Object
  JsonNode:
    type: object
    properties:
      array:
        type: boolean
      big_decimal:
        type: boolean
      big_integer:
        type: boolean
      binary:
        type: boolean
      boolean:
        type: boolean
      container_node:
        type: boolean
      double:
        type: boolean
      empty:
        type: boolean
      float:
        type: boolean
      floating_point_number:
        type: boolean
      int:
        type: boolean
      integral_number:
        type: boolean
      long:
        type: boolean
      missing_node:
        type: boolean
      node_type:
        type: string
        enum:
          - ARRAY
          - BINARY
          - BOOLEAN
          - MISSING
          - 'NULL'
          - NUMBER
          - OBJECT
          - POJO
          - STRING
      'null':
        type: boolean
      number:
        type: boolean
      object:
        type: boolean
      pojo:
        type: boolean
      short:
        type: boolean
      textual:
        type: boolean
      value_node:
        type: boolean
    title: JsonNode
  Location:
    type: object
    properties:
      address_line1:
        type: string
        example: Apt 404B
        description: addressLine1
      address_line2:
        type: string
        example: Example Street
        description: addressLine2
      city:
        type: string
        example: New York
        description: city
      country:
        type: string
        example: US
        description: country
      latitude:
        type: number
        format: double
        example: 23.9
        description: latitude
      longitude:
        type: number
        format: double
        example: 23.9
        description: longitude
      postalcode:
        type: string
        example: 10001
        description: postalcode
      state:
        type: string
        example: CA
        description: state
    title: Location
    description: Location Object
  MerchantsMap:
    type: object
    required:
      - amount
      - merchant
    properties:
      amount:
        type: integer
        format: int32
        example: 1
        description: amount
      merchant:
        type: string
        example: Uber
        description: merchant
    title: MerchantsMap
  Model:
    type: object
    required:
      - name
    properties:
      benchmark_id:
        type: string
        format: uuid
        example: f3c384dd-5895-4da8-a356-61f266269082
        description: benchmarkId
      cash_sec:
        type: string
        example: 1
        description: cashSec
      category:
        type: string
        example: tech
        description: category
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currency_code
      default_drift_factor:
        type: number
        format: float
        example: 0.55
        description: defaultDriftFactor
      description:
        type: string
        example: consists of tech ETFs
        description: description
      downside:
        type: boolean
        example: true
        description: downside
      drift_rebal:
        type: boolean
        example: true
        description: driftRebal
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: isActive
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: Tech model
        description: name
      node_map:
        type: array
        items:
          $ref: '#/definitions/AllocationNodeMap'
      period_rebal:
        type: boolean
        example: true
        description: periodRebal
      rebalance_period:
        type: integer
        format: int64
        example: 12
        description: rebalancePeriod
      safe_sec:
        type: string
        example: 1
        description: safeSec
      sec_rotation:
        type: boolean
        example: true
        description: secRotation
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      tax_efficiency_id:
        type: integer
        format: int64
        example: 1
        description: taxEfficiencyId
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Model
    description: Model Object
  ModelAssetSize:
    type: object
    required:
      - asset_size
      - date
      - model_id
    properties:
      asset_size:
        type: number
        format: double
        example: 0.9
        description: Model asset_size
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currency_code
      date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: Model asset_size date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_reconciled:
        type: boolean
        example: true
        description: Model asset_size is reconciled
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: Model asset_size Model id
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: ModelAssetSize
    description: Model Asset_Size Object
  ModelComment:
    type: object
    required:
      - comment
      - date
      - model_id
    properties:
      comment:
        type: string
        example: sample
        description: Model Comment comment
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: Model Comment date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: Model Comment Model Id
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: ModelComment
  ModelHolding:
    type: object
    required:
      - current_weight
      - date
      - model_id
      - security_id
      - strategic_weight
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      current_weight:
        type: number
        format: double
        example: 0.88
        description: Model Holding current weight
      date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: Model Holding date
      drift_factor:
        type: number
        format: float
        example: 0.9
        description: driftFactor
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_cash:
        type: boolean
        example: true
        description: isCash
      is_initial_holding:
        type: boolean
        example: true
        description: isInitialHolding
      is_safe_security:
        type: boolean
        example: true
        description: isSafeSecurity
      metadata:
        type: object
        example: {}
        readOnly: true
        additionalProperties:
          type: string
      model_description:
        type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      model_name:
        type: string
      model_weight:
        type: number
        format: double
      sec_price:
        type: number
        format: double
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      strategic_weight:
        type: number
        format: double
        example: 0.89
        description: Model Holding strategicWeight
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: ModelHolding
  ModelHoldingAgg:
    type: object
    properties:
      asset_class:
        type: string
      current_weight:
        type: number
        format: double
      securities_id:
        type: integer
        format: int64
      strategic_weight:
        type: number
        format: double
      ticker:
        type: string
    title: ModelHoldingAgg
    description: ModelHoldingAgg Object
  ModelHoldingVO:
    type: object
    properties:
      current_weight:
        type: number
        format: double
      date:
        type: string
        format: date-time
      security_id:
        type: string
        format: uuid
      strategic_weight:
        type: number
        format: double
    title: ModelHoldingVO
  ModelTransaction:
    type: object
    required:
      - date
      - model_id
      - price
      - security_id
      - shares
      - transaction_code_id
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: Date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      price:
        type: number
        format: double
        example: 100
        description: price
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      shares:
        type: number
        format: double
        example: 100
        description: shares
      transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: transactionCodeId
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: ModelTransaction
  Node:
    type: object
    required:
      - name
      - question_id
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_first:
        type: boolean
        example: true
        description: isFirst
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: node1
        description: name
      question_id:
        type: string
        format: uuid
        example: 690c6256-07dc-461b-96bd-a8059cf036f9
        description: questionId
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Node
    description: Node Object
  NodeRelationship:
    type: object
    required:
      - answer_id
      - decision_tree_id
      - node_parent_id
      - value
    properties:
      answer_id:
        type: string
        format: uuid
        example: 3942c6b8-5107-4283-b7d4-7b24629fd12f
        description: answer_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      decision_tree_id:
        type: string
        format: uuid
        example: 169b1e70-f321-4f56-883e-ec16bfc5017c
        description: decision_tree_id
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_leaf:
        type: boolean
        example: true
        description: is_leaf
      metadata:
        type: object
        additionalProperties:
          type: string
      node_child_id:
        type: string
        format: uuid
        example: e6fd4152-6d7a-4882-9f0b-9d0df6eb6d11
        description: nodeChildId
      node_parent_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: nodeParentId
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      value:
        type: string
        example: 29 Years
        description: value
    title: NodeRelationship
    description: NodeRelationship Object
  Notification:
    type: object
    required:
      - name
      - notification_type
    properties:
      application_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: application_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: notification desc
        description: description
      feature_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: feature_id
      frequency_unit:
        type: array
        example:
          - daily
        description: frequency_unit
        items:
          type: string
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: notification name
        description: name
      notification_type:
        type: string
        example: push_mobile
        description: notificationType
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      threshold_type:
        type: string
        example: false
        description: threshold_type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Notification
    description: Notification Object
  NotificationClient:
    type: object
    required:
      - client_id
      - notification_content
      - notification_date
      - notification_id
    properties:
      client_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: client_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_read:
        type: boolean
        example: true
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      notification_content:
        type: string
        example: notificationContent
        description: notification_content
      notification_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        description: notification_date
      notification_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: notification_id
      notification_image:
        type: string
        example: notification image
        description: notification_image
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: NotificationClient
    description: Notification Client Object
  NotificationSetting:
    type: object
    required:
      - client_id
      - notification_id
    properties:
      client_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: client_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      frequency:
        type: integer
        format: int32
        example: 1
        description: frequency
      frequency_unit:
        type: string
        example: one_time
        description: frequency_unit
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_receive:
        type: boolean
        example: true
        description: is_receive
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      notification_id:
        type: string
        format: uuid
        example: 04638eb3-d94d-45d6-b6f3-c685bb5a6009
        description: notification_id
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      threshold_value:
        type: number
        format: double
        example: 1
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: NotificationSetting
    description: Notification Setting Object
  Order:
    type: object
    required:
      - date
      - order_ticket_id
      - quantity
      - security_id
      - transaction_code_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_read:
        type: boolean
        example: true
        description: isRead
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      order_bulk_id:
        type: string
        format: uuid
        example: 114556fe-ee78-431d-be5e-60ae08ddf9a7
        description: orderBulkId
      order_ticket_id:
        type: string
        format: uuid
        example: 5da53a30-49e6-4162-8728-58d6348bfb24
        description: orderTicketId
      order_type:
        type: string
        example: bulk order
        description: orderType
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      price:
        type: number
        format: double
      quantity:
        type: number
        format: double
        example: 100
        description: quantity
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      tmp_tracker_id:
        type: string
        format: uuid
      transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: transactionCodeId
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Order
    description: Order Object
  OrderReconcileRequest:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
      non_fractional:
        type: boolean
      order_track_ids:
        type: array
        items:
          type: string
          format: uuid
      portfolio_id:
        type: string
        format: uuid
      tenant_id:
        type: string
        format: uuid
    title: OrderReconcileRequest
    description: OrderReconcileRequest Object
  OrderReconcileReturnObject:
    type: object
    properties:
      account_id:
        type: array
        items:
          type: string
          format: uuid
      portfolio_asset_size_id:
        type: array
        items:
          type: string
          format: uuid
      portfolio_holding_id:
        type: array
        items:
          type: string
          format: uuid
      portfolio_id:
        type: array
        items:
          type: string
          format: uuid
      portfolio_transaction_id:
        type: array
        items:
          type: string
          format: uuid
    title: OrderReconcileReturnObject
  OrderStatus:
    type: object
    required:
      - description
      - status
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: sample
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      status:
        type: string
        example: complete
        description: status
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: OrderStatus
    description: OrderStatus Object
  OrderTrack:
    type: object
    required:
      - date
      - order_id
      - order_status_id
    properties:
      commission:
        type: number
        format: double
        example: 100
        description: commission
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: date
      external_track_id:
        type: string
        example: r37
        description: externalTrackId
      fee:
        type: number
        format: double
        example: 100
        description: fee
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      order_id:
        type: string
        format: uuid
        example: 72c0c834-03e1-49c3-bf13-eb5adcba6e9e
        description: orderId
      order_status_id:
        type: string
        format: uuid
        example: 9b515c67-3791-400f-9da4-9dc69eb992ac
        description: orderStatusId
      price:
        type: number
        format: double
        example: 100
        description: price
      quantity:
        type: number
        format: double
        example: 100
        description: quantity
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: OrderTrack
    description: OrderTrack Object
  OrderVoClone:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      date:
        type: string
        format: date-time
        example: '2018-06-28'
        description: date
      is_read:
        type: boolean
        example: false
        description: isRead
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      order_bulk_id:
        type: string
        format: uuid
        example: 114556fe-ee78-431d-be5e-60ae08ddf9a7
        description: orderBulkId
      order_ticket_id:
        type: string
        format: uuid
        example: 5da53a30-49e6-4162-8728-58d6348bfb24
        description: orderTicketId
      order_type:
        type: string
        example: initial order
        description: orderType
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      price:
        type: number
        format: double
      quantity:
        type: number
        format: double
        example: 1
        description: quantity
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: transactionCodeId
    title: OrderVoClone
    description: OrderVoClone Object
  Overflow:
    type: object
    required:
      - account_id
      - client_id
      - total_overflow_amount
    properties:
      account_id:
        type: string
        format: uuid
        example: 099961da-7f41-4309-950f-2b51689a0033
        description: accountId
      client_id:
        type: string
        format: uuid
        example: 099961da-7f41-4309-950f-2b51689a0033
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      funding_requests:
        type: array
        example: []
        readOnly: true
        items:
          $ref: '#/definitions/FundingRequestMap'
      funding_start_date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: fundingStartDate
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      overflow_setting_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: overflowSettingId
      total_overflow_amount:
        type: number
        format: double
        example: 9000
        description: totalOverflowAmount
      update_balances:
        type: boolean
        example: false
        description: updateBalances
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Overflow
    description: Overflow Object
  OverflowBankLinkMap:
    type: object
    required:
      - amount
      - bank_link_id
    properties:
      amount:
        type: number
        format: double
        example: 100.5
        description: amount
      bank_link_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: bankLinkId
    title: OverflowBankLinkMap
  OverflowSettings:
    type: object
    required:
      - account_id
      - bank_links
      - client_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 099961da-7f41-4309-950f-2b51689a0033
        description: account_id
      bank_links:
        type: array
        example: []
        readOnly: true
        items:
          $ref: '#/definitions/OverflowBankLinkMap'
      client_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      portfolio_id:
        type: string
        format: uuid
        example: 099961da-7f41-4309-950f-2b51689a0033
        description: portfolio_id
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: OverflowSettings
    description: Overflow Settings Object
  Page«AccountAllocationMapping»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AccountAllocationMapping'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AccountAllocationMapping»
    description: Page Object
  Page«AccountPermissionVO»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AccountPermissionVO'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AccountPermissionVO»
    description: Page Object
  Page«AccountStatus»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AccountStatus'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AccountStatus»
    description: Page Object
  Page«AccountType»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AccountType'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AccountType»
    description: Page Object
  Page«Accounting»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Accounting'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Accounting»
    description: Page Object
  Page«Account»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Account'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Account»
    description: Page Object
  Page«AggregationAccountBalance»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AggregationAccountBalance'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AggregationAccountBalance»
    description: Page Object
  Page«AggregationAccountHolding»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AggregationAccountHolding'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AggregationAccountHolding»
    description: Page Object
  Page«AggregationAccountTransaction»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AggregationAccountTransaction'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AggregationAccountTransaction»
    description: Page Object
  Page«AggregationAccount»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AggregationAccount'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AggregationAccount»
    description: Page Object
  Page«AllocationComposition»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AllocationComposition'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AllocationComposition»
    description: Page Object
  Page«Allocation»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Allocation'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Allocation»
    description: Page Object
  Page«Answer»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Answer'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Answer»
    description: Page Object
  Page«Application»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Application'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Application»
    description: Page Object
  Page«AuditLog»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/AuditLog'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«AuditLog»
    description: Page Object
  Page«BankLink»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/BankLink'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«BankLink»
    description: Page Object
  Page«Benchmark»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Benchmark'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Benchmark»
    description: Page Object
  Page«Budget»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Budget'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Budget»
    description: Page Object
  Page«CampaignData»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/CampaignData'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«CampaignData»
    description: Page Object
  Page«CampaignPlan»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/CampaignPlan'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«CampaignPlan»
    description: Page Object
  Page«Campaign»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Campaign'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Campaign»
    description: Page Object
  Page«CardProgram»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/CardProgram'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«CardProgram»
    description: Page Object
  Page«Card»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Card'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Card»
    description: Page Object
  Page«ChatInfo»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ChatInfo'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ChatInfo»
    description: Page Object
  Page«ClientCampaignMapping»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ClientCampaignMapping'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ClientCampaignMapping»
    description: Page Object
  Page«ClientHydro»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ClientHydro'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ClientHydro»
    description: Page Object
  Page«ClientResponse»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ClientResponse'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ClientResponse»
    description: Page Object
  Page«ClientStatus»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ClientStatus'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ClientStatus»
    description: Page Object
  Page«Client»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Client'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Client»
    description: Page Object
  Page«Consultation»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Consultation'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Consultation»
    description: Page Object
  Page«CustomerRevenue»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/CustomerRevenue'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«CustomerRevenue»
    description: Page Object
  Page«Customer»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Customer'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Customer»
    description: Page Object
  Page«DailyDeposit»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/DailyDeposit'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«DailyDeposit»
    description: Page Object
  Page«DailyWithdrawal»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/DailyWithdrawal'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«DailyWithdrawal»
    description: Page Object
  Page«DecisionTree»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/DecisionTree'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«DecisionTree»
    description: Page Object
  Page«Document»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Document'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Document»
    description: Page Object
  Page«ExternalAccountTransfer»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ExternalAccountTransfer'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ExternalAccountTransfer»
    description: Page Object
  Page«Faq»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Faq'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Faq»
    description: Page Object
  Page«FeatureTrack»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/FeatureTrack'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«FeatureTrack»
    description: Page Object
  Page«Feature»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Feature'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Feature»
    description: Page Object
  Page«FinancialOffer»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/FinancialOffer'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«FinancialOffer»
    description: Page Object
  Page«Funding»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Funding'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Funding»
    description: Page Object
  Page«GoalTrack»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/GoalTrack'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«GoalTrack»
    description: Page Object
  Page«Goal»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Goal'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Goal»
    description: Page Object
  Page«InsuranceCoverage»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/InsuranceCoverage'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«InsuranceCoverage»
    description: Page Object
  Page«InsuranceDiscount»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/InsuranceDiscount'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«InsuranceDiscount»
    description: Page Object
  Page«InsuranceQuote»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/InsuranceQuote'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«InsuranceQuote»
    description: Page Object
  Page«InvoicePayment»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/InvoicePayment'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«InvoicePayment»
    description: Page Object
  Page«Invoice»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Invoice'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Invoice»
    description: Page Object
  Page«ModelAssetSize»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ModelAssetSize'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ModelAssetSize»
    description: Page Object
  Page«ModelComment»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ModelComment'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ModelComment»
    description: Page Object
  Page«ModelHolding»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ModelHolding'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ModelHolding»
    description: Page Object
  Page«ModelTransaction»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/ModelTransaction'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«ModelTransaction»
    description: Page Object
  Page«Model»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Model'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Model»
    description: Page Object
  Page«NodeRelationship»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/NodeRelationship'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«NodeRelationship»
    description: Page Object
  Page«Node»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Node'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Node»
    description: Page Object
  Page«NotificationClient»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/NotificationClient'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«NotificationClient»
    description: Page Object
  Page«NotificationSetting»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/NotificationSetting'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«NotificationSetting»
    description: Page Object
  Page«Notification»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Notification'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Notification»
    description: Page Object
  Page«OrderStatus»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/OrderStatus'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«OrderStatus»
    description: Page Object
  Page«OrderTrack»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/OrderTrack'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«OrderTrack»
    description: Page Object
  Page«Order»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Order'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Order»
    description: Page Object
  Page«OverflowSettings»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/OverflowSettings'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«OverflowSettings»
    description: Page Object
  Page«Overflow»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Overflow'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Overflow»
    description: Page Object
  Page«PortfolioAssetSizeLog»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PortfolioAssetSizeLog'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«PortfolioAssetSizeLog»
    description: Page Object
  Page«PortfolioComment»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PortfolioComment'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«PortfolioComment»
    description: Page Object
  Page«PortfolioGoal»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PortfolioGoal'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«PortfolioGoal»
    description: Page Object
  Page«PortfolioHoldingLog»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PortfolioHoldingLog'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«PortfolioHoldingLog»
    description: Page Object
  Page«PortfolioTransaction»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/PortfolioTransaction'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«PortfolioTransaction»
    description: Page Object
  Page«Portfolio»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Portfolio'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Portfolio»
    description: Page Object
  Page«Questionnaire»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Questionnaire'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Questionnaire»
    description: Page Object
  Page«Question»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Question'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Question»
    description: Page Object
  Page«RiskProfile»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/RiskProfile'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«RiskProfile»
    description: Page Object
  Page«RoundupSettings»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/RoundupSettings'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«RoundupSettings»
    description: Page Object
  Page«Roundup»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Roundup'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Roundup»
    description: Page Object
  Page«Sale»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Sale'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Sale»
    description: Page Object
  Page«Score»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Score'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Score»
    description: Page Object
  Page«SecurityExclusion»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/SecurityExclusion'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«SecurityExclusion»
    description: Page Object
  Page«SecurityPrice»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/SecurityPrice'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«SecurityPrice»
    description: Page Object
  Page«Security»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Security'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Security»
    description: Page Object
  Page«Stage»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Stage'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Stage»
    description: Page Object
  Page«SupportTicketComment»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/SupportTicketComment'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«SupportTicketComment»
    description: Page Object
  Page«SupportTicket»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/SupportTicket'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«SupportTicket»
    description: Page Object
  Page«TransactionCode»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/TransactionCode'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«TransactionCode»
    description: Page Object
  Page«VAccountAssetSize»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/VAccountAssetSize'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«VAccountAssetSize»
    description: Page Object
  Page«Webhook»:
    type: object
    properties:
      content:
        type: array
        items:
          $ref: '#/definitions/Webhook'
      first:
        type: boolean
      last:
        type: boolean
      number:
        type: integer
        format: int32
      number_of_elements:
        type: integer
        format: int32
      size:
        type: integer
        format: int32
      sort:
        type: array
        items:
          $ref: '#/definitions/Sort'
      total_elements:
        type: integer
        format: int64
      total_pages:
        type: integer
        format: int32
    title: Page«Webhook»
    description: Page Object
  PermissionVO:
    type: object
    properties:
      client_id:
        type: string
        format: uuid
        example: 3699e30f-8b2f-4727-9a84-603eac072d8c
        description: clientId
      permission_type:
        type: string
        example: INQUIRY_ACCESS
        description: permissionType
        enum:
          - INQUIRY_ACCESS
          - LIMITED_AUTHORITY
          - FULL_AUTHORITY
          - POWER_OF_ATTORNEY
    title: PermissionVO
  Portfolio:
    type: object
    required:
      - account_id
      - model_id
      - name
      - percentage
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      account_number:
        type: string
        example: true
        description: account_number
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currency_code
      description:
        type: string
        example: Stock portfolio
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      is_subledger:
        type: boolean
        example: false
        description: is_subledger
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      name:
        type: string
        example: Stock
        description: name
      percentage:
        type: number
        format: double
        example: 100
        description: percentage
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Portfolio
    description: Portfolio Object
  PortfolioAggregatedVO:
    type: object
    properties:
      asset_classes:
        type: array
        items:
          $ref: '#/definitions/SecurityDetailVO'
      categories:
        type: array
        items:
          $ref: '#/definitions/SecurityDetailVO'
      create_date:
        type: string
        format: date-time
      description:
        type: string
      industries:
        type: array
        items:
          $ref: '#/definitions/SecurityDetailVO'
      name:
        type: string
      portfolio_id:
        type: string
        format: uuid
      sectors:
        type: array
        items:
          $ref: '#/definitions/SecurityDetailVO'
      security_classes:
        type: array
        items:
          $ref: '#/definitions/SecurityDetailVO'
      update_date:
        type: string
        format: date-time
      weight:
        type: number
        format: double
    title: PortfolioAggregatedVO
  PortfolioAssetSize:
    type: object
    required:
      - account_id
      - asset_size
      - cash_flow
      - date
      - id
      - model_id
      - portfolio_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      asset_size:
        type: number
        format: double
        example: 100
        description: asset_size
      asset_size_available:
        type: number
        format: double
        example: 100
        description: asset_size_available
      asset_size_pending:
        type: number
        format: double
        example: 100
        description: asset_size_pending
      cash_flow:
        type: number
        format: double
        example: 100
        description: cash_flow
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currency_code
      date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: logId
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: PortfolioAssetSize
    description: PortfolioAssetSize Object
  PortfolioAssetSizeLog:
    type: object
    required:
      - account_id
      - asset_size
      - cash_flow
      - date
      - model_id
      - portfolio_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      asset_size:
        type: number
        format: double
        example: 100
        description: asset_size
      asset_size_available:
        type: number
        format: double
        example: 100
        description: asset_size_available
      asset_size_pending:
        type: number
        format: double
        example: 100
        description: asset_size_pending
      cash_flow:
        type: number
        format: double
        example: 100
        description: cash_flow
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currency_code
      date:
        type: string
        format: date-time
        example: '2018-01-09T00:00:00+0000'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: PortfolioAssetSizeLog
    description: PortfolioAssetSizeLog Object
  PortfolioComment:
    type: object
    required:
      - account_id
      - model_comment_id
      - model_id
      - portfolio_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_read:
        type: boolean
        example: true
        description: isRead
      model_comment_id:
        type: string
        format: uuid
        example: 7f06b7b9-17f7-4390-afb2-1143b3ab7b
        description: modelCommentId
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: PortfolioComment
    description: PortfolioComment Object
  PortfolioGoal:
    type: object
    required:
      - date
      - goals
      - portfolio_id
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: date
      goals:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/PortfolioGoalMap'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      portfolio_id:
        type: string
        format: uuid
        example: f29d942a-7509-41be-8016-46743be0bcc8
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: PortfolioGoal
    description: PortfolioGoal Object
  PortfolioGoalMap:
    type: object
    required:
      - goal_id
      - weight
    properties:
      goal_id:
        type: string
        format: uuid
        example: 6e14259a-9a68-4593-9e6d-8fcd0d05cf44
        description: goal_id
      weight:
        type: number
        format: double
        example: 0.88
        description: weight
    title: PortfolioGoalMap
  PortfolioHolding:
    type: object
    required:
      - account_id
      - date
      - id
      - model_id
      - portfolio_id
      - security_id
      - shares
    properties:
      account_id:
        type: string
        format: uuid
        example: 1
        description: accountId
      amount:
        type: number
        format: double
        example: 100
        description: amount
      cost_basis:
        type: number
        format: double
        example: 100
        description: cost_basis
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        description: currency_code
      date:
        type: string
        format: date-time
        example: '2018-01-09'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: holdingLogId
      model_id:
        type: string
        format: uuid
        example: 1
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: 1
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      security_id:
        type: string
        format: uuid
        example: 1
        description: securityId
      shares:
        type: number
        format: double
        example: 4
        description: shares
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      weight:
        type: number
        format: double
        example: 100
        description: weight
    title: PortfolioHolding
    description: PortfolioHolding Object
  PortfolioHoldingAgg:
    type: object
    properties:
      amount:
        type: number
        format: double
        example: 100
        description: amount
      cost_basis:
        type: number
        format: double
        example: 60
        description: costBasis
      currency_code:
        type: string
        example: USD
        description: currencyCode
      date:
        type: string
        format: date-time
        example: '2017-01-20'
        description: date
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      shares:
        type: number
        format: double
        example: 60
        description: shares
      weight:
        type: number
        format: double
        example: 68.75
        description: weight
    title: PortfolioHoldingAgg
    description: PortfolioHoldingAgg Object
  PortfolioHoldingLog:
    type: object
    required:
      - account_id
      - date
      - model_id
      - portfolio_id
      - security_id
      - shares
    properties:
      account_id:
        type: string
        format: uuid
        example: 1
        description: accountId
      amount:
        type: number
        format: double
        example: 100
        description: amount
      cost_basis:
        type: number
        format: double
        example: 100
        description: cost_basis
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        description: currency_code
      date:
        type: string
        format: date-time
        example: '2018-01-09T00:00:00+0000'
        description: date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      model_id:
        type: string
        format: uuid
        example: 1
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: 1
        description: portfolioId
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      security_id:
        type: string
        format: uuid
        example: 1
        description: securityId
      shares:
        type: number
        format: double
        example: 4
        description: shares
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      weight:
        type: number
        format: double
        example: 100
        description: weight
    title: PortfolioHoldingLog
    description: PortfolioHoldingLog Object
  PortfolioTransaction:
    type: object
    required:
      - account_id
      - date
      - model_id
      - portfolio_id
      - transaction_code_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      amount:
        type: number
        format: double
        example: 100
        description: amount
      balance:
        type: number
        format: double
        example: 100000
        description: balance
      category:
        type: string
        example: category
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currency_code
      date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: date
      date_available:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: dateAvailable
      description:
        type: string
        example: description
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_read:
        type: boolean
        example: true
        description: isRead
      location:
        example: {}
        description: location
        $ref: '#/definitions/Location'
      memo:
        type: string
        example: memo
        description: memo
      merchant:
        type: string
        example: merchant
        description: merchant
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: b4c033db-9d05-4a33-8e28-40650d454487
        description: portfolioId
      price:
        type: number
        format: double
        example: 100
        description: price
      quantity:
        type: number
        format: double
        example: 100
        description: quantity
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      status:
        type: string
        example: status
        description: status
      subcategory:
        type: string
        example: subcategory
        description: subcategory
      transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: alertId
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: PortfolioTransaction
    description: PortfolioTransaction Object
  Question:
    type: object
    properties:
      answers:
        type: array
        items:
          $ref: '#/definitions/Answer'
      category:
        type: string
        example: title
        description: category
      description:
        type: string
        example: description
        description: description
      document:
        type: string
        example: document
        description: document
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      image:
        type: string
        example: image
        description: image
      is_account:
        type: boolean
        example: true
        description: is_account
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      order_index:
        type: string
        example: order_index
        description: order_index
      question_type:
        type: string
        example: question_type
        description: question_type
      questionnaire:
        $ref: '#/definitions/Questionnaire'
      questionnaire_id:
        type: string
        format: uuid
        example: 2feae367-77be-4613-9cd0-f62fd5b3cff9
        description: questionnaireId
      subcategory:
        type: string
        example: subcategory
        description: subcategory
      title:
        type: string
        example: title
        description: title
      tooltip:
        type: string
        example: label
        description: tooltip
      weight:
        type: number
        format: double
        example: 0
        description: weight
    title: Question
    description: Question Object
  Questionnaire:
    type: object
    required:
      - name
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      decision_tree_id:
        type: string
        format: uuid
        example: 28021071-bece-400b-a0f6-23fb13adfcd3
        description: decision_tree_id
      description:
        type: string
        example: retirement questionnaire
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      name:
        type: string
        example: retirement
        description: name
      questions:
        type: array
        items:
          $ref: '#/definitions/Question'
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      type:
        type: string
        example: retirement plan
        description: type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Questionnaire
    description: Questionnaire Object
  RiskProfile:
    type: object
    required:
      - name
    properties:
      category:
        type: string
        example: risk profile category
        description: description
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: risk profile desc
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: profile name
        description: name
      risk_score_max:
        type: number
        format: double
        example: 50
        description: risk_score_max
      risk_score_min:
        type: number
        format: double
        example: 25.0000001
        description: risk_score_min
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: RiskProfile
    description: RiskProfile Object
  Roundup:
    type: object
    required:
      - account_id
      - client_id
      - roundup_setting_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 099961da-7f41-4309-950f-2b51689a0033
        description: account_id
      client_id:
        type: string
        format: uuid
        example: 099961da-7f41-4309-950f-2b51689a0033
        description: client_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      funding_requests:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/FundingRequestMap'
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      roundup_setting_id:
        type: string
        format: uuid
        example: 099961da-7f41-4309-950f-2b51689a0033
        description: roundup_setting_id
      total_roundup_amount:
        type: number
        format: double
        example: 12
        description: totalRoundupAmount
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Roundup
    description: Roundup Object
  RoundupCO:
    type: object
    required:
      - funding_start_date
      - roundup_setting_id
      - transaction_start_date
    properties:
      funding_start_date:
        type: string
        format: date-time
      roundup_setting_id:
        type: string
        format: uuid
      transaction_end_date:
        type: string
        format: date-time
      transaction_start_date:
        type: string
        format: date-time
      update_transactions:
        type: boolean
    title: RoundupCO
  RoundupSettings:
    type: object
    required:
      - account_id
      - bank_links
      - client_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 099961da-7f41-4309-950f-2b51689a0033
        description: account_id
      accounts:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/AccountMap'
      aggregation_accounts:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/AggregationAccountsMap'
      bank_links:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/BankLinkMap'
      categories:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/CategoriesMap'
      client_id:
        type: string
        format: uuid
        example: 099961da-7f41-4309-950f-2b51689a0033
        description: client_id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: is_active
      merchants:
        type: array
        example: {}
        readOnly: true
        items:
          $ref: '#/definitions/MerchantsMap'
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      portfolio_id:
        type: string
        format: uuid
        example: 099961da-7f41-4309-950f-2b51689a0033
        description: portfolio_id
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: RoundupSettings
    description: Roundup Settings Object
  Sale:
    type: object
    required:
      - questions
    properties:
      assigned:
        type: string
        format: uuid
        example: d31c694f-bcb5-427f-b081-91e64e90229a
        description: assigned
      close_time:
        type: string
        format: date-time
        example: '2017-01-03'
        description: closeTime
      closed_by:
        type: string
        format: uuid
        example: 099961da-7f41-4309-950f-2b51689a0033
        description: closedBy
      comments:
        type: string
        example: sample comments
        description: comments
      contacted:
        type: boolean
        example: true
        description: contacted
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      email:
        type: string
        example: sample@example.com
        description: email
      firm_name:
        type: string
        example: xyz inc
        description: firmName
      first_name:
        type: string
        example: John
        description: firstName
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      ip:
        type: string
        example: 127.0.0.1
        description: ip
      last_name:
        type: string
        example: smith
        description: lastName
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      method:
        type: string
        example: email
        description: method
      notification:
        type: boolean
      open_time:
        type: string
        format: date-time
        example: '2017-08-01'
        description: openTime
      phone:
        type: string
        example: 11111111111
        description: phone
      questions:
        type: string
        example: Is it possible to organize a demo?
        description: questions
      referral_source:
        type: string
        example: N/A
        description: referralSource
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      solution:
        type: string
      subject:
        type: string
        example: Example
        description: subject
      title:
        type: string
        example: title
        description: title
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Sale
    description: Sale Object
  Score:
    type: object
    required:
      - score_type
      - score_value
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      allocation_id:
        type: string
        format: uuid
        example: 04907eaa-3f33-49be-a35b-378cdf639fba
        description: allocationId
      benchmark_id:
        type: string
        format: uuid
        example: d79bb3a3-f259-430c-8fa8-a93f87cc3bdf
        description: benchmarkId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      goal_id:
        type: string
        format: uuid
        example: 739ecd39-e1ae-4a0b-b266-dd3ddc616163
        description: goalId
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      model_id:
        type: string
        format: uuid
        example: 62fd0a9f-4bac-4b1d-94d2-2c5ea2adca3d
        description: modelId
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolioId
      score_time_stamp:
        type: string
        format: date-time
      score_type:
        type: string
        example: risk_score
        description: scoreType
        enum:
          - '[goal_achievement_score'
          - portfolio_optimization_score
          - credit_score
          - dimensional_risk_score
          - diversification_score
          - 'risk_score]'
      score_value:
        type: string
        example: 0
        description: scoreValue
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: securityId
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Score
    description: Score Object
  SecuritiesComposition:
    type: object
    required:
      - component_id
      - end_date
      - start_date
      - weight
    properties:
      component_id:
        type: string
        format: uuid
        example: 0000c009-e76f-40cd-a0ad-d4f73bbc700f
        description: Securities Composition component Id
      end_date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: Securities Composition End Date
      start_date:
        type: string
        format: date-time
        example: '2017-01-09''T''12:00:00'
        description: Securities Composition Start Date
      weight:
        type: number
        format: double
        example: 100
        description: Securities Composition weight
    title: SecuritiesComposition
  SecuritiesCountry:
    type: object
    required:
      - country
      - weight
    properties:
      country:
        type: string
        example: US
        description: country
      weight:
        type: number
        format: double
        example: 1
        description: Securities Country weight
    title: SecuritiesCountry
  Security:
    type: object
    required:
      - name
      - ticker
    properties:
      asset_class:
        type: string
        example: US Equity
        description: Security asset class
      category:
        type: string
        example: sample
        description: Security category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currency_code
      cusip:
        type: string
        example: xyz
        description: cusip
      exchange:
        type: string
        example: sample
        description: Security exchange
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      industry:
        type: string
        example: Heavy Construction
        description: Security industry
      is_active:
        type: boolean
        example: true
        description: Security is active
      isin:
        type: string
        example: xyz
        description: isin
      metadata:
        type: object
        example: {}
        description: metadata
        readOnly: true
        additionalProperties:
          type: string
      name:
        type: string
        example: XYZ Holdings Limite
        description: Security name
      proxy_id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        description: proxy_id
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      sector:
        type: string
        example: Industrial Goods
        description: Security sector
      security_class:
        type: string
        example: Mutual Fund
        description: Security class
      security_composition:
        type: array
        items:
          $ref: '#/definitions/SecuritiesComposition'
      security_country:
        type: array
        items:
          $ref: '#/definitions/SecuritiesCountry'
      ticker:
        type: string
        example: JEITX
        description: Security ticker
      total_expense_ratio:
        type: number
        format: float
        example: 10
        description: total_expense_ratio
      type:
        type: string
        example: risky
        description: Security type
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Security
  SecurityCompositionVO:
    type: object
    properties:
      end_date:
        type: string
        format: date-time
      security_asset_class:
        type: string
      security_countries:
        type: array
        items:
          $ref: '#/definitions/SecurityCountryVO'
      security_create_date:
        type: string
        format: date-time
      security_id:
        type: string
        format: uuid
      security_industry:
        type: string
      security_name:
        type: string
      security_secondary_id:
        type: string
      security_sector:
        type: string
      security_security_class:
        type: string
      security_ticker:
        type: string
      security_update_date:
        type: string
        format: date-time
      security_weight:
        type: number
        format: double
      start_date:
        type: string
        format: date-time
    title: SecurityCompositionVO
  SecurityCountryVO:
    type: object
    properties:
      country:
        type: string
      weight:
        type: number
        format: double
    title: SecurityCountryVO
  SecurityDetailVO:
    type: object
    properties:
      name:
        type: string
      security_price_date:
        type: string
        format: date-time
      value:
        type: number
        format: double
      weight:
        type: number
        format: double
    title: SecurityDetailVO
  SecurityExclusion:
    type: object
    required:
      - client_id
      - is_restrict_buy
      - is_restrict_sell
      - security_id
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: account id
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: Client id
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_restrict_buy:
        type: boolean
        example: false
        description: restrict buy
      is_restrict_sell:
        type: boolean
        example: false
        description: restrict sell
      metadata:
        type: object
        additionalProperties:
          type: string
      portfolio_id:
        type: string
        format: uuid
        example: c34794e9-f927-468b-b47e-ea17c3d533c5
        description: portfolio id
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: Security id
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: SecurityExclusion
    description: SecurityExclusion Object
  SecurityPrice:
    type: object
    required:
      - date
      - price
      - security_id
    properties:
      adjusted_price:
        type: number
        format: double
        example: 0.08
        description: Security adjusted price
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      currency_code:
        type: string
        example: USD
        description: currency_code
      date:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: Security date
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      price:
        type: number
        format: double
        example: 0.18
        description: Security price
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      security_id:
        type: string
        format: uuid
        example: 29c3f995-bd45-4346-aea2-fd4476568d4c
        description: Security id
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: SecurityPrice
  Sort:
    type: object
    properties:
      ascending:
        type: boolean
        example: true
        description: ascending
      descending:
        type: boolean
        example: false
        description: descending
      direction:
        type: string
        example: DESC
        description: direction
      ignore_case:
        type: boolean
        example: false
        description: ignoreCase
      null_handling:
        type: string
        example: NATIVE
        description: nullHandling
      property:
        type: string
        example: updateDate
        description: property
    title: Sort
    description: Sort Object
  Stage:
    type: object
    required:
      - name
    properties:
      category:
        type: string
        example: xyz
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: Client has money fully invested
        description: description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_account:
        type: boolean
        example: false
        description: is_account
      is_active:
        type: boolean
        example: true
        description: is_active
      is_client:
        type: boolean
        example: false
        description: is_client
      metadata:
        type: object
        additionalProperties:
          type: string
      name:
        type: string
        example: Fully Invested
        description: name
      order_index:
        type: integer
        format: int32
        example: 1
        description: orderIndex
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: Stage
    description: Stage Object
  State:
    type: object
    properties:
      abbreviation:
        type: string
        example: AL
        description: abbreviation
      country_code:
        type: string
        example: US
        description: countryCode
      state:
        type: string
        example: Alabama
        description: state
    title: State
  StatisticResourceVO:
    type: object
    properties:
      description:
        type: string
      parameter:
        type: string
      stat_name:
        type: string
      type:
        type: string
    title: StatisticResourceVO
  SupportTicket:
    type: object
    required:
      - description
      - open_time
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: 'SupportTicket account Id  '
      assigned_to:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-casd3232ssd
        description: 'SupportTicket assignee id '
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: 'SupportTicket Client Id  '
      close_time:
        type: string
        format: date-time
        example: '2018-01-09''T''12:00:00'
        description: SupportTicket close time
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: sample
        description: SupportTicket description
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      metadata:
        type: object
        additionalProperties:
          type: string
      open_time:
        type: string
        format: date-time
        example: '2018-01-01''T''12:00:00'
        description: SupportTicket open time
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      status:
        type: string
        example: closed
        description: SupportTicket status
      subject:
        type: string
        example: sample
        description: SupportTicket subject
      support_ticket_documents:
        type: array
        items:
          $ref: '#/definitions/SupportTicketDocument'
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: SupportTicket
    description: SupportTicket Object
  SupportTicketComment:
    type: object
    required:
      - support_ticket_id
    properties:
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      description:
        type: string
        example: Login Error
        description: SupportTicket Comment Description
      has_attachment:
        type: boolean
        example: true
        description: Does the SupportTicket Comment contain an attachment
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_admin:
        type: boolean
        example: false
        description: Is the SupportTicket Comment an admin
      is_read:
        type: boolean
        example: false
        description: Is the SupportTicket Comment read
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      support_ticket_documents:
        type: array
        items:
          $ref: '#/definitions/SupportTicketDocument'
      support_ticket_id:
        type: string
        format: uuid
        example: 3551b26c-7080-4c4b-a8fc-9ce9360460ba
        description: SupportTicket Id
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: SupportTicketComment
    description: Support Ticket Comment
  SupportTicketDocument:
    type: object
    required:
      - doc_name
    properties:
      doc_file:
        type: string
        example: sample file
        description: docFile
      doc_name:
        type: string
        example: sample document
        description: docName
      doc_size:
        type: integer
        format: int32
        example: 1500
        description: docSize
      doc_type:
        type: string
        example: documentType
        description: docType
      url_path:
        type: string
        example: 'http://www.xyz.com/sample.pdf'
        description: urlPath
    title: SupportTicketDocument
  TokenDateRequest:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
        example: 11c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: accountId
      buy_transaction_code_id:
        type: string
        format: uuid
        example: f5af397b-7d22-433f-b01e-8202184a6386
        description: buyTransactionCodeId
      client_id:
        type: string
        format: uuid
        example: 2035f52d-2c5b-4e07-8904-cb037bad7aff
        description: clientId
      date:
        type: string
        format: date-time
        example: '2017-03-06'
        description: date
      sell_transaction_code_id:
        type: string
        format: uuid
        example: 7d8d41d0-ed4b-4ae2-acb3-e0baed2ff1cc
        description: sellTransactionCodeId
      tenant_id:
        type: string
        format: uuid
        example: 3551b26c-7080-4c4b-a8fc-9ce9360460ba
        description: tenantId
    title: TokenDateRequest
    description: TokenDateRequest Object
  TransactionCode:
    type: object
    required:
      - transaction_code
    properties:
      category:
        type: string
        example: Deposit
        description: category
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_buy:
        type: boolean
        example: false
        description: isBuy
      metadata:
        type: object
        additionalProperties:
          type: string
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      subcategory:
        type: string
        example: Bank Deposit
        description: subcategory
      transaction_code:
        type: string
        example: codeSell1543998799676
        description: transactionCode
      transaction_code_description:
        type: string
        example: Bank deposit ACH
        description: transactionCodeDescription
      transaction_type:
        type: string
        example: ACH
        description: transactionType
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
    title: TransactionCode
  VAccountAssetSize:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
        example: 1c28dade-8679-4df5-9b9d-c508d04fcb0c
        description: account_id
      asset_size:
        type: number
        format: double
        example: 1
        description: asset_size
      cash_flow:
        type: number
        format: double
        example: 1
        description: cash_flow
      date:
        type: string
        format: date-time
    title: VAccountAssetSize
    description: VAccountAssetSize Object
  VAccountVO:
    type: object
    properties:
      account_id:
        type: string
        format: uuid
      account_name:
        type: string
      account_type_id:
        type: string
        format: uuid
      account_type_name:
        type: string
      goal_asset_size_by_account:
        type: number
        format: double
      goal_asset_size_by_account_date:
        type: string
        format: date-time
    title: VAccountVO
  VClientGoalViewData:
    type: object
    properties:
      client_asset_size:
        type: number
        format: double
      client_asset_size_date:
        type: string
        format: date-time
      client_first_name:
        type: string
      client_id:
        type: string
        format: uuid
      client_last_name:
        type: string
      client_view_goal_data:
        type: array
        items:
          $ref: '#/definitions/ClientViewGoalData'
    title: VClientGoalViewData
  VPortfolioVO:
    type: object
    properties:
      goal_asset_size_by_portfolio:
        type: number
        format: double
      goal_asset_size_by_portfolio_date:
        type: string
        format: date-time
      portfolio_id:
        type: string
        format: uuid
      portfolio_name:
        type: string
    title: VPortfolioVO
  Webhook:
    type: object
    required:
      - url
    properties:
      atom_service:
        type: array
        example:
          - client
          - client_status
          - account_status
          - account
          - card
          - card_status
          - portfolio_asset_size
          - portfolio_transaction
          - portfolio_transaction_status
          - portfolio_holding
          - aggregation_account
          - aggregation_account_status
          - notification_client
          - aggregation_account_balance
          - audit_log
          - support_ticket
          - feature_track
          - aggregation_account_transaction
          - aggregation_account_transaction_status
          - aggregation_account_holding
          - order_track
          - funding
          - funding_status
          - budget
          - document
          - client_response
        description: atom_service
        items:
          type: string
          enum:
            - CLIENT
            - CLIENT_STATUS
            - ACCOUNT_STATUS
            - ACCOUNT
            - CARD
            - CARD_STATUS
            - PORTFOLIO_ASSET_SIZE
            - PORTFOLIO_TRANSACTION
            - PORTFOLIO_TRANSACTION_STATUS
            - PORTFOLIO_HOLDING
            - AGGREGATION_ACCOUNT
            - AGGREGATION_ACCOUNT_STATUS
            - NOTIFICATION_CLIENT
            - AGGREGATION_ACCOUNT_BALANCE
            - AUDIT_LOG
            - SUPPORT_TICKET
            - FEATURE_TRACK
            - AGGREGATION_ACCOUNT_TRANSACTION
            - AGGREGATION_ACCOUNT_TRANSACTION_STATUS
            - AGGREGATION_ACCOUNT_HOLDING
            - ORDER_TRACK
            - FUNDING
            - FUNDING_STATUS
            - BUDGET
            - DOCUMENT
            - CLIENT_RESPONSE
      create_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      id:
        type: string
        format: uuid
        example: 000183ac-2288-4564-a76b-119f4694be98
        readOnly: true
      is_active:
        type: boolean
        example: true
        description: isActive
      secondary_id:
        type: string
        example: 7289243787238
        readOnly: true
      secret:
        type: string
        example: MDAwMTgzYWMtMjI4OC00NTY0LWE3NmItMTE5ZjQ2OTRiZTk4
        readOnly: true
      update_date:
        type: string
        format: date-time
        example: '2018-06-28T18:17:23.579+0000'
        readOnly: true
      url:
        type: string
        example: 'http://localhost/url'
        description: url
    title: Webhook
    description: Webhook Object
  WithdrawalAccountVO:
    type: object
    properties:
      withdrawal_account_id:
        type: string
        format: uuid
      withdrawal_account_name:
        type: string
      withdrawal_amount:
        type: number
        format: double
      withdrawal_date:
        type: string
        format: date-time
      withdrawal_direction:
        type: string
      withdrawal_id:
        type: string
        format: uuid
    title: WithdrawalAccountVO
  WithdrawalVO:
    type: object
    properties:
      withdrawal_amount:
        type: number
        format: double
      withdrawal_date:
        type: string
        format: date-time
      withdrawal_direction:
        type: string
      withdrawal_id:
        type: string
        format: uuid
    title: WithdrawalVO
