=begin
#Hydrogen Nucleus API

#The Hydrogen Nucleus API

OpenAPI spec version: 1.8.0
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'spec_helper'
require 'json'

# Unit tests for NucleusApi::ResourceApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ResourceApi' do
  before do
    # run before each test
    @instance = NucleusApi::ResourceApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ResourceApi' do
    it 'should create an instance of ResourceApi' do
      expect(@instance).to be_instance_of(NucleusApi::ResourceApi)
    end
  end

  # unit tests for create_fx_rate_bulk_using_post
  # Create a bulk fxRate
  # Create a bulk fxRate.
  # @param fx_rate_list fxRateList
  # @param [Hash] opts the optional parameters
  # @return [Array<FxRate>]
  describe 'create_fx_rate_bulk_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_country_using_get
  # Get All Countries
  # Get All Countries. 
  # @param [Hash] opts the optional parameters
  # @return [Array<Country>]
  describe 'get_all_country_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_currency_using_get
  # Get All Currencies
  # Get All Currencies. 
  # @param [Hash] opts the optional parameters
  # @return [Array<Currency>]
  describe 'get_all_currency_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_merchant_category_code_using_get
  # Get All Merchant Category Codes
  # Get All Merchant Category Codes.
  # @param [Hash] opts the optional parameters
  # @return [Array<MerchantCategoryCode>]
  describe 'get_all_merchant_category_code_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_states_using_get
  # List all state resource
  # Get the information for all possible state resource.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :country_code country_code
  # @return [Array<State>]
  describe 'get_all_states_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_all_statistics_using_get
  # List all statistic resource
  # Get the information for all possible statistic resource.
  # @param [Hash] opts the optional parameters
  # @return [Hash<String, Array<StatisticResourceVO>>]
  describe 'get_all_statistics_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_currency_exchange_rate_all_using_get
  # List all fxRates
  # Get information for all fxRates defined for your firm.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter filter
  # @return [Array<FxRateView>]
  describe 'get_currency_exchange_rate_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
