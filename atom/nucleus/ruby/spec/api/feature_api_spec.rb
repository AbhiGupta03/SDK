=begin
#Hydrogen Atom API

#The Hydrogen Atom API

OpenAPI spec version: 1.7.0
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'spec_helper'
require 'json'

# Unit tests for AtomApi::FeatureApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'FeatureApi' do
  before do
    # run before each test
    @instance = AtomApi::FeatureApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FeatureApi' do
    it 'should create an instance of FeatureApi' do
      expect(@instance).to be_instance_of(AtomApi::FeatureApi)
    end
  end

  # unit tests for create_feature_track_using_post
  # Create a Feature Track
  # Create a new feature track.
  # @param feature_track featureTrack
  # @param [Hash] opts the optional parameters
  # @return [FeatureTrack]
  describe 'create_feature_track_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_feature_using_post
  # Create a  Feature
  # Create a new feature.
  # @param feature feature
  # @param [Hash] opts the optional parameters
  # @return [Feature]
  describe 'create_feature_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_feature_track_using_delete
  # Delete a Feature Track
  # Permanently delete a feature track registered with your firm.
  # @param feature_track_id UUID feature_track_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_feature_track_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_feature_using_delete
  # Delete a Feature
  # Permanently delete a  feature registered with your firm.
  # @param feature_id UUID feature_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_feature_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_feature_all_using_get
  # List all Feature
  # Get details for all features.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageFeature]
  describe 'get_feature_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_feature_track_all_using_get
  # List all Feature track
  # Get details for all feature track.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageFeatureTrack]
  describe 'get_feature_track_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_feature_track_using_get
  # Retrieve a Feature track
  # Retrieve the information for a Feature track.
  # @param feature_track_id UUID feature_track_id
  # @param [Hash] opts the optional parameters
  # @return [FeatureTrack]
  describe 'get_feature_track_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_feature_using_get
  # Retrieve a Feature
  # Retrieve the information for a Feature.
  # @param feature_id UUID feature_id
  # @param [Hash] opts the optional parameters
  # @return [Feature]
  describe 'get_feature_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_feature_track_using_put
  # Update a Feature Track
  # Update the information for a Feature track registered with your firm.
  # @param feature_track feature_track
  # @param feature_track_id UUID feature_track_id
  # @param [Hash] opts the optional parameters
  # @return [FeatureTrack]
  describe 'update_feature_track_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_feature_using_put
  # Update a Feature
  # Update the information for a Feature registered with your firm.
  # @param feature feature
  # @param feature_id UUID feature_id
  # @param [Hash] opts the optional parameters
  # @return [Feature]
  describe 'update_feature_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
