=begin
#Hydrogen Atom API

#The Hydrogen Atom API

OpenAPI spec version: 1.7.0
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'spec_helper'
require 'json'

# Unit tests for NucleusApi::MarketingApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'MarketingApi' do
  before do
    # run before each test
    @instance = NucleusApi::MarketingApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of MarketingApi' do
    it 'should create an instance of MarketingApi' do
      expect(@instance).to be_instance_of(NucleusApi::MarketingApi)
    end
  end

  # unit tests for create_campaign_data_using_post
  # Create a campaign data record
  # Create a new  campaign data record for your firm.
  # @param campaign_data_request campaignDataRequest
  # @param [Hash] opts the optional parameters
  # @return [CampaignData]
  describe 'create_campaign_data_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_campaign_plan_using_post
  # Create a campaign plan
  # Create a new campaign plan for your firm.
  # @param campaign_plan_request campaignPlanRequest
  # @param [Hash] opts the optional parameters
  # @return [CampaignPlan]
  describe 'create_campaign_plan_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_campaign_using_post
  # Create a campaign
  # Create a new campaign for your firm.
  # @param campaign_request campaignRequest
  # @param [Hash] opts the optional parameters
  # @return [Campaign]
  describe 'create_campaign_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_client_campaign_using_post
  # Mark a client signing up through a campaign
  # We are adding a campaign association to a clientId or ip.  We create this association because we are trying to measure how affective a campaign is in directing traffic to our website.  
  # @param campaign_mapping_request campaignMappingRequest
  # @param [Hash] opts the optional parameters
  # @return [ClientCampaignMapping]
  describe 'create_client_campaign_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_campaign_data_using_delete
  # Delete a campaign data record
  # Permanently delete a campaign data record
  # @param campaign_data_id UUID campaign_data_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_campaign_data_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_campaign_plan_using_delete
  # Delete a campaign plan
  # Permanently delete a campaign plan
  # @param campaign_plan_id UUID campaign_plan_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_campaign_plan_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_campaign_using_delete
  # Delete a campaign
  # Permanently delete a campaign
  # @param campaign_id Campaign Id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_campaign_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_client_campaign_using_delete
  # Delete a clients/ips pair under a campaign
  # Permanently delete a clients/ips pair under a campaign
  # @param client_campaign_id UUID client_campaign_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_client_campaign_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_campaign_all_using_get
  # List all campaigns
  # Get details for all campaigns defined for your firm.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageCampaign]
  describe 'get_campaign_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_campaign_data_all_using_get
  # List all campaign data
  # Get details for all campaign data defined for your firm.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageCampaignData]
  describe 'get_campaign_data_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_campaign_data_using_get
  # Retrieve a campaign data record
  # Retrieve the information for a campaign data record
  # @param campaign_data_id UUID campaign_data_id
  # @param [Hash] opts the optional parameters
  # @return [CampaignData]
  describe 'get_campaign_data_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_campaign_plan_all_using_get
  # List all campaign plans
  # Get details for all campaign plans defined for your firm.
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageCampaignPlan]
  describe 'get_campaign_plan_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_campaign_plan_using_get
  # Retrieve a campaign plan
  # Retrieve the information for a campaign plan
  # @param campaign_plan_id UUID campaign_plan_id
  # @param [Hash] opts the optional parameters
  # @return [CampaignPlan]
  describe 'get_campaign_plan_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_campaign_using_get
  # Retrieve a campaign
  # Retrieve the information for a campaign.
  # @param campaign_id Campaign Id
  # @param [Hash] opts the optional parameters
  # @return [Campaign]
  describe 'get_campaign_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_client_campaign_all_using_get
  # List all clients/ips under a campaign
  # Get details for all clients/ips under a campaign
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageClientCampaignMapping]
  describe 'get_client_campaign_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_client_campaign_using_get
  # Retrieve a clients/ips pair under a campaign
  # Retrieve the information for a clients/ips pair under a campaign
  # @param client_campaign_id UUID client_campaign_id
  # @param [Hash] opts the optional parameters
  # @return [ClientCampaignMapping]
  describe 'get_client_campaign_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_campaign_data_using_put
  # Update a campaign data record
  # Updated the information for a campaign data record
  # @param campaign_data campaign_data
  # @param campaign_data_id UUID campaign_data_id
  # @param [Hash] opts the optional parameters
  # @return [CampaignData]
  describe 'update_campaign_data_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_campaign_plan_using_put
  # Update a campaign plan
  # Updated the information for a campaign plan
  # @param campaign_plan campaign_plan
  # @param campaign_plan_id UUID campaign_plan_id
  # @param [Hash] opts the optional parameters
  # @return [CampaignPlan]
  describe 'update_campaign_plan_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_campaign_using_put
  # Update a campaign
  # Updated the information for a campaign
  # @param campaign campaign
  # @param campaign_id UUID campaign_id
  # @param [Hash] opts the optional parameters
  # @return [Campaign]
  describe 'update_campaign_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_client_campaign_using_put
  # Update a clients/ips pair under a campaign
  # Updated the information for clients/ips pair under a campaign
  # @param client_campaign_id UUID client_campaign_id
  # @param json_node jsonNode
  # @param [Hash] opts the optional parameters
  # @return [ClientCampaignMapping]
  describe 'update_client_campaign_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
