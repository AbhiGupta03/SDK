=begin
#Hydrogen Nucleus API

#The Hydrogen Nucleus API

OpenAPI spec version: 1.8.0
Contact: info@hydrogenplatform.com
Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.15

=end

require 'spec_helper'
require 'json'

# Unit tests for NucleusApi::NotificationApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'NotificationApi' do
  before do
    # run before each test
    @instance = NucleusApi::NotificationApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of NotificationApi' do
    it 'should create an instance of NotificationApi' do
      expect(@instance).to be_instance_of(NucleusApi::NotificationApi)
    end
  end

  # unit tests for create_notification_client_using_post
  # Create a Notification Client
  # Create a new Notification Client. 
  # @param notification_client notificationClient
  # @param [Hash] opts the optional parameters
  # @return [NotificationClient]
  describe 'create_notification_client_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_notification_setting_using_post
  # Create a Notification Setting
  # Create a new Notification Setting. 
  # @param notification_setting notificationSetting
  # @param [Hash] opts the optional parameters
  # @return [NotificationSetting]
  describe 'create_notification_setting_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for create_notification_using_post
  # Create a Notification
  # Create a new Notification. 
  # @param notification notification
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'create_notification_using_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_notification_client_using_delete
  # Delete a Notification Client
  # Permanently Delete Notification Client.
  # @param notification_client_id notification_client_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_notification_client_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_notification_setting_using_delete
  # Delete a Notification Setting
  # Permanently Delete Notification Setting. 
  # @param notification_setting_id notification_setting_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_notification_setting_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_notification_using_delete
  # Delete a Notification
  # Permanently Delete a Notification. 
  # @param notification_id UUID notification_id
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'delete_notification_using_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_notification_all_using_get
  # Get All Notifications
  # Get All Notification. 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageNotification]
  describe 'get_notification_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_notification_client_all_using_get
  # List all Notification Client
  # List all Notification Client. 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageNotificationClient]
  describe 'get_notification_client_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_notification_client_using_get
  # Retrieve a Notification Client
  # Retrieve a  Notification Client. 
  # @param notification_client_id notification_client_id
  # @param [Hash] opts the optional parameters
  # @return [NotificationClient]
  describe 'get_notification_client_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_notification_setting_all_using_get
  # List all Notification Setting
  # List all Notification Setting. 
  # @param [Hash] opts the optional parameters
  # @option opts [BOOLEAN] :ascending ascending
  # @option opts [String] :filter filter
  # @option opts [String] :order_by order_by
  # @option opts [Integer] :page page
  # @option opts [Integer] :size size
  # @return [PageNotificationSetting]
  describe 'get_notification_setting_all_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_notification_setting_using_get
  # Retrieve a Notification Setting
  # Retrieve a  Notification Setting. 
  # @param notification_setting_id notification_setting_id
  # @param [Hash] opts the optional parameters
  # @return [NotificationSetting]
  describe 'get_notification_setting_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_notification_using_get
  # Get a Notification
  # Get a Notification. 
  # @param notification_id notification_id
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'get_notification_using_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_notification_client_using_put
  # Update a Notification Client
  # Update a  Notification Client. 
  # @param notification_client notification_client
  # @param notification_client_id UUID notification_client_id
  # @param [Hash] opts the optional parameters
  # @return [NotificationClient]
  describe 'update_notification_client_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_notification_setting_using_put
  # Update a Notification Setting
  # Update a  Notification Setting. 
  # @param notification_setting notification_setting
  # @param notification_setting_id UUID notification_setting_id
  # @param [Hash] opts the optional parameters
  # @return [NotificationSetting]
  describe 'update_notification_setting_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_notification_using_put
  # Update a Notification
  # Update a Notification. 
  # @param notification notification
  # @param notification_id UUID notification_id
  # @param [Hash] opts the optional parameters
  # @return [Notification]
  describe 'update_notification_using_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
