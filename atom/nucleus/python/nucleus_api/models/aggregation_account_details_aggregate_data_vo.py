# coding: utf-8

"""
    Hydrogen Atom API

    The Hydrogen Atom API  # noqa: E501

    OpenAPI spec version: 1.7.0
    Contact: info@hydrogenplatform.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class AggregationAccountDetailsAggregateDataVO(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'account_holder': 'str',
        'account_name': 'str',
        'account_number': 'str',
        'asset': 'bool',
        'category': 'str',
        'create_date': 'datetime',
        'currency_code': 'str',
        'financial_offer_id': 'str',
        'institution_name': 'str',
        'mask': 'str',
        'metadata': 'dict(str, str)',
        'secondary_id': 'str',
        'subcategory': 'str',
        'update_date': 'datetime'
    }

    attribute_map = {
        'account_holder': 'account_holder',
        'account_name': 'account_name',
        'account_number': 'account_number',
        'asset': 'asset',
        'category': 'category',
        'create_date': 'create_date',
        'currency_code': 'currency_code',
        'financial_offer_id': 'financial_offer_id',
        'institution_name': 'institution_name',
        'mask': 'mask',
        'metadata': 'metadata',
        'secondary_id': 'secondary_id',
        'subcategory': 'subcategory',
        'update_date': 'update_date'
    }

    def __init__(self, account_holder=None, account_name=None, account_number=None, asset=None, category=None, create_date=None, currency_code=None, financial_offer_id=None, institution_name=None, mask=None, metadata=None, secondary_id=None, subcategory=None, update_date=None):  # noqa: E501
        """AggregationAccountDetailsAggregateDataVO - a model defined in Swagger"""  # noqa: E501

        self._account_holder = None
        self._account_name = None
        self._account_number = None
        self._asset = None
        self._category = None
        self._create_date = None
        self._currency_code = None
        self._financial_offer_id = None
        self._institution_name = None
        self._mask = None
        self._metadata = None
        self._secondary_id = None
        self._subcategory = None
        self._update_date = None
        self.discriminator = None

        if account_holder is not None:
            self.account_holder = account_holder
        if account_name is not None:
            self.account_name = account_name
        if account_number is not None:
            self.account_number = account_number
        if asset is not None:
            self.asset = asset
        if category is not None:
            self.category = category
        if create_date is not None:
            self.create_date = create_date
        if currency_code is not None:
            self.currency_code = currency_code
        if financial_offer_id is not None:
            self.financial_offer_id = financial_offer_id
        if institution_name is not None:
            self.institution_name = institution_name
        if mask is not None:
            self.mask = mask
        if metadata is not None:
            self.metadata = metadata
        if secondary_id is not None:
            self.secondary_id = secondary_id
        if subcategory is not None:
            self.subcategory = subcategory
        if update_date is not None:
            self.update_date = update_date

    @property
    def account_holder(self):
        """Gets the account_holder of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The account_holder of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: str
        """
        return self._account_holder

    @account_holder.setter
    def account_holder(self, account_holder):
        """Sets the account_holder of this AggregationAccountDetailsAggregateDataVO.


        :param account_holder: The account_holder of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: str
        """

        self._account_holder = account_holder

    @property
    def account_name(self):
        """Gets the account_name of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The account_name of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this AggregationAccountDetailsAggregateDataVO.


        :param account_name: The account_name of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: str
        """

        self._account_name = account_name

    @property
    def account_number(self):
        """Gets the account_number of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The account_number of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this AggregationAccountDetailsAggregateDataVO.


        :param account_number: The account_number of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: str
        """

        self._account_number = account_number

    @property
    def asset(self):
        """Gets the asset of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The asset of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: bool
        """
        return self._asset

    @asset.setter
    def asset(self, asset):
        """Sets the asset of this AggregationAccountDetailsAggregateDataVO.


        :param asset: The asset of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: bool
        """

        self._asset = asset

    @property
    def category(self):
        """Gets the category of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The category of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this AggregationAccountDetailsAggregateDataVO.


        :param category: The category of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: str
        """

        self._category = category

    @property
    def create_date(self):
        """Gets the create_date of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The create_date of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this AggregationAccountDetailsAggregateDataVO.


        :param create_date: The create_date of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: datetime
        """

        self._create_date = create_date

    @property
    def currency_code(self):
        """Gets the currency_code of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The currency_code of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this AggregationAccountDetailsAggregateDataVO.


        :param currency_code: The currency_code of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: str
        """

        self._currency_code = currency_code

    @property
    def financial_offer_id(self):
        """Gets the financial_offer_id of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The financial_offer_id of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: str
        """
        return self._financial_offer_id

    @financial_offer_id.setter
    def financial_offer_id(self, financial_offer_id):
        """Sets the financial_offer_id of this AggregationAccountDetailsAggregateDataVO.


        :param financial_offer_id: The financial_offer_id of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: str
        """

        self._financial_offer_id = financial_offer_id

    @property
    def institution_name(self):
        """Gets the institution_name of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The institution_name of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: str
        """
        return self._institution_name

    @institution_name.setter
    def institution_name(self, institution_name):
        """Sets the institution_name of this AggregationAccountDetailsAggregateDataVO.


        :param institution_name: The institution_name of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: str
        """

        self._institution_name = institution_name

    @property
    def mask(self):
        """Gets the mask of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The mask of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: str
        """
        return self._mask

    @mask.setter
    def mask(self, mask):
        """Sets the mask of this AggregationAccountDetailsAggregateDataVO.


        :param mask: The mask of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: str
        """

        self._mask = mask

    @property
    def metadata(self):
        """Gets the metadata of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The metadata of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: dict(str, str)
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this AggregationAccountDetailsAggregateDataVO.


        :param metadata: The metadata of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: dict(str, str)
        """

        self._metadata = metadata

    @property
    def secondary_id(self):
        """Gets the secondary_id of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The secondary_id of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: str
        """
        return self._secondary_id

    @secondary_id.setter
    def secondary_id(self, secondary_id):
        """Sets the secondary_id of this AggregationAccountDetailsAggregateDataVO.


        :param secondary_id: The secondary_id of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: str
        """

        self._secondary_id = secondary_id

    @property
    def subcategory(self):
        """Gets the subcategory of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The subcategory of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: str
        """
        return self._subcategory

    @subcategory.setter
    def subcategory(self, subcategory):
        """Sets the subcategory of this AggregationAccountDetailsAggregateDataVO.


        :param subcategory: The subcategory of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: str
        """

        self._subcategory = subcategory

    @property
    def update_date(self):
        """Gets the update_date of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501


        :return: The update_date of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :rtype: datetime
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this AggregationAccountDetailsAggregateDataVO.


        :param update_date: The update_date of this AggregationAccountDetailsAggregateDataVO.  # noqa: E501
        :type: datetime
        """

        self._update_date = update_date

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AggregationAccountDetailsAggregateDataVO, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AggregationAccountDetailsAggregateDataVO):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
