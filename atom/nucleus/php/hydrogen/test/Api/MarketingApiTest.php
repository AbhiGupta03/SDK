<?php
/**
 * MarketingApiTest
 * PHP version 5
 *
 * @category Class
 * @package  com\hydrogen\nucleus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Hydrogen Nucleus API
 *
 * The Hydrogen Nucleus API
 *
 * OpenAPI spec version: 1.8.0
 * Contact: info@hydrogenplatform.com
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.15
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace com\hydrogen\nucleus;

use \com\hydrogen\nucleus\Configuration;
use \com\hydrogen\nucleus\ApiException;
use \com\hydrogen\nucleus\ObjectSerializer;

/**
 * MarketingApiTest Class Doc Comment
 *
 * @category Class
 * @package  com\hydrogen\nucleus
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class MarketingApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for createCampaignDataUsingPost
     *
     * Create a campaign data record.
     *
     */
    public function testCreateCampaignDataUsingPost()
    {
    }

    /**
     * Test case for createCampaignPlanUsingPost
     *
     * Create a campaign plan.
     *
     */
    public function testCreateCampaignPlanUsingPost()
    {
    }

    /**
     * Test case for createCampaignUsingPost
     *
     * Create a campaign.
     *
     */
    public function testCreateCampaignUsingPost()
    {
    }

    /**
     * Test case for createClientCampaignUsingPost
     *
     * Mark a client signing up through a campaign.
     *
     */
    public function testCreateClientCampaignUsingPost()
    {
    }

    /**
     * Test case for deleteCampaignDataUsingDelete
     *
     * Delete a campaign data record.
     *
     */
    public function testDeleteCampaignDataUsingDelete()
    {
    }

    /**
     * Test case for deleteCampaignPlanUsingDelete
     *
     * Delete a campaign plan.
     *
     */
    public function testDeleteCampaignPlanUsingDelete()
    {
    }

    /**
     * Test case for deleteCampaignUsingDelete
     *
     * Delete a campaign.
     *
     */
    public function testDeleteCampaignUsingDelete()
    {
    }

    /**
     * Test case for deleteClientCampaignUsingDelete
     *
     * Delete a clients/ips pair under a campaign.
     *
     */
    public function testDeleteClientCampaignUsingDelete()
    {
    }

    /**
     * Test case for getCampaignAllUsingGet
     *
     * List all campaigns.
     *
     */
    public function testGetCampaignAllUsingGet()
    {
    }

    /**
     * Test case for getCampaignDataAllUsingGet
     *
     * List all campaign data.
     *
     */
    public function testGetCampaignDataAllUsingGet()
    {
    }

    /**
     * Test case for getCampaignDataUsingGet
     *
     * Retrieve a campaign data record.
     *
     */
    public function testGetCampaignDataUsingGet()
    {
    }

    /**
     * Test case for getCampaignPlanAllUsingGet
     *
     * List all campaign plans.
     *
     */
    public function testGetCampaignPlanAllUsingGet()
    {
    }

    /**
     * Test case for getCampaignPlanUsingGet
     *
     * Retrieve a campaign plan.
     *
     */
    public function testGetCampaignPlanUsingGet()
    {
    }

    /**
     * Test case for getCampaignUsingGet
     *
     * Retrieve a campaign.
     *
     */
    public function testGetCampaignUsingGet()
    {
    }

    /**
     * Test case for getClientCampaignAllUsingGet
     *
     * List all clients/ips under a campaign.
     *
     */
    public function testGetClientCampaignAllUsingGet()
    {
    }

    /**
     * Test case for getClientCampaignUsingGet
     *
     * Retrieve a clients/ips pair under a campaign.
     *
     */
    public function testGetClientCampaignUsingGet()
    {
    }

    /**
     * Test case for updateCampaignDataUsingPut
     *
     * Update a campaign data record.
     *
     */
    public function testUpdateCampaignDataUsingPut()
    {
    }

    /**
     * Test case for updateCampaignPlanUsingPut
     *
     * Update a campaign plan.
     *
     */
    public function testUpdateCampaignPlanUsingPut()
    {
    }

    /**
     * Test case for updateCampaignUsingPut
     *
     * Update a campaign.
     *
     */
    public function testUpdateCampaignUsingPut()
    {
    }

    /**
     * Test case for updateClientCampaignUsingPut
     *
     * Update a clients/ips pair under a campaign.
     *
     */
    public function testUpdateClientCampaignUsingPut()
    {
    }
}
