/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.7.18
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.hydrogen.api;

import com.hydrogen.ApiException;
import com.hydrogen.model.DiversificationScoreRequest;
import com.hydrogen.model.EmergencyFundCalculatorRequest;
import com.hydrogen.model.PortfolioOptimizationScoreRequest;
import com.hydrogen.model.FinancialHealthCheckRequest;
import org.junit.Test;
import org.junit.Ignore;

import java.util.Map;

/**
 * API tests for FinancialHealthApi
 */
@Ignore
public class FinancialHealthApiTest {

    private final FinancialHealthApi api = new FinancialHealthApi();

    
    /**
     * Diversification Score
     *
     * Assess how well a group of investments is diversified
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void diversificationScoreTest() throws ApiException {
        DiversificationScoreRequest diversificationScoreRequest = null;
        Map<String, Object> response = api.diversificationScore(diversificationScoreRequest);

        // TODO: test validations
    }
    
    /**
     * Emergency Fund Calculator
     *
     * Calculate a target emergency fund amount and savings plan
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void emergencyFundCalculatorTest() throws ApiException {
        EmergencyFundCalculatorRequest emergencyFundCalculatorRequest = null;
        Map<String, Object> response = api.emergencyFundCalculator(emergencyFundCalculatorRequest);

        // TODO: test validations
    }
    
    /**
     * Financial Health Check
     *
     * Calculate a series of financial ratios to assess financial health
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void financialHealthCheckTest() throws ApiException {
        FinancialHealthCheckRequest financialHealthCheckRequest = null;
        Map<String, Object> response = api.financialHealthCheck(financialHealthCheckRequest);

        // TODO: test validations
    }
    
    /**
     * Portfolio Optimization Score
     *
     * Analyze a group of investments against the optimized result
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void portfolioOptimizationScoreTest() throws ApiException {
        PortfolioOptimizationScoreRequest portfolioOptimizationScoreRequest = null;
        Map<String, Object> response = api.portfolioOptimizationScore(portfolioOptimizationScoreRequest);

        // TODO: test validations
    }
    
}
