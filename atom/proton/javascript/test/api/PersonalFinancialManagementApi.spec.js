/*
 * Hydrogen Proton API
 * Financial engineering module of Hydrogen Atom
 *
 * OpenAPI spec version: 1.7.18
 * Contact: info@hydrogenplatform.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.14
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HydrogenProtonApi);
  }
}(this, function(expect, HydrogenProtonApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HydrogenProtonApi.PersonalFinancialManagementApi();
  });

  describe('(package)', function() {
    describe('PersonalFinancialManagementApi', function() {
      describe('budgetCalculator', function() {
        it('should call budgetCalculator successfully', function(done) {
          // TODO: uncomment, update parameter values for budgetCalculator call and complete the assertions
          /*
          var budgetCalculatorRequest = new HydrogenProtonApi.BudgetCalculatorRequest();
          budgetCalculatorRequest.relativeLookback = false;
          budgetCalculatorRequest.lookbackPeriods = 0;
          budgetCalculatorRequest.asOfDate = new Date();
          budgetCalculatorRequest.budgetId = """00000000-0000-0000-0000-000000000000";

          instance.budgetCalculator(budgetCalculatorRequest, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Object);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(Object);
              // expect(data).to.be(null);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('cashFlowAnalysis', function() {
        it('should call cashFlowAnalysis successfully', function(done) {
          // TODO: uncomment, update parameter values for cashFlowAnalysis call and complete the assertions
          /*
          var cashFlowAnalysisRequest = new HydrogenProtonApi.CashFlowAnalysisRequest();
          cashFlowAnalysisRequest.showHistory = false;
          cashFlowAnalysisRequest.startDate = new Date();
          cashFlowAnalysisRequest.endDate = new Date();
          cashFlowAnalysisRequest.clientId = """00000000-0000-0000-0000-000000000000";
          cashFlowAnalysisRequest.currencyCode = "";
          cashFlowAnalysisRequest.showIncomeDetails = false;
          cashFlowAnalysisRequest.benchmarkEndDate = new Date();
          cashFlowAnalysisRequest.showSpendingDetails = false;
          cashFlowAnalysisRequest.benchmarkStartDate = new Date();

          instance.cashFlowAnalysis(cashFlowAnalysisRequest, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Object);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(Object);
              // expect(data).to.be(null);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
      describe('financialPicture', function() {
        it('should call financialPicture successfully', function(done) {
          // TODO: uncomment, update parameter values for financialPicture call and complete the assertions
          /*
          var financialPictureRequest = new HydrogenProtonApi.FinancialPictureRequest();
          financialPictureRequest.showCategoryBreakdown = false;
          financialPictureRequest.showHistory = false;
          financialPictureRequest.startDate = new Date();
          financialPictureRequest.endDate = new Date();
          financialPictureRequest.currencyCode = "";
          financialPictureRequest.clientId = """00000000-0000-0000-0000-000000000000";
          financialPictureRequest.showChange = false;

          instance.financialPicture(financialPictureRequest, function(error, data, response) {
            if (error) {
              done(error);
              return;
            }
            // TODO: update response assertions
            let dataCtr = data;
            expect(dataCtr).to.be.an(Object);
            expect(dataCtr).to.not.be.empty();
            for (let p in dataCtr) {
              let data = dataCtr[p];
              expect(data).to.be.a(Object);
              // expect(data).to.be(null);
            }

            done();
          });
          */
          // TODO: uncomment and complete method invocation above, then delete this line and the next:
          done();
        });
      });
    });
  });

}));
